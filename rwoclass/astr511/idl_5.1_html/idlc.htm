<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML EXPERIMENTAL 970324//EN">
<HTML>
<STYLE><!--
H1         { font-family: Stone Sans, Helvetica, Arial, sans-serif }
H1.Chapter-Name    { font-size: 36pt }
H2         { font-family: Stone Sans, Helvetica, Arial, sans-serif }
H3         { font-family: Stone Sans, Helvetica, Arial, sans-serif }
H4         { font-family: Stone Sans, Helvetica, Arial, sans-serif }
H5         { font-family: Stone Sans, Helvetica, Arial, sans-serif ;
             margin-top: -5.0pt ; font-size: 12pt }
H6         { font-family: Stone Sans, Helvetica, Arial, sans-serif ;
             margin-top: -5.0pt ; font-size: 12pt }
P          { font-family: Minion, Times, serif }
P.api      { font-family: Courier ; font-weight: Bold }
P.Code     { font-family: Courier, serif ; font-size: 10pt}
P.Code-2   { font-family: Courier, serif ; font-size: 10pt}
P.Code-Result   { font-family: Courier, serif ; font-size: 10pt ;
                  font-weight: Bold}
P.ChapTOC  { font-family: Stone Sans, Helvetica, Arial, sans-serif }
P.Chapter-NameTOC   { font-family: Stone Sans, Helvetica, Arial, sans-serif ;
		      font-size: 20pt; font-weight: Bold }
P.Level2IX	{margin-left: 10pt }
LI.Code-Numbered     { font-family: Courier, serif ; font-size: 10pt}
LI.Code-Numbered-1   { font-family: Courier, serif ; font-size: 10pt}
--></STYLE>

<HEAD>
<META NAME="GENERATOR" CONTENT="Adobe FrameMaker 5.5/HTML Export Filter">

<TITLE> ASSOC</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">
<DIV>
<DIV><table width="100%" border=0 cellspacing=0 cellpadding=0> <TR>  <TD></TD>   <TD  bgcolor="#ffffff">     <IMG SRC = "idlmap.gif" USEMAP = "#idlmap.gif" BORDER = 0>   </TD> </TR></TABLE><MAP NAME = "idlmap.gif"><AREA SHAPE=RECT HREF="idld.htm" COORDS="290, 29, 344, 43"><AREA SHAPE=RECT HREF="idl.htm" COORDS="139, 29, 239, 46"><AREA SHAPE=RECT HREF="idlb.htm" COORDS="0, 29, 98, 46"><AREA SHAPE=RECT HREF="idl.htm" COORDS="68, 0, 275, 18"></MAP></DIV><HR></DIV>
<H2 CLASS="Routine-Name">
<A NAME="pgfId=675739">
 </A>
<A NAME="76025">
 </A>
ASSOC</H2>
<P CLASS="Body">
<A NAME="pgfId=675740">
 </A>
The <A NAME="marker=672464">
 </A>
ASSOC function associates an array structure with a file. It provides a basic method of random access <A NAME="marker=672465">
 </A>
input/output in IDL. An <A NAME="marker=672469">
 </A>
<I CLASS="Italics">
associated variable</I>
, which stores this association, is created by assigning the result of ASSOC to a <A NAME="marker=672470">
 </A>
variable. This variable provides a means of mapping a file into vectors or arrays of a specified type and size.</P>
<UL>
<P CLASS="Note"><b><FONT SIZE=+1>NOTE: </FONT></b>
<A NAME="pgfId=868866">
 </A>
Unformatted data files generated by FORTRAN programs under UNIX contain an extra long word before and after each logical record in the file. ASSOC does not interpret these extra bytes but considers them to be part of the data. This is true even if the F77_UNFORMATTED keyword is specified on the <A HREF="idl130.htm#59773" CLASS="XRef">
OPEN</A>
 statement. Therefore, ASSOC should not be used with such files. Instead, such files should be processed using <A HREF="idl171.htm#52434" CLASS="XRef">
READU</A>
 and <A HREF="idl218.htm#93251" CLASS="XRef">
WRITEU</A>
. An example of using IDL to read such data is given in <A HREF="..html#76971" CLASS="XRef">
Using Unformatted Input/Output</A>
.</LI>
</UL>
<DIV>
<H3 CLASS="Heading-1R">
<A NAME="pgfId=675741">
 </A>
Calling Sequence</H3>
<P CLASS="Body">
<A NAME="pgfId=675742">
 </A>
Result = ASSOC(<I CLASS="Italics">
Unit, Array_Structure [, Offset]</I>
)</P>
</DIV>
<DIV>
<H3 CLASS="Heading-1R">
<A NAME="pgfId=675743">
 </A>
Arguments</H3>
<DIV>
<H4 CLASS="Argument">
<A NAME="pgfId=675744">
 </A>
Unit</H4>
<P CLASS="Body">
<A NAME="pgfId=675745">
 </A>
The IDL file unit to associate with <I CLASS="Italics">
Array_Structure</I>
.</P>
</DIV>
<DIV>
<H4 CLASS="Argument">
<A NAME="pgfId=675746">
 </A>
Array_Structure</H4>
<P CLASS="Body">
<A NAME="pgfId=675747">
 </A>
An expression of the data type and structure to be associated with <I CLASS="Italics">
Unit</I>
 are taken from <I CLASS="Italics">
Array_Structure</I>
. The actual value of <I CLASS="Italics">
Array_Structure</I>
 is not used.</P>
</DIV>
<DIV>
<H4 CLASS="Argument">
<A NAME="pgfId=675748">
 </A>
Offset</H4>
<P CLASS="Body">
<A NAME="pgfId=675749">
 </A>
The offset in the file to the start of the data in the file. For stream files, and RMS (VMS) block mode files, this offset is given in bytes. For RMS record-oriented files, the offset is specified in records. Offset is useful for dealing with data files that contain a descriptive header block followed by the actual data.</P>
</DIV>
<DIV>
<H4 CLASS="Heading-2R">
<A NAME="pgfId=906240">
 </A>
Keywords</H4>
</DIV>
<DIV>
<H4 CLASS="Argument">
<A NAME="pgfId=906241">
 </A>
<A NAME="marker=906340">
 </A>
PACKED</H4>
<P CLASS="Body">
<A NAME="pgfId=906243">
 </A>
When ASSOC is applied to structures, the default action is to map the actual definition of the structure for the current machine, including any holes required to properly align the fields. (IDL uses the same rules for laying out structures as the C language). If the PACKED keyword is specified, I/O using the resulting variable instead works in the same manner as READU and WRITEU, and data is moved one field at a time and there are no alignment gaps between the fields.</P>
</DIV>
</DIV>
<DIV>
<H3 CLASS="Heading-1R">
<A NAME="pgfId=675750">
 </A>
Example</H3>
<P CLASS="Body">
<A NAME="pgfId=675751">
 </A>
Suppose that the file <CODE CLASS="Code">
images.dat</CODE>
 holds 5 images as 256-element by 256-element arrays of bytes. Open the file for reading and create an associated variable by entering:</P>
<P CLASS="Code">
<A NAME="pgfId=675752">
 </A>
OPENR, 1, 'images.dat'	<EM CLASS="Comment">;
Open the file as file unit 1.</EM>
</P>
<P CLASS="Code">
<A NAME="pgfId=675753">
 </A>
A = ASSOC(1, BYTARR(256, 256))	<EM CLASS="Comment">;
Make an associated variable.</EM>
</P>
<P CLASS="Body">
<A NAME="pgfId=675754">
 </A>
Now A[0] corresponds to the first image in the file, A[1] is the second element, etc. To display the first image in the file, you could enter:</P>
<P CLASS="Code">
<A NAME="pgfId=675755">
 </A>
TV, A[0]</P>
<P CLASS="Body">
<A NAME="pgfId=675756">
 </A>
The data for the first image is read and then displayed. Note that the data associated with A[0] is not held in memory. It is read in every time there is a reference to A[0]. To store the image in the memory-resident array B, you could enter:</P>
<P CLASS="Code">
<A NAME="pgfId=675757">
 </A>
B = A[0]</P>
</DIV>
<DIV>
<H3 CLASS="Heading-1R">
<A NAME="pgfId=796014">
 </A>
See Also</H3>
<P CLASS="Body">
<A NAME="pgfId=796015">
 </A>
<A HREF="idl130.htm#59773" CLASS="XRef">
OPEN</A>
, <A HREF="idl171.htm#52434" CLASS="XRef">
READU</A>
</P>
</DIV>
</BODY>
</HTML>
