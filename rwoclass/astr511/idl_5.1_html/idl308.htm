<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML EXPERIMENTAL 970324//EN">
<HTML>
<STYLE><!--
H1         { font-family: Stone Sans, Helvetica, Arial, sans-serif }
H1.Chapter-Name    { font-size: 36pt }
H2         { font-family: Stone Sans, Helvetica, Arial, sans-serif }
H3         { font-family: Stone Sans, Helvetica, Arial, sans-serif }
H4         { font-family: Stone Sans, Helvetica, Arial, sans-serif }
H5         { font-family: Stone Sans, Helvetica, Arial, sans-serif ;
             margin-top: -5.0pt ; font-size: 12pt }
H6         { font-family: Stone Sans, Helvetica, Arial, sans-serif ;
             margin-top: -5.0pt ; font-size: 12pt }
P          { font-family: Minion, Times, serif }
P.api      { font-family: Courier ; font-weight: Bold }
P.Code     { font-family: Courier, serif ; font-size: 10pt}
P.Code-2   { font-family: Courier, serif ; font-size: 10pt}
P.Code-Result   { font-family: Courier, serif ; font-size: 10pt ;
                  font-weight: Bold}
P.ChapTOC  { font-family: Stone Sans, Helvetica, Arial, sans-serif }
P.Chapter-NameTOC   { font-family: Stone Sans, Helvetica, Arial, sans-serif ;
		      font-size: 20pt; font-weight: Bold }
P.Level2IX	{margin-left: 10pt }
LI.Code-Numbered     { font-family: Courier, serif ; font-size: 10pt}
LI.Code-Numbered-1   { font-family: Courier, serif ; font-size: 10pt}
--></STYLE>

<HEAD>
<META NAME="GENERATOR" CONTENT="Adobe FrameMaker 5.5/HTML Export Filter">

<TITLE> IDLgrText</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">
<DIV>
<DIV><table width="100%" border=0 cellspacing=0 cellpadding=0> <TR>  <TD></TD>   <TD  bgcolor="#ffffff">     <IMG SRC = "idlmap.gif" USEMAP = "#idlmap.gif" BORDER = 0>   </TD> </TR></TABLE><MAP NAME = "idlmap.gif"><AREA SHAPE=RECT HREF="idl309.htm" COORDS="290, 29, 344, 43"><AREA SHAPE=RECT HREF="idl.htm" COORDS="139, 29, 239, 46"><AREA SHAPE=RECT HREF="idl307.htm" COORDS="0, 29, 98, 46"><AREA SHAPE=RECT HREF="idl.htm" COORDS="68, 0, 275, 18"></MAP></DIV><HR></DIV>
<H1 CLASS="Class-Name">
<A NAME="pgfId=998480">
 </A>
<A NAME="89698">
 </A>
IDLgrText</H1>
<P CLASS="Body">
<A NAME="pgfId=998481">
 </A>
A <A NAME="marker=1022439">
 </A>
text object represents one or more text strings that share common rendering attributes.</P>
<P CLASS="Body">
<A NAME="pgfId=1040115">
 </A>
An IDLgrText object is an<EM CLASS="Emphasis">
 atomic graphic object</EM>
; it is one of the basic drawable elements of the IDL Object Graphics system, and it is not a container for other objects.</P>
<DIV>
<H3 CLASS="Heading-2R">
<A NAME="pgfId=1038578">
 </A>
Superclasses</H3>
<P CLASS="Body">
<A NAME="pgfId=1038579">
 </A>
This class has no superclasses.</P>
</DIV>
<DIV>
<H3 CLASS="Heading-2R">
<A NAME="pgfId=1009149">
 </A>
Subclasses</H3>
<P CLASS="Body">
<A NAME="pgfId=1009150">
 </A>
This class has no subclasses.</P>
</DIV>
<DIV>
<H2 CLASS="Heading-1R">
<A NAME="pgfId=1009151">
 </A>
Creation</H2>
<P CLASS="Body">
<A NAME="pgfId=1009152">
 </A>
See <A HREF="idl308.htm#60240" CLASS="XRef">
IDLgrText::Init</A>
</DIV>
<DIV>
<H2 CLASS="Heading-1R">
<A NAME="pgfId=1009164">
 </A>
Methods</H2>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=1009165">
 </A>
Intrinsic Methods</H3>
<P CLASS="Body">
<A NAME="pgfId=1009166">
 </A>
This class has the following methods:</P>
<UL>
<LI CLASS="Body-Bullet-2">
<A NAME="pgfId=1014541">
 </A>
<A HREF="idl308.htm#34712" CLASS="XRef">
IDLgrText::Cleanup</A>
<LI CLASS="Body-Bullet-2">
<A NAME="pgfId=1038942">
 </A>
<A HREF="idl308.htm#12678" CLASS="XRef">
IDLgrText::GetCTM</A>
<LI CLASS="Body-Bullet-2">
<A NAME="pgfId=1034015">
 </A>
<A HREF="idl308.htm#94490" CLASS="XRef">
IDLgrText::GetProperty</A>
<LI CLASS="Body-Bullet-2">
<A NAME="pgfId=1009170">
 </A>
<A HREF="idl308.htm#60240" CLASS="XRef">
IDLgrText::Init</A>
<LI CLASS="Body-Bullet-2">
<A NAME="pgfId=1009178">
 </A>
<A HREF="idl308.htm#54612" CLASS="XRef">
IDLgrText::SetProperty</A>
</UL>
</DIV>
</DIV>
<DIV>
<H2 CLASS="Method-Name">
<HR><A HREF="#top"><IMG SRC="buttonup.gif" ALIGN="right" BORDER=0></A>
<A NAME="pgfId=1031486">
 </A>
<A NAME="34712">
 </A>
IDLgrText::Cleanup</H2>
<P CLASS="Body">
<A NAME="pgfId=1031489">
 </A>
The IDLgrText::<A NAME="marker=1052404">
 </A>
Cleanup procedure method performs all cleanup on the object. <STRONG CLASS="Stone-Semibold">
<A HREF="idl308.htm#89698" CLASS="XRef">
IDLgrText</A>
 </STRONG>
is described above.</P>


<UL>
<P CLASS="Note"><b><FONT SIZE=+1>NOTE: </FONT></b>
<A NAME="pgfId=1041858">
 </A>
Cleanup methods are special <EM CLASS="Emphasis">
lifecycle methods</EM>
, and as such cannot be called outside the context of object destruction. This means that in most cases, you cannot call the Cleanup method directly. There is one exception to this rule: If you write your own subclass of this class, you can call the Cleanup method from within the Cleanup method of the subclass.</LI>
</UL>
</DIV>
<DIV>
<H2 CLASS="Heading-1R">
<A NAME="pgfId=1031493">
 </A>
Calling Sequence</H2>
<P CLASS="Body">
<A NAME="pgfId=1051137">
 </A>
OBJ_DESTROY, <EM CLASS="Emphasis">
Obj</EM>
</P>
<P CLASS="Body">
<A NAME="pgfId=1051138">
 </A>
<EM CLASS="Emphasis">
or</EM>
</P>
<P CLASS="Body">
<A NAME="pgfId=1031494">
 </A>
<EM CLASS="Emphasis">
Obj </EM>
<CODE CLASS="Code">
-&gt;</CODE>
<EM CLASS="Emphasis">
[IDLgrText::]</EM>
Cleanup&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(<EM CLASS="Emphasis">
In a subclass' Cleanup method only</EM>
.)</P>
</DIV>
<DIV>
<H2 CLASS="Heading-1R">
<A NAME="pgfId=1031495">
 </A>
Arguments</H2>
<P CLASS="Body">
<A NAME="pgfId=1031496">
 </A>
There are no arguments for this method.</P>
</DIV>
<DIV>
<H2 CLASS="Heading-1R">
<A NAME="pgfId=1031497">
 </A>
Keywords</H2>
<P CLASS="Body">
<A NAME="pgfId=1031498">
 </A>
There are no keywords for this method.</P>
</DIV>
<DIV>
<H2 CLASS="Method-Name">
<HR><A HREF="#top"><IMG SRC="buttonup.gif" ALIGN="right" BORDER=0></A>
<A NAME="pgfId=1038912">
 </A>
<A NAME="12678">
 </A>
IDLgrText::GetCTM</H2>
<P CLASS="Body">
<A NAME="pgfId=1038915">
 </A>
The IDLgrText::<A NAME="marker=1052407">
 </A>
GetCTM function method returns the 4 x 4 graphics transform matrix from the current object upward through the graphics tree. <STRONG CLASS="Stone-Semibold">
<A HREF="idl308.htm#89698" CLASS="XRef">
IDLgrText</A>
 </STRONG>
is described above.</P>


</DIV>
<DIV>
<H2 CLASS="Heading-1R">
<A NAME="pgfId=1038919">
 </A>
Calling Sequence</H2>
<P CLASS="Body">
<A NAME="pgfId=1038920">
 </A>
Result = <EM CLASS="Emphasis">
Obj</EM>
 <CODE CLASS="Code">
-&gt;</CODE>
<EM CLASS="Emphasis">
[IDLgrText::]</EM>
GetCTM()</P>
</DIV>
<DIV>
<H2 CLASS="Heading-1R">
<A NAME="pgfId=1038921">
 </A>
Arguments</H2>
<P CLASS="Body">
<A NAME="pgfId=1038922">
 </A>
There are no arguments for this method.</P>
</DIV>
<DIV>
<H2 CLASS="Heading-1R">
<A NAME="pgfId=1038923">
 </A>
Keywords</H2>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=1038925">
 </A>
<A NAME="marker=1038924">
 </A>
DESTINATION</H3>
<P CLASS="Body">
<A NAME="pgfId=1058060">
 </A>
Set this keyword to the object reference of a destination object to specify that the projection matrix for the View object in the current tree be included in the returned transformation matrix. The resulting matrix will transform a point in the data space of the object on which the GetCTM method is called into a normalized coordinate system (-1 to +1 in X, Y, and Z), relative to the View object that contains the text object.</P>
</DIV>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=1047337">
 </A>
<A NAME="marker=1047336">
 </A>
TOP</H3>
<P CLASS="Body">
<A NAME="pgfId=1059538">
 </A>
Set this keyword equal to the object reference to an <A HREF="idl2fc.htm#83081" CLASS="XRef">
IDLgrModel</A>
 object to specify that the returned matrix accumulate from the object on which the GetCTM method is called up to and including the specified model object.</P>
</DIV>
</DIV>
<DIV>
<H2 CLASS="Method-Name">
<HR><A HREF="#top"><IMG SRC="buttonup.gif" ALIGN="right" BORDER=0></A>
<A NAME="pgfId=1014546">
 </A>
<A NAME="94490">
 </A>
IDLgrText::GetProperty</H2>
<P CLASS="Body">
<A NAME="pgfId=1014547">
 </A>
The IDLgrText::<A NAME="marker=1052410">
 </A>
GetProperty procedure method retrieves the value of a property or group of properties for the text. <STRONG CLASS="Stone-Semibold">
<A HREF="idl308.htm#89698" CLASS="XRef">
IDLgrText</A>
 </STRONG>
is described above.</P>


</DIV>
<DIV>
<H2 CLASS="Heading-1R">
<A NAME="pgfId=1014551">
 </A>
Calling Sequence</H2>
<P CLASS="Body">
<A NAME="pgfId=1014552">
 </A>
<EM CLASS="Emphasis">
Obj </EM>
<CODE CLASS="Code">
-&gt;</CODE>
<EM CLASS="Emphasis">
[IDLgrText::]</EM>
GetProperty</P>
</DIV>
<DIV>
<H2 CLASS="Heading-1R">
<A NAME="pgfId=1014553">
 </A>
Arguments</H2>
<P CLASS="Body">
<A NAME="pgfId=1014554">
 </A>
There are no arguments for this method.</P>
</DIV>
<DIV>
<H2 CLASS="Heading-1R">
<A NAME="pgfId=1014555">
 </A>
Keywords</H2>
<P CLASS="Body">
<A NAME="pgfId=1016790">
 </A>
Any keyword to <A HREF="idl308.htm#60240" CLASS="XRef">
IDLgrText::Init</A>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=1014560">
 </A>
<A NAME="marker=1022606">
 </A>
ALL</H3>
<P CLASS="Body">
<A NAME="pgfId=1093648">
 </A>
Set this keyword to a named variable that will contain an anonymous structure containing the values of all of the properties associated with the <I CLASS="Italic">
state</I>
 of this object. State information about the object includes things like color, range, tick direction, etc., but not image, vertex, or connectivity data, or user values.</P>
<UL>
<P CLASS="Note"><b><FONT SIZE=+1>NOTE: </FONT></b>
<A NAME="pgfId=1093649">
 </A>
The fields of this structure may change in subsequent releases of IDL.</LI>
</UL>
</DIV>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=1050476">
 </A>
<A NAME="marker=1050475">
 </A>
PARENT</H3>
<P CLASS="Body">
<A NAME="pgfId=1068358">
 </A>
Set this keyword equal to a named variable that will contain an object reference to the object that contains this object.</P>
</DIV>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=1060544">
 </A>
<A NAME="marker=1060543">
 </A>
XRANGE</H3>
<P CLASS="Body">
<A NAME="pgfId=1068394">
 </A>
Set this keyword equal to a named variable that will contain a two-element vector of the form [<EM CLASS="Emphasis">
xmin</EM>
, <EM CLASS="Emphasis">
xmax</EM>
] that specifies the range of <EM CLASS="Emphasis">
x</EM>
 data coordinates covered by the graphic object.</P>
</DIV>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=1166470">
 </A>
U<A NAME="marker=1166469">
 </A>
YRANGE</H3>
<P CLASS="Body">
<A NAME="pgfId=1166471">
 </A>
Set this keyword equal to a named variable that will contain a two-element vector of the form [<EM CLASS="Emphasis">
ymin</EM>
, <EM CLASS="Emphasis">
ymax</EM>
] that specifies the range of <EM CLASS="Emphasis">
y </EM>
data coordinates covered by the graphic object.</P>
</DIV>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=1039174">
 </A>
<A NAME="marker=1039172">
 </A>
ZRANGE</H3>
<P CLASS="Body">
<A NAME="pgfId=1068447">
 </A>
Set this keyword equal to a named variable that will contain a two-element vector of the form [<EM CLASS="Emphasis">
zmin</EM>
, <EM CLASS="Emphasis">
zmax</EM>
] that specifies the range of <EM CLASS="Emphasis">
z </EM>
data coordinates covered by the graphic object.</P>
<UL>
<P CLASS="Note"><b><FONT SIZE=+1>NOTE: </FONT></b>
<A NAME="pgfId=1166479">
 </A>
Until the text is drawn to the destination object, the [XYZ]RANGE properties will only report the locations of the text. Use the GetTextDimensions method of the destination object to get the data dimensions of the text prior to a draw operation.</LI>
</UL>
</DIV>
</DIV>
<DIV>
<H2 CLASS="Method-Name">
<HR><A HREF="#top"><IMG SRC="buttonup.gif" ALIGN="right" BORDER=0></A>
<A NAME="pgfId=998485">
 </A>
<A NAME="60240">
 </A>
IDLgrText::Init</H2>
<P CLASS="Body">
<A NAME="pgfId=1009236">
 </A>
The IDLgrText::<A NAME="marker=1052414">
 </A>
Init function method initializes the text object. <STRONG CLASS="Stone-Semibold">
<A HREF="idl308.htm#89698" CLASS="XRef">
IDLgrText</A>
 </STRONG>
is described above.</P>


<UL>
<P CLASS="Note"><b><FONT SIZE=+1>NOTE: </FONT></b>
<A NAME="pgfId=1041754">
 </A>
Init methods are special <EM CLASS="Emphasis">
lifecycle methods</EM>
, and as such cannot be called outside the context of object creation. This means that in most cases, you cannot call the Init method directly. There is one exception to this rule: If you write your own subclass of this class, you can call the Init method from within the Init method of the subclass.</LI>
</UL>
</DIV>
<DIV>
<H2 CLASS="Heading-1R">
<A NAME="pgfId=1009240">
 </A>
Calling Sequence</H2>
<P CLASS="Body">
<A NAME="pgfId=1019815">
 </A>
Obj = OBJ_NEW('IDLgrText' <EM CLASS="Emphasis">
[, String]</EM>
)</P>
<P CLASS="Body">
<A NAME="pgfId=1048804">
 </A>
<EM CLASS="Emphasis">
or</EM>
</P>
<P CLASS="Body">
<A NAME="pgfId=1048805">
 </A>
Result = <EM CLASS="Emphasis">
Obj</EM>
 <CODE CLASS="Code">
-&gt;</CODE>
 <EM CLASS="Emphasis">
[IDLgrText::]</EM>
Init(<EM CLASS="Emphasis">
[, String] </EM>
)<BR>
		(<EM CLASS="Emphasis">
In a subclass' Init method only</EM>
.)</P>
</DIV>
<DIV>
<H2 CLASS="Heading-1R">
<A NAME="pgfId=998487">
 </A>
Arguments</H2>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=998490">
 </A>
String</H3>
<P CLASS="Body">
<A NAME="pgfId=998491">
 </A>
The string (or vector of strings) to be created. If this argument is not a string, it is converted prior to using the default formatting rules.</P>
</DIV>
</DIV>
<DIV>
<H2 CLASS="Heading-1R">
<A NAME="pgfId=998492">
 </A>
Keywords</H2>
<P CLASS="Body">
<A NAME="pgfId=1020318">
 </A>
Properties retrievable via <A HREF="idl308.htm#94490" CLASS="XRef">
IDLgrText::GetProperty</A>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=998494">
 </A>
<A NAME="marker=1023251">
 </A>
ALIGNMENT (Get, Set)</H3>
<P CLASS="Body">
<A NAME="pgfId=998495">
 </A>
Set this keyword to a floating point value between 0.0 and 1.0 to indicate the requested horizontal alignment of the text baseline. An alignment of 0.0 (the default) aligns the left-justifies the text at the given position; an alignment of 1.0 right-justifies the text, and an alignment of 0.5 centers the text over the given position.</P>
</DIV>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=998496">
 </A>
<A NAME="marker=1023252">
 </A>
BASELINE (Get, Set)</H3>
<P CLASS="Body">
<A NAME="pgfId=998497">
 </A>
Set this keyword to a two (or three) element vector describing the direction in which the baseline is to be oriented. Use this keyword in conjunction with the UPDIR keyword to specify the plane on which the text lies. The default BASELINE is [1.0,0,0] (i.e., parallel to the x-axis). </P>
</DIV>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=1061001">
 </A>
<A NAME="marker=1061003">
 </A>
CHAR_DIMENSIONS (Get, Set)</H3>
<P CLASS="Body">
<A NAME="pgfId=1061002">
 </A>
Set this keyword equal to a two-element vector [<EM CLASS="Emphasis">
width</EM>
, <EM CLASS="Emphasis">
height</EM>
] indicating the dimensions (measured in data units) of a bounding box for each character, to be used when scaling text projected in three dimensions. If either <EM CLASS="Emphasis">
width</EM>
 or <EM CLASS="Emphasis">
height</EM>
 is zero, the text will be scaled such that if it were positioned halfway between the near and far clipping planes, it will appear at the point size associated with this text object's font. The default value is [0, 0].</P>
<UL>
<P CLASS="Note"><b><FONT SIZE=+1>NOTE: </FONT></b>
<A NAME="pgfId=1077967">
 </A>
If you set the CHAR_DIMENSIONS property to [0,0] (using the SetProperty method), indicating that IDL should calculate the text size, the value (returned by the GetProperty method) will not be updated to reflect the calculated size until you call either the Draw method or the GetTextDimensions method.</LI>
</UL>
<P CLASS="Body">
<A NAME="pgfId=1061047">
 </A>
For example, if the VIEWPLANE_RECT of the view the text object is being rendered in is set equal to [0,0,10,10] (that is, it spans ten data units in each of the X and Y directions), setting the CHAR_DIMENSIONS property equal to [2, 3] will scale the text such that each character fills 20% of the X range and 30% of the Y range.</P>
<P CLASS="Body">
<A NAME="pgfId=1061044">
 </A>
This property has no effect if the ONGLASS property is set equal to one.</P>
</DIV>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=1039917">
 </A>
<A NAME="marker=1039916">
 </A>
COLOR (Get, Set)</H3>
<P CLASS="Body">
<A NAME="pgfId=1059600">
 </A>
Set this keyword to the color to be used as the foreground color for the text. The color may be specified as a color lookup table index or as an RGB vector. The default is [255, 255, 255].</P>
</DIV>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=1143278">
 </A>
<A NAME="marker=1143277">
 </A>
ENABLE_FORMATTING (Get, Set)</H3>
<P CLASS="Body">
<A NAME="pgfId=1143279">
 </A>
Set this keyword to indicate that the text object should honor embedded Hershey-style formatting codes within the strings. (Formatting codes are described in the &quot;Fonts&quot; chapter of the <I CLASS="Italic">
IDL Reference Guide</I>
.) The default is not to honor the formatting codes.</P>
</DIV>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=998500">
 </A>
<A NAME="marker=1023253">
 </A>
FONT (Get, Set)</H3>
<P CLASS="Body">
<A NAME="pgfId=998501">
 </A>
Set this keyword to an instance of an <A HREF="idl2f8.htm#63756" CLASS="XRef">
IDLgrFont</A>
 object class to describe the font to use to draw this string. The default is 12 point Helvetica. See <A HREF="idl2f8.htm#77827" CLASS="XRef">
IDLgrFont</A>
 for details.</P>
<UL>
<P CLASS="Note"><b><FONT SIZE=+1>NOTE: </FONT></b>
<A NAME="pgfId=1077973">
 </A>
If the <A NAME="marker=1077974">
 </A>
default font is in use, retrieving the value of the FONT property (using the GetProperty method) will return a null object.</LI>
</UL>
</DIV>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=1049209">
 </A>
<A NAME="marker=1049208">
 </A>
HIDE (Get, Set)</H3>
<P CLASS="Body">
<A NAME="pgfId=1049210">
 </A>
Set this keyword to a boolean value indicating whether this object should be drawn:</P>
<UL>
<LI CLASS="Body-Bullet-2">
<A NAME="pgfId=1068509">
 </A>
0 = Draw graphic (the default)</LI>
<LI CLASS="Body-Bullet-2">
<A NAME="pgfId=1068510">
 </A>
1 = Do not draw graphic</LI>
</UL>
</DIV>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=1050518">
 </A>
<A NAME="marker=1050517">
 </A>
LOCATIONS (Get, Set)</H3>
<P CLASS="Body">
<A NAME="pgfId=1050519">
 </A>
Set this keyword to an array of one or more two- or three-element vectors specifying the coordinates (measured in data units) used to position the string(s). Each vector is of the form [<EM CLASS="Emphasis">
x</EM>
, <EM CLASS="Emphasis">
y</EM>
] or [<EM CLASS="Emphasis">
x</EM>
, <EM CLASS="Emphasis">
y</EM>
, <EM CLASS="Emphasis">
z</EM>
]; if <EM CLASS="Emphasis">
z</EM>
 is not provided, it is assumed to be zero. Each location corresponds to the corresponding string in the <EM CLASS="Emphasis">
String</EM>
 argument. If only one location is provided, and the <EM CLASS="Emphasis">
String</EM>
 argument is a vector of more than one strings, the initial string is positioned at the given location, and each subsequent string is positioned by cyclically reusing the location values.</P>
</DIV>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=1049059">
 </A>
<A NAME="marker=1049058">
 </A>
NAME (Get, Set)</H3>
<P CLASS="Body">
<A NAME="pgfId=1058321">
 </A>
Set this keyword equal to a string containing the name associated with this object. The default is the null string, ' '.</P>
</DIV>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=1050487">
 </A>
<A NAME="marker=1050508">
 </A>
ONGLASS (Get, Set)</H3>
<P CLASS="Body">
<A NAME="pgfId=1050509">
 </A>
Set this keyword to indicate that the text should be displayed &quot;on the glass&quot;. The default is projected 3D text.</P>
</DIV>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=1143284">
 </A>
<A NAME="marker=1143283">
 </A>
RECOMPUTE_DIMENSIONS (Get, Set)</H3>
<P CLASS="Body">
<A NAME="pgfId=1143285">
 </A>
Set this keyword to one of the following values to indicate when this text object's character dimensions (refer to the CHAR_DIMENSIONS property) are to be recomputed automatically:</P>
<UL>
<LI CLASS="Body-Bullet-2">
<A NAME="pgfId=1143286">
 </A>
0 = Never recompute. Always use the character dimensions provided via the CHAR_DIMENSIONS property. If CHAR_DIMENSIONS is set to [0,0], compute once and re-use the resulting dimensions until the CHARACTER_DIMENSIONS are modified.</LI>
<LI CLASS="Body-Bullet-2">
<A NAME="pgfId=1143287">
 </A>
1 = Recompute, but reuse the current transformation matrix from the previous draw of this text object. If this is the first time the text object is drawn, compute the current transformation matrix. (This option is useful is if the parent model of this text object is scaled for zooming, and the text is supposed to increase in size, rather having its data dimensions recomputed to ensure the font size is matched.)</LI>
<LI CLASS="Body-Bullet-2">
<A NAME="pgfId=1173460">
 </A>
2 = Recompute always, including the current transformation matrix.</LI>
</UL>
</DIV>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=1050506">
 </A>
<A NAME="marker=1050486">
 </A>
STRINGS (Get, Set)</H3>
<P CLASS="Body">
<A NAME="pgfId=1050488">
 </A>
Set this keyword to the string (or vector of strings) associated with the text object. This keyword is the same as the <I CLASS="Italic">
String</I>
 argument described above.</P>
</DIV>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=998504">
 </A>
<A NAME="marker=1023255">
 </A>
UPDIR (Get, Set)</H3>
<P CLASS="Body">
<A NAME="pgfId=998505">
 </A>
Set this keyword to a two (or three) element vector describing the vertical direction for the string. The <I CLASS="Italic">
upward direction</I>
 is the direction defined by a vector pointing from the origin to the point specified. Use this keyword in conjunction with the BASELINE keyword to specify the plane on which the text lies; the direction specified by UPDIR should be orthogonal to the direction specified by BASELINE. The default UPDIR is [0.0, 1.0, 0.0] (i.e., parallel to the <EM CLASS="Emphasis">
Y</EM>
 axis).</P>
</DIV>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=1049100">
 </A>
<A NAME="marker=1049099">
 </A>
UVALUE (Get, Set)</H3>
<P CLASS="Body">
<A NAME="pgfId=1058382">
 </A>
Set this keyword to a value of any type. You can use this &quot;user value&quot; to contain any information you wish. Remember that if you set the user value equal to a pointer or object reference, you should destroy the pointer or object reference explicitly when destroying the object it is a user value of.</P>
</DIV>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=1143292">
 </A>
<A NAME="marker=1143291">
 </A>
VERTICAL_ALIGNMENT (Get, Set)</H3>
<P CLASS="Body">
<A NAME="pgfId=1143293">
 </A>
Set this keyword to a floating point value between 0.0 and 1.0 to indicate the requested vertical alignment of the text. An alignment of 0.0 (the default) bottom-justifies the text at the given location; an alignment of 1.0 top-justifies the text at the given location.</P>
</DIV>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=1039884">
 </A>
<A NAME="marker=1039883">
 </A>
XCOORD_CONV (Get, Set)</H3>
<P CLASS="Body">
<A NAME="pgfId=1039885">
 </A>
Set this keyword to a vector, [<EM CLASS="Emphasis">
s</EM>
<SUB CLASS="Subscript">
0</SUB>
, <EM CLASS="Emphasis">
s</EM>
<SUB CLASS="Subscript">
1</SUB>
], of scaling factors used to convert <EM CLASS="Emphasis">
X</EM>
 coordinates from data units to normalized units. The formula for the conversion is as follows:</P>
<P CLASS="Body-Indent">
<A NAME="pgfId=1039886">
 </A>
Normalized<EM CLASS="Emphasis">
X</EM>
 = <EM CLASS="Emphasis">
s</EM>
<SUB CLASS="Subscript">
0</SUB>
 + <EM CLASS="Emphasis">
s</EM>
<SUB CLASS="Subscript">
1</SUB>
 * Data<EM CLASS="Emphasis">
X</EM>
</P>
<P CLASS="Body">
<A NAME="pgfId=1039887">
 </A>
Recommended values are:</P>
<P CLASS="Body-Indent">
<A NAME="pgfId=1039888">
 </A>
[(-<EM CLASS="Emphasis">
X</EM>
<SUB CLASS="Subscript">
min</SUB>
)/(<EM CLASS="Emphasis">
X</EM>
<SUB CLASS="Subscript">
max</SUB>
-<EM CLASS="Emphasis">
X</EM>
<SUB CLASS="Subscript">
min</SUB>
), 1/(<EM CLASS="Emphasis">
X</EM>
<SUB CLASS="Subscript">
max</SUB>
-<EM CLASS="Emphasis">
X</EM>
<SUB CLASS="Subscript">
min</SUB>
)]</P>
<P CLASS="Body">
<A NAME="pgfId=1039889">
 </A>
The default is [0.0, 1.0].</P>
</DIV>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=1039891">
 </A>
<A NAME="marker=1039890">
 </A>
YCOORD_CONV (Get, Set)</H3>
<P CLASS="Body">
<A NAME="pgfId=1039892">
 </A>
Set this keyword to a vector, [<EM CLASS="Emphasis">
s</EM>
<SUB CLASS="Subscript">
0</SUB>
, <EM CLASS="Emphasis">
s</EM>
<SUB CLASS="Subscript">
1</SUB>
], of scaling factors used to convert <EM CLASS="Emphasis">
Y</EM>
 coordinates from data units to normalized units. The formula for the conversion is as follows:</P>
<P CLASS="Body-Indent">
<A NAME="pgfId=1039893">
 </A>
Normalized<EM CLASS="Emphasis">
Y</EM>
 = <EM CLASS="Emphasis">
s</EM>
<SUB CLASS="Subscript">
0</SUB>
 + <EM CLASS="Emphasis">
s</EM>
<SUB CLASS="Subscript">
1</SUB>
 * Data<EM CLASS="Emphasis">
Y</EM>
</P>
<P CLASS="Body">
<A NAME="pgfId=1039894">
 </A>
Recommended values are:</P>
<P CLASS="Body-Indent">
<A NAME="pgfId=1039895">
 </A>
[(-<EM CLASS="Emphasis">
Y</EM>
<SUB CLASS="Subscript">
min</SUB>
)/(<EM CLASS="Emphasis">
Y</EM>
<SUB CLASS="Subscript">
max</SUB>
-<EM CLASS="Emphasis">
Y</EM>
<SUB CLASS="Subscript">
min</SUB>
), 1/(<EM CLASS="Emphasis">
Y</EM>
<SUB CLASS="Subscript">
max</SUB>
-<EM CLASS="Emphasis">
Y</EM>
<SUB CLASS="Subscript">
min</SUB>
)]</P>
<P CLASS="Body">
<A NAME="pgfId=1039896">
 </A>
The default is [0.0, 1.0].</P>
<P CLASS="Body">
<A NAME="pgfId=1173694">
 </A>
&nbsp;</P>
</DIV>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=1039898">
 </A>
<A NAME="marker=1039897">
 </A>
ZCOORD_CONV (Get, Set)</H3>
<P CLASS="Body">
<A NAME="pgfId=1039899">
 </A>
Set this keyword to a vector, [<EM CLASS="Emphasis">
s</EM>
<SUB CLASS="Subscript">
0</SUB>
, <EM CLASS="Emphasis">
s</EM>
<SUB CLASS="Subscript">
1</SUB>
], of scaling factors used to convert <EM CLASS="Emphasis">
Z</EM>
 coordinates from data units to normalized units. The formula for the conversion is as follows:</P>
<P CLASS="Body-Indent">
<A NAME="pgfId=1039900">
 </A>
Normalized<EM CLASS="Emphasis">
Z</EM>
 = <EM CLASS="Emphasis">
s</EM>
<SUB CLASS="Subscript">
0</SUB>
 + <EM CLASS="Emphasis">
s</EM>
<SUB CLASS="Subscript">
1</SUB>
 * Data<EM CLASS="Emphasis">
Z</EM>
</P>
<P CLASS="Body">
<A NAME="pgfId=1039901">
 </A>
Recommended values are:</P>
<P CLASS="Body-Indent">
<A NAME="pgfId=1039902">
 </A>
[(-<EM CLASS="Emphasis">
Z</EM>
<SUB CLASS="Subscript">
min</SUB>
)/(<EM CLASS="Emphasis">
Z</EM>
<SUB CLASS="Subscript">
max</SUB>
-<EM CLASS="Emphasis">
Z</EM>
<SUB CLASS="Subscript">
min</SUB>
), 1/(<EM CLASS="Emphasis">
Z</EM>
<SUB CLASS="Subscript">
max</SUB>
-<EM CLASS="Emphasis">
Z</EM>
<SUB CLASS="Subscript">
min</SUB>
)]</P>
<P CLASS="Body">
<A NAME="pgfId=1039903">
 </A>
The default is [0.0, 1.0].</P>
</DIV>
</DIV>
<DIV>
<H2 CLASS="Method-Name">
<HR><A HREF="#top"><IMG SRC="buttonup.gif" ALIGN="right" BORDER=0></A>
<A NAME="pgfId=998518">
 </A>
<A NAME="54612">
 </A>
IDLgrText::SetProperty</H2>
<P CLASS="Body">
<A NAME="pgfId=1009318">
 </A>
The IDLgrText::<A NAME="marker=1052417">
 </A>
SetProperty procedure method sets the value of a property or group of properties for the text. <STRONG CLASS="Stone-Semibold">
<A HREF="idl308.htm#89698" CLASS="XRef">
IDLgrText</A>
 </STRONG>
is described above.</P>


</DIV>
<DIV>
<H2 CLASS="Heading-1R">
<A NAME="pgfId=1009319">
 </A>
Calling Sequence</H2>
<P CLASS="Body">
<A NAME="pgfId=1009320">
 </A>
<EM CLASS="Emphasis">
Obj </EM>
<CODE CLASS="Code">
-&gt;</CODE>
<EM CLASS="Emphasis">
[IDLgrText::]</EM>
SetProperty</P>
</DIV>
<DIV>
<H2 CLASS="Heading-1R">
<A NAME="pgfId=1009321">
 </A>
Arguments</H2>
<P CLASS="Body">
<A NAME="pgfId=1009322">
 </A>
There are no arguments for this method.</P>
</DIV>
<DIV>
<H2 CLASS="Heading-1R">
<A NAME="pgfId=1009323">
 </A>
Keywords</H2>
<P CLASS="Body">
<A NAME="pgfId=1016798">
 </A>
Any keyword to <A HREF="idl308.htm#60240" CLASS="XRef">
IDLgrText::Init</A>
</DIV>
</BODY>
</HTML>
