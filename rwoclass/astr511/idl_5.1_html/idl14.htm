<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML EXPERIMENTAL 970324//EN">
<HTML>
<STYLE><!--
H1         { font-family: Stone Sans, Helvetica, Arial, sans-serif }
H1.Chapter-Name    { font-size: 36pt }
H2         { font-family: Stone Sans, Helvetica, Arial, sans-serif }
H3         { font-family: Stone Sans, Helvetica, Arial, sans-serif }
H4         { font-family: Stone Sans, Helvetica, Arial, sans-serif }
H5         { font-family: Stone Sans, Helvetica, Arial, sans-serif ;
             margin-top: -5.0pt ; font-size: 12pt }
H6         { font-family: Stone Sans, Helvetica, Arial, sans-serif ;
             margin-top: -5.0pt ; font-size: 12pt }
P          { font-family: Minion, Times, serif }
P.api      { font-family: Courier ; font-weight: Bold }
P.Code     { font-family: Courier, serif ; font-size: 10pt}
P.Code-2   { font-family: Courier, serif ; font-size: 10pt}
P.Code-Result   { font-family: Courier, serif ; font-size: 10pt ;
                  font-weight: Bold}
P.ChapTOC  { font-family: Stone Sans, Helvetica, Arial, sans-serif }
P.Chapter-NameTOC   { font-family: Stone Sans, Helvetica, Arial, sans-serif ;
		      font-size: 20pt; font-weight: Bold }
P.Level2IX	{margin-left: 10pt }
LI.Code-Numbered     { font-family: Courier, serif ; font-size: 10pt}
LI.Code-Numbered-1   { font-family: Courier, serif ; font-size: 10pt}
--></STYLE>

<HEAD>
<META NAME="GENERATOR" CONTENT="Adobe FrameMaker 5.5/HTML Export Filter">

<TITLE> BILINEAR</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">
<DIV>
<DIV><table width="100%" border=0 cellspacing=0 cellpadding=0> <TR>  <TD></TD>   <TD  bgcolor="#ffffff">     <IMG SRC = "idlmap.gif" USEMAP = "#idlmap.gif" BORDER = 0>   </TD> </TR></TABLE><MAP NAME = "idlmap.gif"><AREA SHAPE=RECT HREF="idl15.htm" COORDS="290, 29, 344, 43"><AREA SHAPE=RECT HREF="idl.htm" COORDS="139, 29, 239, 46"><AREA SHAPE=RECT HREF="idl13.htm" COORDS="0, 29, 98, 46"><AREA SHAPE=RECT HREF="idl.htm" COORDS="68, 0, 275, 18"></MAP></DIV><HR></DIV>
<H2 CLASS="Routine-Name">
<A NAME="pgfId=749443">
 </A>
<A NAME="43479">
 </A>
BILINEAR</H2>
<P CLASS="Body">
<A NAME="pgfId=749446">
 </A>
The <A NAME="marker=749444">
 </A>
BILINEAR function uses a <A NAME="marker=749445">
 </A>
bilinear interpolation algorithm to compute the value of a data array at each of a set of subscript values. The function returns a two-dimensional, floating-point interpolated array.</P>
<P CLASS="Body">
<A NAME="pgfId=754622">
 </A>
This routine is written in the IDL language. Its source code can be found in the file <CODE CLASS="Code">
bilinear.pro</CODE>
 in the <CODE CLASS="Code">
lib</CODE>
 subdirectory of the IDL distribution.</P>
<DIV>
<H3 CLASS="Heading-1R">
<A NAME="pgfId=749448">
 </A>
Calling Sequence</H3>
<P CLASS="Body">
<A NAME="pgfId=749449">
 </A>
Result = BILINEAR(<EM CLASS="Emphasis">
P, IX, JY</EM>
)</P>
</DIV>
<DIV>
<H3 CLASS="Heading-1R">
<A NAME="pgfId=749450">
 </A>
Arguments</H3>
<DIV>
<H4 CLASS="Argument">
<A NAME="pgfId=749451">
 </A>
P</H4>
<P CLASS="Body">
<A NAME="pgfId=749452">
 </A>
A two-dimensional data array.</P>
</DIV>
<DIV>
<H4 CLASS="Argument">
<A NAME="pgfId=749453">
 </A>
IX and JY</H4>
<P CLASS="Body">
<A NAME="pgfId=749454">
 </A>
Arrays containing the X and Y &quot;virtual subscripts&quot; of <EM CLASS="Emphasis">
P</EM>
 to interpolate values for.</P>
<P CLASS="Body">
<A NAME="pgfId=749455">
 </A>
<EM CLASS="Emphasis">
IX</EM>
 and <EM CLASS="Emphasis">
JY</EM>
 can be either of the following:</P>
<UL>
<LI CLASS="Body-Bullet-2">
<A NAME="pgfId=749456">
 </A>
One-dimensional, <EM CLASS="Emphasis">
n</EM>
-element floating-point arrays of subscripts to look up in <EM CLASS="Emphasis">
P</EM>
. One-dimensional arrays will be converted to two-dimensional arrays in such a way that <EM CLASS="Emphasis">
IX</EM>
 contains <EM CLASS="Emphasis">
n</EM>
 identical rows and <EM CLASS="Emphasis">
JY</EM>
 contains <EM CLASS="Emphasis">
n</EM>
 identical columns.</LI>
<LI CLASS="Body-Bullet-2">
<A NAME="pgfId=749457">
 </A>
Two-dimensional, <EM CLASS="Emphasis">
n</EM>
-element floating-point arrays that uniquely specify the X subscripts (the <EM CLASS="Emphasis">
IX</EM>
 array) and the Y subscripts (the <EM CLASS="Emphasis">
JY</EM>
 array) of the points to be computed from the input array <EM CLASS="Emphasis">
P</EM>
. </LI>
</UL>
<P CLASS="Body">
<A NAME="pgfId=749458">
 </A>
In either case, <EM CLASS="Emphasis">
IX</EM>
 must satisfy the expressions</P>
<P CLASS="Code">
<A NAME="pgfId=749459">
 </A>
0 &lt;= MIN(IX) &lt; N0  <EM CLASS="Roman">
and</EM>
 0 &lt; MAX(IX) &lt;= N0</P>
<P CLASS="Body">
<A NAME="pgfId=749460">
 </A>
where <CODE CLASS="Code">
N0</CODE>
 is the total number of columns in the array <EM CLASS="Emphasis">
P.</EM>
 <EM CLASS="Emphasis">
JY</EM>
 must satisfy the expressions</P>
<P CLASS="Code">
<A NAME="pgfId=749461">
 </A>
0 &lt;= MIN(JY) &lt; M0  <EM CLASS="Roman">
and</EM>
 0 &lt; MAX(JY) &lt;= M0</P>
<P CLASS="Body">
<A NAME="pgfId=749462">
 </A>
where <CODE CLASS="Code">
M0</CODE>
 is the total number of rows in the array <EM CLASS="Emphasis">
P</EM>
.</P>
<P CLASS="Body">
<A NAME="pgfId=749463">
 </A>
It is better to use two-dimensional arrays for <EM CLASS="Emphasis">
IX</EM>
 and <EM CLASS="Emphasis">
JY</EM>
 because the algorithm is somewhat faster. If <EM CLASS="Emphasis">
IX</EM>
 and <EM CLASS="Emphasis">
JY</EM>
 are specified as one-dimensional, the returned two-dimensional arrays <EM CLASS="Emphasis">
IX</EM>
 and <EM CLASS="Emphasis">
JY</EM>
 can be re-used on subsequent calls to take advantage of the faster 2D algorithm. </P>
</DIV>
</DIV>
<DIV>
<H3 CLASS="Heading-1R">
<A NAME="pgfId=749464">
 </A>
Example</H3>
<P CLASS="Body">
<A NAME="pgfId=749465">
 </A>
Create a 3 x 3 floating point array P:</P>
<P CLASS="Code">
<A NAME="pgfId=749466">
 </A>
P = FINDGEN(3,3)</P>
<P CLASS="Body">
<A NAME="pgfId=749467">
 </A>
Suppose we wish to find the value of a point half way between the first and second elements of the first row of <EM CLASS="Emphasis">
P</EM>
. Create the subscript arrays <EM CLASS="Emphasis">
IX</EM>
 and <EM CLASS="Emphasis">
JY</EM>
:</P>
<P CLASS="Code">
<A NAME="pgfId=749468">
 </A>
IX = 0.5	<EM CLASS="Comment">;
Define the X subscript.</EM>
</P>
<P CLASS="Code">
<A NAME="pgfId=749469">
 </A>
JY = 0.0	<EM CLASS="Comment">;
Define the Y subscript.</EM>
</P>
<P CLASS="Code">
<A NAME="pgfId=749470">
 </A>
Z = BILINEAR(P, IX, JY)	<EM CLASS="Comment">;
Interpolate.</EM>
</P>
<P CLASS="Code">
<A NAME="pgfId=749471">
 </A>
PRINT, Z	<EM CLASS="Comment">;
Print the value at the point IX,JY within P.</EM>
</P>
<P CLASS="Body">
<A NAME="pgfId=749472">
 </A>
IDL prints:</P>
<P CLASS="Code-Result">
<A NAME="pgfId=749473">
 </A>
0.500000</P>
<P CLASS="Body">
<A NAME="pgfId=749474">
 </A>
Suppose we wish to find the values of a 2 x 2 array of points in <EM CLASS="Emphasis">
P</EM>
. Create the subscript arrays <EM CLASS="Emphasis">
IX</EM>
 and <EM CLASS="Emphasis">
JY</EM>
:</P>
<P CLASS="Code">
<A NAME="pgfId=749475">
 </A>
IX = [[0.5, 1.9], [1.1, 2.2]]	<EM CLASS="Comment">;
Define the X subscripts.</EM>
</P>
<P CLASS="Code">
<A NAME="pgfId=749476">
 </A>
JY = [[0.1, 0.9], [1.2, 1.8]]	<EM CLASS="Comment">;
Define the Y subscripts.</EM>
</P>
<P CLASS="Code">
<A NAME="pgfId=749477">
 </A>
Z = BILINEAR(P, IX, JY)	<EM CLASS="Comment">;
Interpolate.</EM>
</P>
<P CLASS="Code">
<A NAME="pgfId=749478">
 </A>
PRINT, Z	<EM CLASS="Comment">;
Print the array of values.</EM>
</P>
<P CLASS="Body">
<A NAME="pgfId=749479">
 </A>
IDL prints:</P>
<P CLASS="Code-Result">
<A NAME="pgfId=749480">
 </A>
0.800000&nbsp;&nbsp;&nbsp;&nbsp;4.60000</P>
<P CLASS="Code-Result">
<A NAME="pgfId=749481">
 </A>
4.70000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7.40000</P>
</DIV>
<DIV>
<H3 CLASS="Heading-1R">
<A NAME="pgfId=769735">
 </A>
See Also</H3>
<P CLASS="Body">
<A NAME="pgfId=769736">
 </A>
<A HREF="idld8.htm#16834" CLASS="XRef">
INTERPOL</A>
, <A HREF="idld9.htm#72496" CLASS="XRef">
INTERPOLATE</A>
, <A HREF="idle1.htm#19008" CLASS="XRef">
KRIG2D</A>
</P>
</DIV>
</BODY>
</HTML>
