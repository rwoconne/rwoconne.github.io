<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML EXPERIMENTAL 970324//EN">
<HTML>
<STYLE><!--
H1         { font-family: Stone Sans, Helvetica, Arial, sans-serif }
H1.Chapter-Name    { font-size: 36pt }
H2         { font-family: Stone Sans, Helvetica, Arial, sans-serif }
H3         { font-family: Stone Sans, Helvetica, Arial, sans-serif }
H4         { font-family: Stone Sans, Helvetica, Arial, sans-serif }
H5         { font-family: Stone Sans, Helvetica, Arial, sans-serif ;
             margin-top: -5.0pt ; font-size: 12pt }
H6         { font-family: Stone Sans, Helvetica, Arial, sans-serif ;
             margin-top: -5.0pt ; font-size: 12pt }
P          { font-family: Minion, Times, serif }
P.api      { font-family: Courier ; font-weight: Bold }
P.Code     { font-family: Courier, serif ; font-size: 10pt}
P.Code-2   { font-family: Courier, serif ; font-size: 10pt}
P.Code-Result   { font-family: Courier, serif ; font-size: 10pt ;
                  font-weight: Bold}
P.ChapTOC  { font-family: Stone Sans, Helvetica, Arial, sans-serif }
P.Chapter-NameTOC   { font-family: Stone Sans, Helvetica, Arial, sans-serif ;
		      font-size: 20pt; font-weight: Bold }
P.Level2IX	{margin-left: 10pt }
LI.Code-Numbered     { font-family: Courier, serif ; font-size: 10pt}
LI.Code-Numbered-1   { font-family: Courier, serif ; font-size: 10pt}
--></STYLE>

<HEAD>
<META NAME="GENERATOR" CONTENT="Adobe FrameMaker 5.5/HTML Export Filter">

<TITLE> IDLgrSurface</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">
<DIV>
<DIV><table width="100%" border=0 cellspacing=0 cellpadding=0> <TR>  <TD></TD>   <TD  bgcolor="#ffffff">     <IMG SRC = "idlmap.gif" USEMAP = "#idlmap.gif" BORDER = 0>   </TD> </TR></TABLE><MAP NAME = "idlmap.gif"><AREA SHAPE=RECT HREF="idl306.htm" COORDS="290, 29, 344, 43"><AREA SHAPE=RECT HREF="idl.htm" COORDS="139, 29, 239, 46"><AREA SHAPE=RECT HREF="idl304.htm" COORDS="0, 29, 98, 46"><AREA SHAPE=RECT HREF="idl.htm" COORDS="68, 0, 275, 18"></MAP></DIV><HR></DIV>
<H1 CLASS="Class-Name">
<A NAME="pgfId=1030858">
 </A>
<A NAME="83847">
 </A>
IDLgrSurface</H1>
<P CLASS="Body">
<A NAME="pgfId=1030861">
 </A>
A <A NAME="marker=1030860">
 </A>
surface object represents a shaded or vector representation of a mesh grid.</P>
<P CLASS="Body">
<A NAME="pgfId=1040110">
 </A>
An IDLgrSurface object is an<EM CLASS="Emphasis">
 atomic graphic object</EM>
; it is one of the basic drawable elements of the IDL Object Graphics system, and it is not a container for other objects.</P>
<DIV>
<H3 CLASS="Heading-2R">
<A NAME="pgfId=1038572">
 </A>
Superclasses</H3>
<P CLASS="Body">
<A NAME="pgfId=1038573">
 </A>
This class has no superclasses.</P>
</DIV>
<DIV>
<H3 CLASS="Heading-2R">
<A NAME="pgfId=1008802">
 </A>
Subclasses</H3>
<P CLASS="Body">
<A NAME="pgfId=1008803">
 </A>
This class has no subclasses.</P>
</DIV>
<DIV>
<H2 CLASS="Heading-1R">
<A NAME="pgfId=1008804">
 </A>
Creation</H2>
<P CLASS="Body">
<A NAME="pgfId=1008805">
 </A>
See <A HREF="idl305.htm#33264" CLASS="XRef">
IDLgrSurface::Init</A>
</DIV>
<DIV>
<H2 CLASS="Heading-1R">
<A NAME="pgfId=1008817">
 </A>
Methods</H2>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=1008818">
 </A>
Intrinsic Methods</H3>
<P CLASS="Body">
<A NAME="pgfId=1008819">
 </A>
This class has the following methods:</P>
<UL>
<LI CLASS="Body-Bullet-2">
<A NAME="pgfId=1014485">
 </A>
<A HREF="idl305.htm#19188" CLASS="XRef">
IDLgrSurface::Cleanup</A>
<LI CLASS="Body-Bullet-2">
<A NAME="pgfId=1038900">
 </A>
<A HREF="idl305.htm#28201" CLASS="XRef">
IDLgrSurface::GetCTM</A>
<LI CLASS="Body-Bullet-2">
<A NAME="pgfId=1033865">
 </A>
<A HREF="idl305.htm#46095" CLASS="XRef">
IDLgrSurface::GetProperty</A>
<LI CLASS="Body-Bullet-2">
<A NAME="pgfId=1008823">
 </A>
<A HREF="idl305.htm#33264" CLASS="XRef">
IDLgrSurface::Init</A>
<LI CLASS="Body-Bullet-2">
<A NAME="pgfId=1008831">
 </A>
<A HREF="idl305.htm#39537" CLASS="XRef">
IDLgrSurface::SetProperty</A>
</UL>
</DIV>
</DIV>
<DIV>
<H2 CLASS="Method-Name">
<HR><A HREF="#top"><IMG SRC="buttonup.gif" ALIGN="right" BORDER=0></A>
<A NAME="pgfId=1031456">
 </A>
<A NAME="19188">
 </A>
IDLgrSurface::Cleanup</H2>
<P CLASS="Body">
<A NAME="pgfId=1031459">
 </A>
The IDLgrSurface::<A NAME="marker=1052356">
 </A>
Cleanup procedure method performs all cleanup on the object. <STRONG CLASS="Stone-Semibold">
<A HREF="idl305.htm#83847" CLASS="XRef">
IDLgrSurface</A>
 </STRONG>
is described above.</P>


<UL>
<P CLASS="Note"><b><FONT SIZE=+1>NOTE: </FONT></b>
<A NAME="pgfId=1041842">
 </A>
Cleanup methods are special <EM CLASS="Emphasis">
lifecycle methods</EM>
, and as such cannot be called outside the context of object destruction. This means that in most cases, you cannot call the Cleanup method directly. There is one exception to this rule: If you write your own subclass of this class, you can call the Cleanup method from within the Cleanup method of the subclass.</LI>
</UL>
</DIV>
<DIV>
<H2 CLASS="Heading-1R">
<A NAME="pgfId=1031463">
 </A>
Calling Sequence</H2>
<P CLASS="Body">
<A NAME="pgfId=1051217">
 </A>
OBJ_DESTROY, <EM CLASS="Emphasis">
Obj</EM>
</P>
<P CLASS="Body">
<A NAME="pgfId=1051218">
 </A>
<EM CLASS="Emphasis">
or</EM>
</P>
<P CLASS="Body">
<A NAME="pgfId=1031464">
 </A>
<EM CLASS="Emphasis">
Obj </EM>
<CODE CLASS="Code">
-&gt;</CODE>
<EM CLASS="Emphasis">
[IDLgrSurface::]</EM>
Cleanup&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(<EM CLASS="Emphasis">
In a subclass' Cleanup method only</EM>
.)</P>
</DIV>
<DIV>
<H2 CLASS="Heading-1R">
<A NAME="pgfId=1031465">
 </A>
Arguments</H2>
<P CLASS="Body">
<A NAME="pgfId=1031466">
 </A>
There are no arguments for this method.</P>
</DIV>
<DIV>
<H2 CLASS="Heading-1R">
<A NAME="pgfId=1031467">
 </A>
Keywords</H2>
<P CLASS="Body">
<A NAME="pgfId=1031468">
 </A>
There are no keywords for this method.</P>
</DIV>
<DIV>
<H2 CLASS="Method-Name">
<HR><A HREF="#top"><IMG SRC="buttonup.gif" ALIGN="right" BORDER=0></A>
<A NAME="pgfId=1038870">
 </A>
<A NAME="28201">
 </A>
IDLgrSurface::GetCTM</H2>
<P CLASS="Body">
<A NAME="pgfId=1038873">
 </A>
The IDLgrSurface::<A NAME="marker=1052359">
 </A>
GetCTM function method returns the 4 x 4 graphics transform matrix from the current object upward through the graphics tree. <STRONG CLASS="Stone-Semibold">
<A HREF="idl305.htm#83847" CLASS="XRef">
IDLgrSurface</A>
 </STRONG>
is described above.</P>


</DIV>
<DIV>
<H2 CLASS="Heading-1R">
<A NAME="pgfId=1038877">
 </A>
Calling Sequence</H2>
<P CLASS="Body">
<A NAME="pgfId=1038878">
 </A>
Result = <EM CLASS="Emphasis">
Obj</EM>
 <CODE CLASS="Code">
-&gt;</CODE>
<EM CLASS="Emphasis">
[IDLgrSurface::]</EM>
GetCTM()</P>
</DIV>
<DIV>
<H2 CLASS="Heading-1R">
<A NAME="pgfId=1038879">
 </A>
Arguments</H2>
<P CLASS="Body">
<A NAME="pgfId=1038880">
 </A>
There are no arguments for this method.</P>
</DIV>
<DIV>
<H2 CLASS="Heading-1R">
<A NAME="pgfId=1038881">
 </A>
Keywords</H2>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=1038883">
 </A>
<A NAME="marker=1038882">
 </A>
DESTINATION</H3>
<P CLASS="Body">
<A NAME="pgfId=1058057">
 </A>
Set this keyword to the object reference of a destination object to specify that the projection matrix for the View object in the current tree be included in the returned transformation matrix. The resulting matrix will transform a point in the data space of the object on which the GetCTM method is called into a normalized coordinate system (-1 to +1 in X, Y, and Z), relative to the View object that contains the surface object.</P>
</DIV>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=1047329">
 </A>
<A NAME="marker=1047328">
 </A>
TOP</H3>
<P CLASS="Body">
<A NAME="pgfId=1059533">
 </A>
Set this keyword equal to the object reference to an <A HREF="idl2fc.htm#83081" CLASS="XRef">
IDLgrModel</A>
 object to specify that the returned matrix accumulate from the object on which the GetCTM method is called up to and including the specified model object.</P>
</DIV>
</DIV>
<DIV>
<H2 CLASS="Method-Name">
<HR><A HREF="#top"><IMG SRC="buttonup.gif" ALIGN="right" BORDER=0></A>
<A NAME="pgfId=1014490">
 </A>
<A NAME="46095">
 </A>
IDLgrSurface::GetProperty</H2>
<P CLASS="Body">
<A NAME="pgfId=1014491">
 </A>
The IDLgrSurface::<A NAME="marker=1052362">
 </A>
GetProperty procedure method retrieves the value of a property or group of properties for the surface. <STRONG CLASS="Stone-Semibold">
<A HREF="idl305.htm#83847" CLASS="XRef">
IDLgrSurface</A>
 </STRONG>
is described above.</P>


</DIV>
<DIV>
<H2 CLASS="Heading-1R">
<A NAME="pgfId=1014495">
 </A>
Calling Sequence</H2>
<P CLASS="Body">
<A NAME="pgfId=1014496">
 </A>
<EM CLASS="Emphasis">
Obj </EM>
<CODE CLASS="Code">
-&gt;</CODE>
<EM CLASS="Emphasis">
[IDLgrSurface::]</EM>
GetProperty</P>
</DIV>
<DIV>
<H2 CLASS="Heading-1R">
<A NAME="pgfId=1014497">
 </A>
Arguments</H2>
<P CLASS="Body">
<A NAME="pgfId=1014498">
 </A>
There are no arguments for this method.</P>
</DIV>
<DIV>
<H2 CLASS="Heading-1R">
<A NAME="pgfId=1014499">
 </A>
Keywords</H2>
<P CLASS="Body">
<A NAME="pgfId=1016754">
 </A>
Any keyword to <A HREF="idl305.htm#33264" CLASS="XRef">
IDLgrSurface::Init</A>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=1014504">
 </A>
<A NAME="marker=1022597">
 </A>
ALL</H3>
<P CLASS="Body">
<A NAME="pgfId=1093636">
 </A>
Set this keyword to a named variable that will contain an anonymous structure containing the values of all of the properties associated with the <I CLASS="Italic">
state</I>
 of this object. State information about the object includes things like color, range, tick direction, etc., but not image, vertex, or connectivity data, or user values.</P>
<UL>
<P CLASS="Note"><b><FONT SIZE=+1>NOTE: </FONT></b>
<A NAME="pgfId=1093637">
 </A>
The fields of this structure may change in subsequent releases of IDL.</LI>
</UL>
</DIV>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=1137760">
 </A>
<A NAME="marker=1137759">
 </A>
DATA</H3>
<P CLASS="Body">
<A NAME="pgfId=1137761">
 </A>
Set this keyword to retrieve the surface data.</P>
</DIV>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=1048953">
 </A>
<A NAME="marker=1048952">
 </A>
PARENT</H3>
<P CLASS="Body">
<A NAME="pgfId=1068355">
 </A>
Set this keyword equal to a named variable that will contain an object reference to the object that contains this object.</P>
</DIV>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=1039148">
 </A>
<A NAME="marker=1039146">
 </A>
XRANGE</H3>
<P CLASS="Body">
<A NAME="pgfId=1068391">
 </A>
Set this keyword equal to a named variable that will contain a two-element vector of the form [<EM CLASS="Emphasis">
xmin</EM>
, <EM CLASS="Emphasis">
xmax</EM>
] that specifies the range of <EM CLASS="Emphasis">
x</EM>
 data coordinates covered by the graphic object.</P>
</DIV>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=1039152">
 </A>
<A NAME="marker=1039150">
 </A>
YRANGE</H3>
<P CLASS="Body">
<A NAME="pgfId=1068416">
 </A>
Set this keyword equal to a named variable that will contain a two-element vector of the form [<EM CLASS="Emphasis">
ymin</EM>
, <EM CLASS="Emphasis">
ymax</EM>
] that specifies the range of <EM CLASS="Emphasis">
y </EM>
data coordinates covered by the graphic object.</P>
</DIV>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=1039156">
 </A>
<A NAME="marker=1039154">
 </A>
ZRANGE</H3>
<P CLASS="Body">
<A NAME="pgfId=1068443">
 </A>
Set this keyword equal to a named variable that will contain a two-element vector of the form [<EM CLASS="Emphasis">
zmin</EM>
, <EM CLASS="Emphasis">
zmax</EM>
] that specifies the range of <EM CLASS="Emphasis">
z </EM>
data coordinates covered by the graphic object.</P>
</DIV>
</DIV>
<DIV>
<H2 CLASS="Method-Name">
<HR><A HREF="#top"><IMG SRC="buttonup.gif" ALIGN="right" BORDER=0></A>
<A NAME="pgfId=1039137">
 </A>
<A NAME="33264">
 </A>
IDLgrSurface::Init</H2>
<P CLASS="Body">
<A NAME="pgfId=1039141">
 </A>
The IDLgrSurface::<A NAME="marker=1052366">
 </A>
Init function method initializes the surface object. <STRONG CLASS="Stone-Semibold">
<A HREF="idl305.htm#83847" CLASS="XRef">
IDLgrSurface</A>
 </STRONG>
is described above.</P>


<UL>
<P CLASS="Note"><b><FONT SIZE=+1>NOTE: </FONT></b>
<A NAME="pgfId=1041739">
 </A>
Init methods are special <EM CLASS="Emphasis">
lifecycle methods</EM>
, and as such cannot be called outside the context of object creation. This means that in most cases, you cannot call the Init method directly. There is one exception to this rule: If you write your own subclass of this class, you can call the Init method from within the Init method of the subclass.</LI>
</UL>
</DIV>
<DIV>
<H2 CLASS="Heading-1R">
<A NAME="pgfId=1008880">
 </A>
Calling Sequence</H2>
<P CLASS="Body">
<A NAME="pgfId=1019783">
 </A>
Obj = OBJ_NEW('IDLgrSurface' <EM CLASS="Emphasis">
[, Z [</EM>
, <EM CLASS="Emphasis">
X</EM>
, <EM CLASS="Emphasis">
Y]]</EM>
)</P>
<P CLASS="Body">
<A NAME="pgfId=1041990">
 </A>
<EM CLASS="Emphasis">
or</EM>
</P>
<P CLASS="Body">
<A NAME="pgfId=1041991">
 </A>
Result = <EM CLASS="Emphasis">
Obj</EM>
 <CODE CLASS="Code">
-&gt;</CODE>
 <EM CLASS="Emphasis">
[IDLgrSurface::]</EM>
Init(<EM CLASS="Emphasis">
[Z, [X, Y]]</EM>
)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(<EM CLASS="Emphasis">
In a subclass' Init method only</EM>
.)</P>
</DIV>
<DIV>
<H2 CLASS="Heading-1R">
<A NAME="pgfId=998387">
 </A>
Arguments</H2>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=998388">
 </A>
Z</H3>
<P CLASS="Body">
<A NAME="pgfId=998389">
 </A>
The two-dimensional array to be displayed. If <EM CLASS="Emphasis">
X</EM>
 and <EM CLASS="Emphasis">
Y</EM>
 are provided, the surface is defined as a function the (<EM CLASS="Emphasis">
X</EM>
, <EM CLASS="Emphasis">
Y</EM>
) locations specified by their contents.   Otherwise, the surface is generated as a function of the array indices of each element of <EM CLASS="Emphasis">
Z</EM>
. This argument is converted to single-precision floating-point.</P>
</DIV>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=998390">
 </A>
X</H3>
<P CLASS="Body">
<A NAME="pgfId=998391">
 </A>
A vector or two-dimensional array specifying the X coordinates of the grid. If this argument is a vector, each element of <EM CLASS="Emphasis">
X</EM>
 specifies the X coordinate for a column of <EM CLASS="Emphasis">
Z</EM>
 (e.g., <EM CLASS="Emphasis">
X</EM>
[0] specifies the X coordinate for <EM CLASS="Emphasis">
Z</EM>
[0,*]). If <EM CLASS="Emphasis">
X</EM>
 is a two-dimensional array, each element of <EM CLASS="Emphasis">
X</EM>
 specifies the X coordinate of the corresponding point in <EM CLASS="Emphasis">
Z</EM>
 (<EM CLASS="Emphasis">
X</EM>
<SUB CLASS="Subscript">
ij</SUB>
 specifies the X coordinate for <EM CLASS="Emphasis">
Z</EM>
<SUB CLASS="Subscript">
ij</SUB>
). This argument is converted to single-precision floating-point.</P>
</DIV>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=998392">
 </A>
Y</H3>
<P CLASS="Body">
<A NAME="pgfId=998393">
 </A>
A vector or two-dimensional array specifying the Y coordinates of the grid. If this argument is a vector, each element of <EM CLASS="Emphasis">
Y</EM>
 specifies the Y coordinate for a row of <EM CLASS="Emphasis">
Z</EM>
 (e.g., <EM CLASS="Emphasis">
Y</EM>
(0) specifies the Y coordinate for <EM CLASS="Emphasis">
Z</EM>
[*,0]). If <EM CLASS="Emphasis">
Y</EM>
 is a two-dimensional array, each element of <EM CLASS="Emphasis">
Y</EM>
 specifies the Y coordinate of the corresponding point in <EM CLASS="Emphasis">
Z</EM>
 (<EM CLASS="Emphasis">
Y</EM>
<SUB CLASS="Subscript">
ij</SUB>
 specifies the Y coordinate for <EM CLASS="Emphasis">
Z</EM>
<SUB CLASS="Subscript">
ij</SUB>
). This argument is converted to single-precision floating-point.</P>
</DIV>
</DIV>
<DIV>
<H2 CLASS="Heading-1R">
<A NAME="pgfId=998394">
 </A>
Keywords</H2>
<P CLASS="Body">
<A NAME="pgfId=1020296">
 </A>
Properties retrievable via <A HREF="idl305.htm#46095" CLASS="XRef">
IDLgrSurface::GetProperty</A>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=998396">
 </A>
<A NAME="marker=1023214">
 </A>
BOTTOM (Get, Set)</H3>
<P CLASS="Body">
<A NAME="pgfId=998397">
 </A>
The color value used to draw the bottom surface. If not specified, or set to a negative scalar value, the bottom is drawn with the same color as the top. Setting a bottom color is only supported when the destination device uses RGB color mode.</P>
</DIV>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=1039830">
 </A>
<A NAME="marker=1039829">
 </A>
COLOR (Get, Set)</H3>
<P CLASS="Body">
<A NAME="pgfId=1059585">
 </A>
Set this keyword to the color to be used as the foreground color for this model. The color may be specified as a color lookup table index or as an RGB vector. The default is [255, 255, 255].</P>
</DIV>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=1039836">
 </A>
<A NAME="marker=1050340">
 </A>
DATAX (Set)</H3>
<P CLASS="Body">
<A NAME="pgfId=1050341">
 </A>
Set this keyword to a vector or a two-dimensional array specifying the X coordinates of the surface grid. This keyword is the same as the <I CLASS="Italic">
X</I>
 argument described above.</P>
</DIV>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=1050344">
 </A>
<A NAME="marker=1050343">
 </A>
DATAY (Set)</H3>
<P CLASS="Body">
<A NAME="pgfId=1050345">
 </A>
Set this keyword to a vector or a two-dimensional array specifying the Ycoordinates of the surface grid. This keyword is the same as the <I CLASS="Italic">
Y</I>
 argument described above.</P>
</DIV>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=1050348">
 </A>
<A NAME="marker=1050347">
 </A>
DATAZ (Set)</H3>
<P CLASS="Body">
<A NAME="pgfId=1050349">
 </A>
Set this keyword to the two-dimensional array to display as a surface. This keyword is the same as the <I CLASS="Italic">
Z</I>
 argument described above.</P>
</DIV>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=1030212">
 </A>
<A NAME="marker=1030227">
 </A>
HIDDEN_LINES (Get, Set)</H3>
<P CLASS="Body">
<A NAME="pgfId=1030228">
 </A>
Set this keyword to draw point and wireframe surfaces using hidden line (point) removal. By default, hidden line removal is disabled.</P>
</DIV>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=1049200">
 </A>
<A NAME="marker=1049199">
 </A>
HIDE (Get, Set)</H3>
<P CLASS="Body">
<A NAME="pgfId=1049201">
 </A>
Set this keyword to a boolean value indicating whether this object should be drawn:</P>
<UL>
<LI CLASS="Body-Bullet-2">
<A NAME="pgfId=1068505">
 </A>
0 = Draw graphic (the default)</LI>
<LI CLASS="Body-Bullet-2">
<A NAME="pgfId=1068506">
 </A>
1 = Do not draw graphic</LI>
</UL>
</DIV>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=1030226">
 </A>
<A NAME="marker=1023215">
 </A>
LINESTYLE (Get, Set)</H3>
<P CLASS="Body">
<A NAME="pgfId=1060837">
 </A>
Set this keyword to indicate the line style that should be used to draw the surface lines. The value can be either an integer value specifying a pre-defined line style, or a two-element vector specifying a stippling pattern.</P>
<P CLASS="Body">
<A NAME="pgfId=1060838">
 </A>
To use a pre-defined line style, set the LINESTYLE property equal to one of the following integer values:</P>
<UL>
<LI CLASS="Body-Bullet-2">
<A NAME="pgfId=1060839">
 </A>
0 = Solid line (the default)</LI>
<LI CLASS="Body-Bullet-2">
<A NAME="pgfId=1060840">
 </A>
1 = dotted</LI>
<LI CLASS="Body-Bullet-2">
<A NAME="pgfId=1060841">
 </A>
2 = dashed</LI>
<LI CLASS="Body-Bullet-2">
<A NAME="pgfId=1060842">
 </A>
3 = dash dot</LI>
<LI CLASS="Body-Bullet-2">
<A NAME="pgfId=1060843">
 </A>
4 = dash dot dot dot</LI>
<LI CLASS="Body-Bullet-2">
<A NAME="pgfId=1060844">
 </A>
5 = long dash</LI>
<LI CLASS="Body-Bullet-2">
<A NAME="pgfId=1060845">
 </A>
6 = no line drawn</LI>
</UL>
<P CLASS="Body">
<A NAME="pgfId=1060846">
 </A>
To define your own stippling pattern, specify a two-element vector [<EM CLASS="Emphasis">
repeat</EM>
, <EM CLASS="Emphasis">
bitmask</EM>
], where <EM CLASS="Emphasis">
repeat</EM>
 indicates the number of times consecutive runs of 1's or 0's in the <EM CLASS="Emphasis">
bitmask</EM>
 should be repeated. (That is, if three consecutive 0's appear in the <EM CLASS="Emphasis">
bitmask</EM>
 and the value of <EM CLASS="Emphasis">
repeat</EM>
 is 2, then the line that is drawn will have six consecutive bits turned off.) The value of <EM CLASS="Emphasis">
repeat</EM>
 must be in the range 1&nbsp;<EM CLASS="Symbol">
&#163;</EM>
&nbsp;<EM CLASS="Emphasis">
repeat</EM>
&nbsp;<EM CLASS="Symbol">
&#163;</EM>
&nbsp;255.</P>
<P CLASS="Body">
<A NAME="pgfId=1060847">
 </A>
The <EM CLASS="Emphasis">
bitmask</EM>
 indicates which pixels are drawn and which are not along the length of the line. <EM CLASS="Emphasis">
Bitmask</EM>
 is most conveniently specified as a 16-bit hexadecimal value.</P>
<P CLASS="Body">
<A NAME="pgfId=1060848">
 </A>
For example, <CODE CLASS="Code">
LINESTYLE = [2, 'F0F0'X]</CODE>
 describes a dashed line (8 bits on, 8 bits off, 8 bits on, 8 bits off).</P>
</DIV>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=998400">
 </A>
<A NAME="marker=1023216">
 </A>
MAX_VALUE (Get, Set)</H3>
<P CLASS="Body">
<A NAME="pgfId=998401">
 </A>
The maximum value to be plotted. If this keyword is present, data values greater than the value of MAX_VALUE are treated as missing and are not plotted when the surface is drawn. Note that the IEEE floating-point value NaN is also treated as missing data.</P>
</DIV>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=998402">
 </A>
<A NAME="marker=1023217">
 </A>
MIN_VALUE (Get, Set)</H3>
<P CLASS="Body">
<A NAME="pgfId=998403">
 </A>
The minimum value to be plotted. If this keyword is present, data values less than the value of MIN_VALUE are treated as missing and are not plotted. Note that the IEEE floating-point value NaN is also treated as missing data.</P>
</DIV>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=1049054">
 </A>
<A NAME="marker=1049053">
 </A>
NAME (Get, Set)</H3>
<P CLASS="Body">
<A NAME="pgfId=1058318">
 </A>
Set this keyword equal to a string containing the name associated with this object. The default is the null string, ' '.</P>
</DIV>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=998406">
 </A>
<A NAME="marker=1060461">
 </A>
RESET_DATA (Set)</H3>
<P CLASS="Body">
<A NAME="pgfId=1060450">
 </A>
Set this keyword to treat the data provided via one of the DATA[XYZ] properties as a new data set unique to this object, rather than overwriting data that is shared by other objects. There is no reason to use this keyword if the object on which the property is being set does not currently share data with another object (that is, if the SHARE_DATA property is not in use). This keyword has no effect if no new data is provided via a DATA property. </P>
</DIV>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=1060449">
 </A>
<A NAME="marker=1023219">
 </A>
SHADE_RANGE (Get, Set)</H3>
<P CLASS="Body">
<A NAME="pgfId=998407">
 </A>
Set this keyword to a two-element array that specifies the range of pixel values (color indices) to use for shading. The first element is the color index for the darkest pixel. The second element is the color element for the brightest pixel. This value is ignored when the polygons are drawn to a graphics destination that uses the RGB color model.</P>
</DIV>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=1050392">
 </A>
<A NAME="marker=1050391">
 </A>
SHADING (Get, Set)</H3>
<P CLASS="Body">
<A NAME="pgfId=1058901">
 </A>
Set this keyword to an integer representing the type of shading to use if STYLE is set to 2 (Filled) or 6 (LegoFilled).</P>
<UL>
<LI CLASS="Body-Bullet-2">
<A NAME="pgfId=1050394">
 </A>
0 = Flat (default): The color has a constant intensity for each face of the surface, based on the normal vector.</LI>
<LI CLASS="Body-Bullet-2">
<A NAME="pgfId=1050395">
 </A>
1 = Gouraud: The colors are interpolated between vertices, and then along scanlines from each of the edge intensities.</LI>
</UL>
<P CLASS="Body">
<A NAME="pgfId=1050396">
 </A>
Gouraud shading may be slower than flat shading, but results in a smoother appearance.</P>
</DIV>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=998408">
 </A>
<A NAME="marker=1023220">
 </A>
SHARE_DATA (Set)</H3>
<P CLASS="Body">
<A NAME="pgfId=1050418">
 </A>
Set this keyword to an object whose data is to be shared by this surface. A surface may only share data with another surface. The SHARE_DATA property is intended for use when data values are not set via an argument to the object's Init method or by setting the object's DATA property.</P>
</DIV>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=1050420">
 </A>
<A NAME="marker=1050419">
 </A>
SHOW_SKIRT (Get, Set)</H3>
<P CLASS="Body">
<A NAME="pgfId=1050421">
 </A>
Set this keyword to enable skirt drawing. The default is to disable skirt drawing. </P>
</DIV>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=998412">
 </A>
<A NAME="marker=1023222">
 </A>
SKIRT (Get, Set)</H3>
<P CLASS="Body">
<A NAME="pgfId=998413">
 </A>
Set this keyword to the Z value at which a skirt is to be defined around the array. The Z value is expressed in data units; the default is 0.0. If a skirt is defined, each point on the four edges of the surface is connected to a point on the skirt which has the given Z value, and the same <EM CLASS="Emphasis">
X</EM>
 and <EM CLASS="Emphasis">
Y</EM>
 values as the edge point. In addition, each point on the skirt is connected to its neighbor. The skirt value is ignored if skirt drawing is disabled (see SHOW_SKIRT above).</P>
</DIV>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=998414">
 </A>
<A NAME="marker=1023223">
 </A>
STYLE (Get, Set)</H3>
<P CLASS="Body">
<A NAME="pgfId=998415">
 </A>
Set this keyword to and integer value that indicates the style to be used to draw the surface. Valid values are:</P>
<UL>
<LI CLASS="Body-Bullet-2">
<A NAME="pgfId=1030317">
 </A>
0 = Points</LI>
<LI CLASS="Body-Bullet-2">
<A NAME="pgfId=1030319">
 </A>
1 = Wire mesh (the default)</LI>
<LI CLASS="Body-Bullet-2">
<A NAME="pgfId=1030320">
 </A>
2 = Filled</LI>
<LI CLASS="Body-Bullet-2">
<A NAME="pgfId=1030321">
 </A>
3 = RuledXZ</LI>
<LI CLASS="Body-Bullet-2">
<A NAME="pgfId=1030322">
 </A>
4 = RuledYZ</LI>
<LI CLASS="Body-Bullet-2">
<A NAME="pgfId=1030323">
 </A>
5 = Lego</LI>
<LI CLASS="Body-Bullet-2">
<A NAME="pgfId=1030324">
 </A>
6 = LegoFilled: for outline or shaded and stacked histogram-style plots.</LI>
</UL>
</DIV>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=998416">
 </A>
<A NAME="marker=1023224">
 </A>
TEXTURE_COORD (Get, Set)</H3>
<P CLASS="Body">
<A NAME="pgfId=998417">
 </A>
A 2 x <EM CLASS="Emphasis">
n</EM>
 array of surface coordinate-texturemap coordinate pairs [<EM CLASS="Emphasis">
s</EM>
, <EM CLASS="Emphasis">
t</EM>
] at each vertex., containing the fill pattern array subscripts of each of the <EM CLASS="Emphasis">
n</EM>
 polygon vertices. Use this keyword in conjunction with the TEXTURE_MAP keyword to warp images over the surface. To stretch (or shrink) the texture map to cover the surface mesh completely, set TEXTURE_COORD to a scalar. By default, TEXTURE_COORD is set equal to [0.0, 0.0] to [1.0, 1.0] over the surface bounds.</P>
<P CLASS="Body">
<A NAME="pgfId=1069044">
 </A>
Texture coordinates are normalized. This means that the <EM CLASS="Emphasis">
m</EM>
 x <EM CLASS="Emphasis">
n</EM>
 image object specified via the TEXTURE_MAP property is mapped into the range [0.0, 0.0] to [1.0, 1.0]. If texture coordinates outside the range [0.0, 0.0] to [1.0, 1.0] are specified, the image object is tiled into the larger range.</P>
<P CLASS="Body">
<A NAME="pgfId=1069045">
 </A>
For example, suppose the image object specified via TEXTURE_MAP is a 256 x 256 array, and we want to map the image into a square two units on each side. To completely fill the square with a single copy of the image:</P>
<P CLASS="Code">
<A NAME="pgfId=1069046">
 </A>
TEXTURE_COORD = [[0,0], [1,0], [1,1], [0,1]]</P>
<P CLASS="Body">
<A NAME="pgfId=1069047">
 </A>
To fill the square with four tiled copies of the image:</P>
<P CLASS="Code">
<A NAME="pgfId=1069048">
 </A>
TEXTURE_COORD = [[0,0], [2,0], [2,2], [0,2]]</P>
</DIV>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=998418">
 </A>
<A NAME="marker=1023225">
 </A>
TEXTURE_INTERP (Get, Set)</H3>
<P CLASS="Body">
<A NAME="pgfId=998419">
 </A>
 Set this keyword to a nonzero value to indicate that bilinear sampling is to be used with texture mapping. The default method is nearest-neighbor sampling.</P>
</DIV>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=998420">
 </A>
<A NAME="marker=1023226">
 </A>
TEXTURE_MAP (Get, Set)</H3>
<P CLASS="Body">
<A NAME="pgfId=998421">
 </A>
Set this keyword to an instance of the <A HREF="idl2f9.htm#13854" CLASS="XRef">
IDLgrImage</A>
 object class to be texture mapped onto the surface. If this keyword is omitted or set to a null object reference, no texture map is applied and the surface is filled with the color specified by the COLOR or VERT_COLORS property. If both TEXTURE_MAP and COLORS or VERT_COLORS properties exist, the color of the texture is modulated by the base color of the object. (This means that for the clearest display of the texture image, the COLOR property should be set equal to [255,255,255].) By default, the texture map will be stretched (or shrunk) to cover the surface mesh completely.</P>
<UL>
<P CLASS="Note"><b><FONT SIZE=+1>NOTE: </FONT></b>
<A NAME="pgfId=1069038">
 </A>
Texture mapping is disabled when rendering to a destination object that uses Indexed color mode.</LI>
</UL>
</DIV>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=998422">
 </A>
<A NAME="marker=1023227">
 </A>
THICK (Get, Set)</H3>
<P CLASS="Body">
<A NAME="pgfId=998423">
 </A>
Set this keyword to an integer value between 1 and 10, specifying the line thickness to use to draw surface lines, in pixels. The default is one pixel.</P>
</DIV>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=1049079">
 </A>
<A NAME="marker=1049078">
 </A>
UVALUE (Get, Set)</H3>
<P CLASS="Body">
<A NAME="pgfId=1058394">
 </A>
Set this keyword to a value of any type. You can use this &quot;user value&quot; to contain any information you wish. Remember that if you set the user value equal to a pointer or object reference, you should destroy the pointer or object reference explicitly when destroying the object it is a user value of.</P>
</DIV>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=998426">
 </A>
<A NAME="marker=1023229">
 </A>
VERT_COLORS (Get, Set)</H3>
<P CLASS="Body">
<A NAME="pgfId=1030261">
 </A>
Set this keyword to a vector of colors to be used to draw at each vertex. Color is interpolated between vertices if SHADING is set to 1 (Gouraud). If there are more vertices than elements in VERT_COLORS, the elements of VERT_COLORS are cyclically repeated. By default, the polygons are all drawn in the single color provided by the COLOR keyword. If this keyword is omitted or set to a scalar, vertex colors are removed and the surface is drawn in the color specified by the COLOR keyword.</P>
<UL>
<P CLASS="Note"><b><FONT SIZE=+1>NOTE: </FONT></b>
<A NAME="pgfId=1068770">
 </A>
If the surface object is being rendered on a destination device that uses the Indexed color model, and the view that contains the surface also contains one or more light objects, the VERT_COLORS property is ignored and the SHADE_RANGE property is used instead.</LI>
</UL>
</DIV>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=1039797">
 </A>
<A NAME="marker=1039796">
 </A>
XCOORD_CONV (Get, Set)</H3>
<P CLASS="Body">
<A NAME="pgfId=1039798">
 </A>
Set this keyword to a vector, [<EM CLASS="Emphasis">
s</EM>
<SUB CLASS="Subscript">
0</SUB>
, <EM CLASS="Emphasis">
s</EM>
<SUB CLASS="Subscript">
1</SUB>
], of scaling factors used to convert <EM CLASS="Emphasis">
X</EM>
 coordinates from data units to normalized units. The formula for the conversion is as follows:</P>
<P CLASS="Body-Indent">
<A NAME="pgfId=1039799">
 </A>
Normalized<EM CLASS="Emphasis">
X</EM>
 = <EM CLASS="Emphasis">
s</EM>
<SUB CLASS="Subscript">
0</SUB>
 + <EM CLASS="Emphasis">
s</EM>
<SUB CLASS="Subscript">
1</SUB>
 * Data<EM CLASS="Emphasis">
X</EM>
</P>
<P CLASS="Body">
<A NAME="pgfId=1039800">
 </A>
Recommended values are:</P>
<P CLASS="Body-Indent">
<A NAME="pgfId=1039801">
 </A>
[(-<EM CLASS="Emphasis">
X</EM>
<SUB CLASS="Subscript">
min</SUB>
)/(<EM CLASS="Emphasis">
X</EM>
<SUB CLASS="Subscript">
max</SUB>
-<EM CLASS="Emphasis">
X</EM>
<SUB CLASS="Subscript">
min</SUB>
), 1/(<EM CLASS="Emphasis">
X</EM>
<SUB CLASS="Subscript">
max</SUB>
-<EM CLASS="Emphasis">
X</EM>
<SUB CLASS="Subscript">
min</SUB>
)]</P>
<P CLASS="Body">
<A NAME="pgfId=1039802">
 </A>
The default is [0.0, 1.0].</P>
</DIV>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=1039804">
 </A>
<A NAME="marker=1039803">
 </A>
YCOORD_CONV (Get, Set)</H3>
<P CLASS="Body">
<A NAME="pgfId=1039805">
 </A>
Set this keyword to a vector, [<EM CLASS="Emphasis">
s</EM>
<SUB CLASS="Subscript">
0</SUB>
, <EM CLASS="Emphasis">
s</EM>
<SUB CLASS="Subscript">
1</SUB>
], of scaling factors used to convert <EM CLASS="Emphasis">
Y</EM>
 coordinates from data units to normalized units. The formula for the conversion is as follows:</P>
<P CLASS="Body-Indent">
<A NAME="pgfId=1039806">
 </A>
Normalized<EM CLASS="Emphasis">
Y</EM>
 = <EM CLASS="Emphasis">
s</EM>
<SUB CLASS="Subscript">
0</SUB>
 + <EM CLASS="Emphasis">
s</EM>
<SUB CLASS="Subscript">
1</SUB>
 * Data<EM CLASS="Emphasis">
Y</EM>
</P>
<P CLASS="Body">
<A NAME="pgfId=1039807">
 </A>
Recommended values are:</P>
<P CLASS="Body-Indent">
<A NAME="pgfId=1039808">
 </A>
[(-<EM CLASS="Emphasis">
Y</EM>
<SUB CLASS="Subscript">
min</SUB>
)/(<EM CLASS="Emphasis">
Y</EM>
<SUB CLASS="Subscript">
max</SUB>
-<EM CLASS="Emphasis">
Y</EM>
<SUB CLASS="Subscript">
min</SUB>
), 1/(<EM CLASS="Emphasis">
Y</EM>
<SUB CLASS="Subscript">
max</SUB>
-<EM CLASS="Emphasis">
Y</EM>
<SUB CLASS="Subscript">
min</SUB>
)]</P>
<P CLASS="Body">
<A NAME="pgfId=1039809">
 </A>
The default is [0.0, 1.0].</P>
</DIV>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=1039811">
 </A>
<A NAME="marker=1039810">
 </A>
ZCOORD_CONV (Get, Set)</H3>
<P CLASS="Body">
<A NAME="pgfId=1039812">
 </A>
Set this keyword to a vector, [<EM CLASS="Emphasis">
s</EM>
<SUB CLASS="Subscript">
0</SUB>
, <EM CLASS="Emphasis">
s</EM>
<SUB CLASS="Subscript">
1</SUB>
], of scaling factors used to convert <EM CLASS="Emphasis">
Z</EM>
 coordinates from data units to normalized units. The formula for the conversion is as follows:</P>
<P CLASS="Body-Indent">
<A NAME="pgfId=1039813">
 </A>
Normalized<EM CLASS="Emphasis">
Z</EM>
 = <EM CLASS="Emphasis">
s</EM>
<SUB CLASS="Subscript">
0</SUB>
 + <EM CLASS="Emphasis">
s</EM>
<SUB CLASS="Subscript">
1</SUB>
 * Data<EM CLASS="Emphasis">
Z</EM>
</P>
<P CLASS="Body">
<A NAME="pgfId=1039814">
 </A>
Recommended values are:</P>
<P CLASS="Body-Indent">
<A NAME="pgfId=1039815">
 </A>
[(-<EM CLASS="Emphasis">
Z</EM>
<SUB CLASS="Subscript">
min</SUB>
)/(<EM CLASS="Emphasis">
Z</EM>
<SUB CLASS="Subscript">
max</SUB>
-<EM CLASS="Emphasis">
Z</EM>
<SUB CLASS="Subscript">
min</SUB>
), 1/(<EM CLASS="Emphasis">
Z</EM>
<SUB CLASS="Subscript">
max</SUB>
-<EM CLASS="Emphasis">
Z</EM>
<SUB CLASS="Subscript">
min</SUB>
)]</P>
<P CLASS="Body">
<A NAME="pgfId=1039816">
 </A>
The default is [0.0, 1.0].</P>
</DIV>
</DIV>
<DIV>
<H2 CLASS="Method-Name">
<HR><A HREF="#top"><IMG SRC="buttonup.gif" ALIGN="right" BORDER=0></A>
<A NAME="pgfId=998436">
 </A>
<A NAME="39537">
 </A>
IDLgrSurface::SetProperty</H2>
<P CLASS="Body">
<A NAME="pgfId=1008947">
 </A>
The IDLgrSurface::<A NAME="marker=1052369">
 </A>
SetProperty procedure method sets the value of a property or group of properties for the surface. <STRONG CLASS="Stone-Semibold">
<A HREF="idl305.htm#83847" CLASS="XRef">
IDLgrSurface</A>
 </STRONG>
is described above.</P>


</DIV>
<DIV>
<H2 CLASS="Heading-1R">
<A NAME="pgfId=1008948">
 </A>
Calling Sequence</H2>
<P CLASS="Body">
<A NAME="pgfId=1008949">
 </A>
<EM CLASS="Emphasis">
Obj </EM>
<CODE CLASS="Code">
-&gt;</CODE>
<EM CLASS="Emphasis">
[IDLgrSurface::]</EM>
SetProperty</P>
</DIV>
<DIV>
<H2 CLASS="Heading-1R">
<A NAME="pgfId=1008950">
 </A>
Arguments</H2>
<P CLASS="Body">
<A NAME="pgfId=1008951">
 </A>
There are no arguments for this method.</P>
</DIV>
<DIV>
<H2 CLASS="Heading-1R">
<A NAME="pgfId=1008952">
 </A>
Keywords</H2>
<P CLASS="Body">
<A NAME="pgfId=1016762">
 </A>
Any keyword to <A HREF="idl305.htm#33264" CLASS="XRef">
IDLgrSurface::Init</A>
</DIV>
</BODY>
</HTML>
