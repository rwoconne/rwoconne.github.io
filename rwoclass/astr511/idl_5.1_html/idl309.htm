<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML EXPERIMENTAL 970324//EN">
<HTML>
<STYLE><!--
H1         { font-family: Stone Sans, Helvetica, Arial, sans-serif }
H1.Chapter-Name    { font-size: 36pt }
H2         { font-family: Stone Sans, Helvetica, Arial, sans-serif }
H3         { font-family: Stone Sans, Helvetica, Arial, sans-serif }
H4         { font-family: Stone Sans, Helvetica, Arial, sans-serif }
H5         { font-family: Stone Sans, Helvetica, Arial, sans-serif ;
             margin-top: -5.0pt ; font-size: 12pt }
H6         { font-family: Stone Sans, Helvetica, Arial, sans-serif ;
             margin-top: -5.0pt ; font-size: 12pt }
P          { font-family: Minion, Times, serif }
P.api      { font-family: Courier ; font-weight: Bold }
P.Code     { font-family: Courier, serif ; font-size: 10pt}
P.Code-2   { font-family: Courier, serif ; font-size: 10pt}
P.Code-Result   { font-family: Courier, serif ; font-size: 10pt ;
                  font-weight: Bold}
P.ChapTOC  { font-family: Stone Sans, Helvetica, Arial, sans-serif }
P.Chapter-NameTOC   { font-family: Stone Sans, Helvetica, Arial, sans-serif ;
		      font-size: 20pt; font-weight: Bold }
P.Level2IX	{margin-left: 10pt }
LI.Code-Numbered     { font-family: Courier, serif ; font-size: 10pt}
LI.Code-Numbered-1   { font-family: Courier, serif ; font-size: 10pt}
--></STYLE>

<HEAD>
<META NAME="GENERATOR" CONTENT="Adobe FrameMaker 5.5/HTML Export Filter">

<TITLE> IDLgrView</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">
<DIV>
<DIV><table width="100%" border=0 cellspacing=0 cellpadding=0> <TR>  <TD></TD>   <TD  bgcolor="#ffffff">     <IMG SRC = "idlmap.gif" USEMAP = "#idlmap.gif" BORDER = 0>   </TD> </TR></TABLE><MAP NAME = "idlmap.gif"><AREA SHAPE=RECT HREF="idl30a.htm" COORDS="290, 29, 344, 43"><AREA SHAPE=RECT HREF="idl.htm" COORDS="139, 29, 239, 46"><AREA SHAPE=RECT HREF="idl308.htm" COORDS="0, 29, 98, 46"><AREA SHAPE=RECT HREF="idl.htm" COORDS="68, 0, 275, 18"></MAP></DIV><HR></DIV>
<H1 CLASS="Class-Name">
<A NAME="pgfId=1015230">
 </A>
<A NAME="24783">
 </A>
IDLgrView</H1>
<P CLASS="Body">
<A NAME="pgfId=1015231">
 </A>
A <A NAME="marker=1022449">
 </A>
view object represents a rectangular area in which graphics objects are drawn. It is a container for objects of the <A HREF="idl2fc.htm#83081" CLASS="XRef">
IDLgrModel</A>
 class.</P>
<DIV>
<H3 CLASS="Heading-2R">
<A NAME="pgfId=1038582">
 </A>
Superclasses</H3>
<P CLASS="Body">
<A NAME="pgfId=1156545">
 </A>
This class is a subclass of <A HREF="idl2f2.htm#19831" CLASS="XRef">
IDL_Container</A>
</DIV>
<DIV>
<H3 CLASS="Heading-2R">
<A NAME="pgfId=1015234">
 </A>
Subclasses</H3>
<P CLASS="Body">
<A NAME="pgfId=1015235">
 </A>
This class has no subclasses.</P>
</DIV>
<DIV>
<H2 CLASS="Heading-1R">
<A NAME="pgfId=1015236">
 </A>
Creation</H2>
<P CLASS="Body">
<A NAME="pgfId=1015237">
 </A>
See <A HREF="idl309.htm#46236" CLASS="XRef">
IDLgrView::Init</A>
</DIV>
<DIV>
<H2 CLASS="Heading-1R">
<A NAME="pgfId=1015249">
 </A>
Methods</H2>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=1015250">
 </A>
Intrinsic Methods</H3>
<P CLASS="Body">
<A NAME="pgfId=1015251">
 </A>
This class has the following methods:</P>
<UL>
<LI CLASS="Body-Bullet-2">
<A NAME="pgfId=1015255">
 </A>
<A HREF="idl309.htm#35505" CLASS="XRef">
IDLgrView::Add</A>
<LI CLASS="Body-Bullet-2">
<A NAME="pgfId=1040393">
 </A>
<A HREF="idl309.htm#29357" CLASS="XRef">
IDLgrView::Cleanup</A>
<LI CLASS="Body-Bullet-2">
<A NAME="pgfId=1034024">
 </A>
<A HREF="idl309.htm#18665" CLASS="XRef">
IDLgrView::GetByName</A>
<LI CLASS="Body-Bullet-2">
<A NAME="pgfId=1040422">
 </A>
<A HREF="idl309.htm#89652" CLASS="XRef">
IDLgrView::GetProperty</A>
<LI CLASS="Body-Bullet-2">
<A NAME="pgfId=1015259">
 </A>
<A HREF="idl309.htm#46236" CLASS="XRef">
IDLgrView::Init</A>
<LI CLASS="Body-Bullet-2">
<A NAME="pgfId=1040450">
 </A>
<A HREF="idl309.htm#23072" CLASS="XRef">
IDLgrView::Remove</A>
<LI CLASS="Body-Bullet-2">
<A NAME="pgfId=1031517">
 </A>
<A HREF="idl309.htm#92221" CLASS="XRef">
IDLgrView::SetProperty</A>
</UL>
</DIV>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=1156577">
 </A>
Inherited Methods</H3>
<P CLASS="Body">
<A NAME="pgfId=1156578">
 </A>
This class inherits the following methods:</P>
<UL>
<LI CLASS="Body-Bullet-2">
<A NAME="pgfId=1156585">
 </A>
<A HREF="idl2f2.htm#27771" CLASS="XRef">
IDL_Container::Count</A>
<LI CLASS="Body-Bullet-2">
<A NAME="pgfId=1156592">
 </A>
<A HREF="idl2f2.htm#33593" CLASS="XRef">
IDL_Container::Get</A>
<LI CLASS="Body-Bullet-2">
<A NAME="pgfId=1156599">
 </A>
<A HREF="idl2f2.htm#22803" CLASS="XRef">
IDL_Container::IsContained</A>
<LI CLASS="Body-Bullet-2">
<A NAME="pgfId=1156606">
 </A>
<A HREF="idl2f2.htm#21346" CLASS="XRef">
IDL_Container::Move</A>
</UL>
</DIV>
</DIV>
<DIV>
<H2 CLASS="Method-Name">
<HR><A HREF="#top"><IMG SRC="buttonup.gif" ALIGN="right" BORDER=0></A>
<A NAME="pgfId=1040374">
 </A>
<A NAME="35505">
 </A>
IDLgrView::Add</H2>
<P CLASS="Body">
<A NAME="pgfId=1040377">
 </A>
The IDLgrView::<A NAME="marker=1052421">
 </A>
Add procedure method adds a child to this view. <STRONG CLASS="Stone-Semibold">
<A HREF="idl309.htm#24783" CLASS="XRef">
IDLgrView</A>
 </STRONG>
is described above.</P>


</DIV>
<DIV>
<H2 CLASS="Heading-1R">
<A NAME="pgfId=1040381">
 </A>
Calling Sequence</H2>
<P CLASS="Body">
<A NAME="pgfId=1040382">
 </A>
<EM CLASS="Emphasis">
Obj </EM>
<CODE CLASS="Code">
-&gt;</CODE>
<EM CLASS="Emphasis">
[IDLgrView::]</EM>
Add, <I CLASS="Italic">
Model</I>
</P>
</DIV>
<DIV>
<H2 CLASS="Heading-1R">
<A NAME="pgfId=1040383">
 </A>
Arguments</H2>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=1040384">
 </A>
Model</H3>
<P CLASS="Body">
<A NAME="pgfId=1050530">
 </A>
An instance of the <A HREF="idl2fc.htm#83081" CLASS="XRef">
IDLgrModel</A>
 object class.</P>
</DIV>
</DIV>
<DIV>
<H2 CLASS="Heading-1R">
<A NAME="pgfId=1040385">
 </A>
Keywords</H2>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=1069127">
 </A>
<A NAME="marker=1069126">
 </A>
POSITION</H3>
<P CLASS="Body">
<A NAME="pgfId=1069128">
 </A>
Set this keyword equal to the zero-based index of the position within the container at which the new object should be placed.</P>
</DIV>
</DIV>
<DIV>
<H2 CLASS="Method-Name">
<HR><A HREF="#top"><IMG SRC="buttonup.gif" ALIGN="right" BORDER=0></A>
<A NAME="pgfId=1031529">
 </A>
<A NAME="29357">
 </A>
IDLgrView::Cleanup</H2>
<P CLASS="Body">
<A NAME="pgfId=1031532">
 </A>
The IDLgrView::<A NAME="marker=1052424">
 </A>
Cleanup procedure method performs all cleanup on the object. <STRONG CLASS="Stone-Semibold">
<A HREF="idl309.htm#24783" CLASS="XRef">
IDLgrView</A>
 </STRONG>
is described above.</P>


<UL>
<P CLASS="Note"><b><FONT SIZE=+1>NOTE: </FONT></b>
<A NAME="pgfId=1041862">
 </A>
Cleanup methods are special <EM CLASS="Emphasis">
lifecycle methods</EM>
, and as such cannot be called outside the context of object destruction. This means that in most cases, you cannot call the Cleanup method directly. There is one exception to this rule: If you write your own subclass of this class, you can call the Cleanup method from within the Cleanup method of the subclass.</LI>
</UL>
</DIV>
<DIV>
<H2 CLASS="Heading-1R">
<A NAME="pgfId=1031536">
 </A>
Calling Sequence</H2>
<P CLASS="Body">
<A NAME="pgfId=1051142">
 </A>
OBJ_DESTROY, <EM CLASS="Emphasis">
Obj</EM>
</P>
<P CLASS="Body">
<A NAME="pgfId=1051143">
 </A>
<EM CLASS="Emphasis">
or</EM>
</P>
<P CLASS="Body">
<A NAME="pgfId=1031537">
 </A>
<EM CLASS="Emphasis">
Obj </EM>
<CODE CLASS="Code">
-&gt;</CODE>
<EM CLASS="Emphasis">
[IDLgrView::]</EM>
Cleanup&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(<EM CLASS="Emphasis">
In a subclass' Cleanup method only</EM>
.)</P>
</DIV>
<DIV>
<H2 CLASS="Heading-1R">
<A NAME="pgfId=1031538">
 </A>
Arguments</H2>
<P CLASS="Body">
<A NAME="pgfId=1031539">
 </A>
There are no arguments for this method.</P>
</DIV>
<DIV>
<H2 CLASS="Heading-1R">
<A NAME="pgfId=1031540">
 </A>
Keywords</H2>
<P CLASS="Body">
<A NAME="pgfId=1031541">
 </A>
There are no keywords for this method.</P>
</DIV>
<DIV>
<H2 CLASS="Method-Name">
<HR><A HREF="#top"><IMG SRC="buttonup.gif" ALIGN="right" BORDER=0></A>
<A NAME="pgfId=1040398">
 </A>
<A NAME="18665">
 </A>
IDLgrView::GetByName</H2>
<P CLASS="Body">
<A NAME="pgfId=1040401">
 </A>
The IDLgrView::<A NAME="marker=1052427">
 </A>
GetByName function method finds contained objects by name. If the named object is not found, the GetByName function returns a null object reference. </P>
<UL>
<P CLASS="Note"><b><FONT SIZE=+1>NOTE: </FONT></b>
<A NAME="pgfId=1060617">
 </A>
The GetByName function does <EM CLASS="Emphasis">
not</EM>
 perform a recursive search through the object hierarchy. If a fully qualified object name is not specified, only the contents of the current container object are inspected for the named object.</LI>
</UL>
<P CLASS="Body">
<A NAME="pgfId=1060615">
 </A>
<STRONG CLASS="Stone-Semibold">
<A HREF="idl309.htm#24783" CLASS="XRef">
IDLgrView</A>
 </STRONG>
is described above.</P>


</DIV>
<DIV>
<H2 CLASS="Heading-1R">
<A NAME="pgfId=1040405">
 </A>
Calling Sequence</H2>
<P CLASS="Body">
<A NAME="pgfId=1040406">
 </A>
Result = <EM CLASS="Emphasis">
Obj </EM>
<CODE CLASS="Code">
-&gt;</CODE>
<EM CLASS="Emphasis">
[IDLgrView::]</EM>
GetByName(<I CLASS="Italic">
Name</I>
)</P>
</DIV>
<DIV>
<H2 CLASS="Heading-1R">
<A NAME="pgfId=1040407">
 </A>
Arguments</H2>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=1040408">
 </A>
Name</H3>
<P CLASS="Body">
<A NAME="pgfId=1060662">
 </A>
A string containing the name of the object to be returned.</P>
<P CLASS="Body">
<A NAME="pgfId=1060644">
 </A>
Object naming syntax is very much like the syntax of a Unix filesystem. Objects contained by other objects can include the name of their parent object; this allows you to create a fully qualified name specification. For example, if <CODE CLASS="Code">
object1</CODE>
 contains <CODE CLASS="Code">
object2</CODE>
, which in turn contains <CODE CLASS="Code">
object3</CODE>
, the string specifying the fully qualified object name of object3 would be <CODE CLASS="Code">
'object1/object2/object3'</CODE>
.</P>
<P CLASS="Body">
<A NAME="pgfId=1060645">
 </A>
Object names are specified relative to the object on which the GetByName method is called. If used at the beginning of the name string, the <CODE CLASS="Code">
/</CODE>
 character represents the top of an object hierarchy. The string <CODE CLASS="Code">
'..'</CODE>
 represents the object one level &quot;up&quot; in the hierarchy.</P>
</DIV>
</DIV>
<DIV>
<H2 CLASS="Heading-1R">
<A NAME="pgfId=1040409">
 </A>
Keywords</H2>
<P CLASS="Body">
<A NAME="pgfId=1040410">
 </A>
There are no keywords for this method.</P>
</DIV>
<DIV>
<H2 CLASS="Method-Name">
<HR><A HREF="#top"><IMG SRC="buttonup.gif" ALIGN="right" BORDER=0></A>
<A NAME="pgfId=1031520">
 </A>
<A NAME="89652">
 </A>
IDLgrView::GetProperty</H2>
<P CLASS="Body">
<A NAME="pgfId=1031523">
 </A>
The IDLgrView::<A NAME="marker=1052430">
 </A>
GetProperty procedure method retrieves the value of the property or group of properties for the view. <STRONG CLASS="Stone-Semibold">
<A HREF="idl309.htm#24783" CLASS="XRef">
IDLgrView</A>
 </STRONG>
is described above.</P>


</DIV>
<DIV>
<H2 CLASS="Heading-1R">
<A NAME="pgfId=1015270">
 </A>
Calling Sequence</H2>
<P CLASS="Body">
<A NAME="pgfId=1015271">
 </A>
<EM CLASS="Emphasis">
Obj</EM>
 <CODE CLASS="Code">
-&gt;</CODE>
<EM CLASS="Emphasis">
[IDLgrView::]</EM>
GetProperty</P>
</DIV>
<DIV>
<H2 CLASS="Heading-1R">
<A NAME="pgfId=1015272">
 </A>
Arguments</H2>
<P CLASS="Body">
<A NAME="pgfId=1015273">
 </A>
There are no arguments for this method.</P>
</DIV>
<DIV>
<H2 CLASS="Heading-1R">
<A NAME="pgfId=1015274">
 </A>
Keywords</H2>
<P CLASS="Body">
<A NAME="pgfId=1016808">
 </A>
Any keyword to <A HREF="idl309.htm#46236" CLASS="XRef">
IDLgrView::Init</A>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=1015279">
 </A>
<A NAME="marker=1022614">
 </A>
ALL</H3>
<P CLASS="Body">
<A NAME="pgfId=1093657">
 </A>
Set this keyword to a named variable that will contain an anonymous structure containing the values of all of the properties associated with the <I CLASS="Italic">
state</I>
 of this object. State information about the object includes things like color, range, tick direction, etc., but not image, vertex, or connectivity data, or user values.</P>
<UL>
<P CLASS="Note"><b><FONT SIZE=+1>NOTE: </FONT></b>
<A NAME="pgfId=1093658">
 </A>
The fields of this structure may change in subsequent releases of IDL.</LI>
</UL>
</DIV>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=1048974">
 </A>
<A NAME="marker=1048973">
 </A>
PARENT</H3>
<P CLASS="Body">
<A NAME="pgfId=1068361">
 </A>
Set this keyword equal to a named variable that will contain an object reference to the object that contains this object.</P>
</DIV>
</DIV>
<DIV>
<H2 CLASS="Method-Name">
<HR><A HREF="#top"><IMG SRC="buttonup.gif" ALIGN="right" BORDER=0></A>
<A NAME="pgfId=1015285">
 </A>
<A NAME="46236">
 </A>
IDLgrView::Init</H2>
<P CLASS="Body">
<A NAME="pgfId=1015286">
 </A>
The IDLgrView::<A NAME="marker=1052434">
 </A>
Init function method initializes the view object. <STRONG CLASS="Stone-Semibold">
<A HREF="idl309.htm#24783" CLASS="XRef">
IDLgrView</A>
 </STRONG>
is described above.</P>


<UL>
<P CLASS="Note"><b><FONT SIZE=+1>NOTE: </FONT></b>
<A NAME="pgfId=1041760">
 </A>
Init methods are special <EM CLASS="Emphasis">
lifecycle methods</EM>
, and as such cannot be called outside the context of object creation. This means that in most cases, you cannot call the Init method directly. There is one exception to this rule: If you write your own subclass of this class, you can call the Init method from within the Init method of the subclass.</LI>
</UL>
</DIV>
<DIV>
<H2 CLASS="Heading-1R">
<A NAME="pgfId=1015290">
 </A>
Calling Sequence</H2>
<P CLASS="Body">
<A NAME="pgfId=1019843">
 </A>
Obj = OBJ_NEW('IDLgrView')</P>
<P CLASS="Body">
<A NAME="pgfId=1042006">
 </A>
<EM CLASS="Emphasis">
or</EM>
</P>
<P CLASS="Body">
<A NAME="pgfId=1042007">
 </A>
Result = <EM CLASS="Emphasis">
Obj</EM>
 <CODE CLASS="Code">
-&gt;</CODE>
 <EM CLASS="Emphasis">
[IDLgrView::]</EM>
Init(<EM CLASS="Emphasis">
 </EM>
)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(<EM CLASS="Emphasis">
In a subclass' Init method only</EM>
.)</P>
</DIV>
<DIV>
<H2 CLASS="Heading-1R">
<A NAME="pgfId=1015292">
 </A>
Arguments</H2>
<P CLASS="Body">
<A NAME="pgfId=1015293">
 </A>
There are no arguments for this method.</P>
</DIV>
<DIV>
<H2 CLASS="Heading-1R">
<A NAME="pgfId=1015294">
 </A>
Keywords</H2>
<P CLASS="Body">
<A NAME="pgfId=1020330">
 </A>
Properties retrievable via <A HREF="idl309.htm#89652" CLASS="XRef">
IDLgrView::GetProperty</A>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=1025300">
 </A>
<A NAME="marker=1023280">
 </A>
COLOR (Get, Set)</H3>
<P CLASS="Body">
<A NAME="pgfId=1015299">
 </A>
Set this keyword to the color for the view. This is the color to which the view area will be erased before its contents are drawn. The color may be specified as a color lookup table index or as an RGB vector. The default is [255, 255, 255] (white).</P>
</DIV>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=1015300">
 </A>
<A NAME="marker=1030415">
 </A>
DEPTH_CUE (Get, Set)</H3>
<P CLASS="Body">
<A NAME="pgfId=1060286">
 </A>
Set this keyword to a two-element floating point array [<I CLASS="Italic">
zbright</I>
, <I CLASS="Italic">
zdim</I>
] specifying the near and far Z planes between which depth cueing is in effect. Depth cueing is only honored when drawing to a destination object that uses the RGB color model.</P>
<P CLASS="Body">
<A NAME="pgfId=1060287">
 </A>
Depth cuing causes an object to appear to fade into the background color of the view object with changes in depth. If the depth of an object is further than <EM CLASS="Emphasis">
zdim</EM>
 (that is, if the object's location in the Z direction is farther from the origin than the value specified by <EM CLASS="Emphasis">
zdim</EM>
), the object will be painted in the background color. Similarly, if the object is closer than the value of <EM CLASS="Emphasis">
zbright</EM>
, the object will appear in its &quot;normal&quot; color. Anywhere in-between, the object will be a blend of the background color and the object color. For example, if the DEPTH_CUE property is set to [-1,1], an object at the depth of 0.0 will appear as a 50% blend of the object color and the view color.</P>
<P CLASS="Body">
<A NAME="pgfId=1060288">
 </A>
The relationship between <EM CLASS="Emphasis">
Z</EM>
<SUB CLASS="Subscript">
bright</SUB>
<EM CLASS="Emphasis">
 </EM>
and<EM CLASS="Emphasis">
 Z</EM>
<SUB CLASS="Subscript">
dim</SUB>
<EM CLASS="Emphasis">
</EM>
 determines the result of the rendering:</P>
<UL>
<LI CLASS="Body-Bullet-2">
<A NAME="pgfId=1060289">
 </A>
<EM CLASS="Emphasis">
Z</EM>
<SUB CLASS="Subscript">
bright</SUB>
<EM CLASS="Emphasis">
&nbsp;&lt;&nbsp;Z</EM>
<SUB CLASS="Subscript">
dim</SUB>
<EM CLASS="Emphasis">
</EM>
: Rendering darkens with depth.</LI>
<LI CLASS="Body-Bullet-2">
<A NAME="pgfId=1060290">
 </A>
<EM CLASS="Emphasis">
Z</EM>
<SUB CLASS="Subscript">
bright</SUB>
<EM CLASS="Emphasis">
&nbsp;&gt;&nbsp;Z</EM>
<SUB CLASS="Subscript">
dim</SUB>
<EM CLASS="Emphasis">
</EM>
: Rendering brightens with depth.</LI>
<LI CLASS="Body-Bullet-2">
<A NAME="pgfId=1060291">
 </A>
<EM CLASS="Emphasis">
Z</EM>
<SUB CLASS="Subscript">
bright</SUB>
<EM CLASS="Emphasis">
</EM>
 = <EM CLASS="Emphasis">
Z</EM>
<SUB CLASS="Subscript">
dim</SUB>
<EM CLASS="Emphasis">
</EM>
: Disables depth queuing.</LI>
</UL>
<P CLASS="Body">
<A NAME="pgfId=1060292">
 </A>
You can disable depth cueing by setting <I CLASS="Italic">
zbright</I>
 = <I CLASS="Italic">
zdim</I>
. The default is [0.0, 0.0].</P>
<P CLASS="Body">
<A NAME="pgfId=1173695">
 </A>
&nbsp;</P>
</DIV>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=1030414">
 </A>
<A NAME="marker=1023283">
 </A>
DIMENSIONS (Get, Set)</H3>
<P CLASS="Body">
<A NAME="pgfId=1015301">
 </A>
Set this keyword to a two-element vector of the form [<EM CLASS="Emphasis">
width</EM>
, <EM CLASS="Emphasis">
height</EM>
] specifying the dimensions of the viewport (the rectangle in which models are displayed on a graphics destination). By default, the viewport dimensions are set to [0, 0], which indicates that it will match the dimensions of the graphics destination to which it is drawn. The dimensions are measured in the units specified by the UNITS keyword.</P>
</DIV>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=1015302">
 </A>
<A NAME="marker=1030409">
 </A>
EYE (Get, Set)</H3>
<P CLASS="Body">
<A NAME="pgfId=1030410">
 </A>
Set this keyword to specify the distance from the eyepoint to the viewplane (Z=0). The default is 4.0. The eyepoint is always centered within the viewplane rectangle. (That is, if the VIEWPLANE_RECT property is set equal to [0,0,1,1], the eyepoint will be at X=0.5, Y=0.5.)</P>
</DIV>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=1030408">
 </A>
<A NAME="marker=1023284">
 </A>
LOCATION (Get, Set)</H3>
<P CLASS="Body">
<A NAME="pgfId=1015303">
 </A>
Set this keyword to a two-element vector of the form [<EM CLASS="Emphasis">
x</EM>
, <EM CLASS="Emphasis">
y</EM>
] specifying the position of the lower lefthand corner of the view. The default is [0, 0], and is measured in device units. </P>
</DIV>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=1015306">
 </A>
<A NAME="marker=1023286">
 </A>
PROJECTION (Get, Set)</H3>
<P CLASS="Body">
<A NAME="pgfId=1030431">
 </A>
Set this keyword to and integer value indicating the type of projection to use within this view. All models displayed within this view will be projected using this type of projection. Valid values are described below.</P>
<UL>
<LI CLASS="Body-Bullet-2">
<A NAME="pgfId=1030433">
 </A>
1 = Orthogonal projection (default).</LI>
<LI CLASS="Body-Bullet-2">
<A NAME="pgfId=1025360">
 </A>
2 = Perspective: Indicates that all models are projected toward the eye (located at the origin), which is the apex of the viewing frustum. With a perspective projection, models that are farther away from the eye will appear smaller in the view than models that are nearer to the eye.</LI>
</UL>
</DIV>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=1021485">
 </A>
<A NAME="marker=1030412">
 </A>
TRANSPARENT (Get, Set)</H3>
<P CLASS="Body">
<A NAME="pgfId=1030413">
 </A>
Set this keyword to disable the viewport erase, making the viewport transparent.</P>
</DIV>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=1030411">
 </A>
<A NAME="marker=1023292">
 </A>
UNITS (Get, Set)</H3>
<P CLASS="Body">
<A NAME="pgfId=1015309">
 </A>
Set this keyword to specify the units of measure for this view. Valid values are:</P>
<UL>
<LI CLASS="Body-Bullet-2">
<A NAME="pgfId=1050907">
 </A>
0 = Device (default)</LI>
<LI CLASS="Body-Bullet-2">
<A NAME="pgfId=1050909">
 </A>
1 = Inches</LI>
<LI CLASS="Body-Bullet-2">
<A NAME="pgfId=1050910">
 </A>
2 = Centimeters</LI>
<LI CLASS="Body-Bullet-2">
<A NAME="pgfId=1050911">
 </A>
3 = Normalized: relative to the graphics destination's <I CLASS="Italic">
rect</I>
.</LI>
<P CLASS="Note"><b><FONT SIZE=+1>NOTE: </FONT></b>
<A NAME="pgfId=1077961">
 </A>
If you set the UNITS property (using the SetProperty method) of a view without also setting the LOCATION and DIMENSIONS properties, IDL will use the existing size and location values in the new units, <EM CLASS="Emphasis">
without conversion</EM>
. This means that if your view's location and dimensions were previously measured in centimeters, and you change the value of UNITS to 1 (measurement in inches), the actual size of the view object will change.</LI>
</UL>
</DIV>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=1049105">
 </A>
<A NAME="marker=1049104">
 </A>
UVALUE (Get, Set)</H3>
<P CLASS="Body">
<A NAME="pgfId=1058378">
 </A>
Set this keyword to a value of any type. You can use this &quot;user value&quot; to contain any information you wish. Remember that if you set the user value equal to a pointer or object reference, you should destroy the pointer or object reference explicitly when destroying the object it is a user value of.</P>
</DIV>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=1025384">
 </A>
<A NAME="marker=1025390">
 </A>
VIEWPLANE_RECT (Get, Set)</H3>
<P CLASS="Body">
<A NAME="pgfId=1025404">
 </A>
Set this keyword to a four-element vector of the form [<EM CLASS="Emphasis">
x</EM>
, <EM CLASS="Emphasis">
y</EM>
, <EM CLASS="Emphasis">
width</EM>
, <EM CLASS="Emphasis">
height</EM>
] to describe the bounds in x and y of the view volume. Objects within the view volume are projected into the viewport. These values are measured in normalized space. The default is [-1.0, -1.0, 2.0, 2.0]</P>
<UL>
<P CLASS="Note"><b><FONT SIZE=+1>NOTE: </FONT></b>
<A NAME="pgfId=1025406">
 </A>
The z bounds of the view volume are set via the ZCLIP keyword. The viewplane rectangle is always located at Z=0.</LI>
</UL>
</DIV>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=1025386">
 </A>
<A NAME="marker=1025383">
 </A>
ZCLIP (Get, Set)</H3>
<P CLASS="Body">
<A NAME="pgfId=1069446">
 </A>
Set this keyword to a two element vector representing the near and far clipping planes to be applied to the objects in this view. The vector should take the form [<EM CLASS="Emphasis">
near</EM>
, <EM CLASS="Emphasis">
far</EM>
]. By default, these values are [1, -1].</P>
</DIV>
</DIV>
<DIV>
<H2 CLASS="Method-Name">
<HR><A HREF="#top"><IMG SRC="buttonup.gif" ALIGN="right" BORDER=0></A>
<A NAME="pgfId=1069449">
 </A>
<A NAME="23072">
 </A>
IDLgrView::Remove</H2>
<P CLASS="Body">
<A NAME="pgfId=1069452">
 </A>
The IDLgrView::<A NAME="marker=1069451">
 </A>
Remove procedure method removes a model from the view. <STRONG CLASS="Stone-Semibold">
<A HREF="idl309.htm#24783" CLASS="XRef">
IDLgrView</A>
 </STRONG>
is described above.</P>


</DIV>
<DIV>
<H2 CLASS="Heading-1R">
<A NAME="pgfId=1040434">
 </A>
Calling Sequence</H2>
<P CLASS="Body">
<A NAME="pgfId=1040435">
 </A>
<EM CLASS="Emphasis">
Obj </EM>
<CODE CLASS="Code">
-&gt;</CODE>
<EM CLASS="Emphasis">
[IDLgrView::]</EM>
Remove, <I CLASS="Italic">
Model</I>
</P>
</DIV>
<DIV>
<H2 CLASS="Heading-1R">
<A NAME="pgfId=1040436">
 </A>
Arguments</H2>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=1040437">
 </A>
Model</H3>
<P CLASS="Body">
<A NAME="pgfId=1050920">
 </A>
An instance of the <A HREF="idl2fc.htm#83081" CLASS="XRef">
IDLgrModel</A>
 object class to be removed from the view.</P>
</DIV>
</DIV>
<DIV>
<H2 CLASS="Heading-1R">
<A NAME="pgfId=1040438">
 </A>
Keywords</H2>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=1069170">
 </A>
<A NAME="marker=1069169">
 </A>
ALL</H3>
<P CLASS="Body">
<A NAME="pgfId=1069171">
 </A>
Set this keyword to remove all object from the container. If this keyword is set, the <EM CLASS="Emphasis">
Model</EM>
 argument is not required.</P>
</DIV>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=1069173">
 </A>
<A NAME="marker=1069172">
 </A>
POSITION</H3>
<P CLASS="Body">
<A NAME="pgfId=1069174">
 </A>
Set this keyword equal to the zero-based index of the object to be removed. If the <EM CLASS="Emphasis">
Model</EM>
 argument is supplied, this keyword is ignored.</P>
</DIV>
</DIV>
<DIV>
<H2 CLASS="Method-Name">
<HR><A HREF="#top"><IMG SRC="buttonup.gif" ALIGN="right" BORDER=0></A>
<A NAME="pgfId=1015315">
 </A>
<A NAME="92221">
 </A>
IDLgrView::SetProperty</H2>
<P CLASS="Body">
<A NAME="pgfId=1015316">
 </A>
The IDLgrView::<A NAME="marker=1052440">
 </A>
SetProperty procedure method sets the value of the property or group of properties for the view. <STRONG CLASS="Stone-Semibold">
<A HREF="idl309.htm#24783" CLASS="XRef">
IDLgrView</A>
 </STRONG>
is described above.</P>


</DIV>
<DIV>
<H2 CLASS="Heading-1R">
<A NAME="pgfId=1015320">
 </A>
Calling Sequence</H2>
<P CLASS="Body">
<A NAME="pgfId=1015321">
 </A>
<EM CLASS="Emphasis">
Obj</EM>
 <CODE CLASS="Code">
-&gt;</CODE>
<EM CLASS="Emphasis">
[IDLgrView::]</EM>
SetProperty</P>
</DIV>
<DIV>
<H2 CLASS="Heading-1R">
<A NAME="pgfId=1015322">
 </A>
Arguments</H2>
<P CLASS="Body">
<A NAME="pgfId=1015323">
 </A>
There are no arguments for this method.</P>
</DIV>
<DIV>
<H2 CLASS="Heading-1R">
<A NAME="pgfId=1015324">
 </A>
Keywords</H2>
<P CLASS="Body">
<A NAME="pgfId=1023080">
 </A>
Any keyword to <A HREF="idl309.htm#46236" CLASS="XRef">
IDLgrView::Init</A>
</DIV>
</BODY>
</HTML>
