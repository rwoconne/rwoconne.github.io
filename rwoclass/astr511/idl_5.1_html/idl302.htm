<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML EXPERIMENTAL 970324//EN">
<HTML>
<STYLE><!--
H1         { font-family: Stone Sans, Helvetica, Arial, sans-serif }
H1.Chapter-Name    { font-size: 36pt }
H2         { font-family: Stone Sans, Helvetica, Arial, sans-serif }
H3         { font-family: Stone Sans, Helvetica, Arial, sans-serif }
H4         { font-family: Stone Sans, Helvetica, Arial, sans-serif }
H5         { font-family: Stone Sans, Helvetica, Arial, sans-serif ;
             margin-top: -5.0pt ; font-size: 12pt }
H6         { font-family: Stone Sans, Helvetica, Arial, sans-serif ;
             margin-top: -5.0pt ; font-size: 12pt }
P          { font-family: Minion, Times, serif }
P.api      { font-family: Courier ; font-weight: Bold }
P.Code     { font-family: Courier, serif ; font-size: 10pt}
P.Code-2   { font-family: Courier, serif ; font-size: 10pt}
P.Code-Result   { font-family: Courier, serif ; font-size: 10pt ;
                  font-weight: Bold}
P.ChapTOC  { font-family: Stone Sans, Helvetica, Arial, sans-serif }
P.Chapter-NameTOC   { font-family: Stone Sans, Helvetica, Arial, sans-serif ;
		      font-size: 20pt; font-weight: Bold }
P.Level2IX	{margin-left: 10pt }
LI.Code-Numbered     { font-family: Courier, serif ; font-size: 10pt}
LI.Code-Numbered-1   { font-family: Courier, serif ; font-size: 10pt}
--></STYLE>

<HEAD>
<META NAME="GENERATOR" CONTENT="Adobe FrameMaker 5.5/HTML Export Filter">

<TITLE> IDLgrPolyline</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">
<DIV>
<DIV><table width="100%" border=0 cellspacing=0 cellpadding=0> <TR>  <TD></TD>   <TD  bgcolor="#ffffff">     <IMG SRC = "idlmap.gif" USEMAP = "#idlmap.gif" BORDER = 0>   </TD> </TR></TABLE><MAP NAME = "idlmap.gif"><AREA SHAPE=RECT HREF="idl303.htm" COORDS="290, 29, 344, 43"><AREA SHAPE=RECT HREF="idl.htm" COORDS="139, 29, 239, 46"><AREA SHAPE=RECT HREF="idl301.htm" COORDS="0, 29, 98, 46"><AREA SHAPE=RECT HREF="idl.htm" COORDS="68, 0, 275, 18"></MAP></DIV><HR></DIV>
<H1 CLASS="Class-Name">
<A NAME="pgfId=997889">
 </A>
<A NAME="44823">
 </A>
IDLgrPolyline</H1>
<P CLASS="Body">
<A NAME="pgfId=997890">
 </A>
A <A NAME="marker=1022386">
 </A>
polyline object represents one or more polylines that share a set of vertices and rendering attributes.</P>
<P CLASS="Body">
<A NAME="pgfId=1040105">
 </A>
An IDLgrPolyline object is an<EM CLASS="Emphasis">
 atomic graphic object</EM>
; it is one of the basic drawable elements of the IDL Object Graphics system, and it is not a container for other objects.</P>
<DIV>
<H3 CLASS="Heading-2R">
<A NAME="pgfId=1038555">
 </A>
Superclasses</H3>
<P CLASS="Body">
<A NAME="pgfId=1038556">
 </A>
This class has no superclasses.</P>
</DIV>
<DIV>
<H3 CLASS="Heading-2R">
<A NAME="pgfId=1006055">
 </A>
Subclasses</H3>
<P CLASS="Body">
<A NAME="pgfId=1006056">
 </A>
This class has no subclasses.</P>
</DIV>
<DIV>
<H2 CLASS="Heading-1R">
<A NAME="pgfId=1006057">
 </A>
Creation</H2>
<P CLASS="Body">
<A NAME="pgfId=1006058">
 </A>
See <A HREF="idl302.htm#69241" CLASS="XRef">
IDLgrPolyline::Init</A>
</DIV>
<DIV>
<H2 CLASS="Heading-1R">
<A NAME="pgfId=1006070">
 </A>
Methods</H2>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=1006071">
 </A>
Intrinsic Methods</H3>
<P CLASS="Body">
<A NAME="pgfId=1006072">
 </A>
This class has the following methods:</P>
<UL>
<LI CLASS="Body-Bullet-2">
<A NAME="pgfId=1006080">
 </A>
<A HREF="idl302.htm#27683" CLASS="XRef">
IDLgrPolyline::Cleanup</A>
<LI CLASS="Body-Bullet-2">
<A NAME="pgfId=1038857">
 </A>
<A HREF="idl302.htm#36354" CLASS="XRef">
IDLgrPolyline::GetCTM</A>
<LI CLASS="Body-Bullet-2">
<A NAME="pgfId=1033831">
 </A>
<A HREF="idl302.htm#40449" CLASS="XRef">
IDLgrPolyline::GetProperty</A>
<LI CLASS="Body-Bullet-2">
<A NAME="pgfId=1013275">
 </A>
<A HREF="idl302.htm#69241" CLASS="XRef">
IDLgrPolyline::Init</A>
<LI CLASS="Body-Bullet-2">
<A NAME="pgfId=1006084">
 </A>
<A HREF="idl302.htm#85052" CLASS="XRef">
IDLgrPolyline::SetProperty</A>
</UL>
</DIV>
</DIV>
<DIV>
<H2 CLASS="Method-Name">
<HR><A HREF="#top"><IMG SRC="buttonup.gif" ALIGN="right" BORDER=0></A>
<A NAME="pgfId=1031426">
 </A>
<A NAME="27683">
 </A>
IDLgrPolyline::Cleanup</H2>
<P CLASS="Body">
<A NAME="pgfId=1031429">
 </A>
The IDLgrPolyline::<A NAME="marker=1052290">
 </A>
Cleanup procedure method performs all cleanup on the object. <STRONG CLASS="Stone-Semibold">
<A HREF="idl302.htm#44823" CLASS="XRef">
IDLgrPolyline</A>
 </STRONG>
is described above.</P>


<UL>
<P CLASS="Note"><b><FONT SIZE=+1>NOTE: </FONT></b>
<A NAME="pgfId=1041830">
 </A>
Cleanup methods are special <EM CLASS="Emphasis">
lifecycle methods</EM>
, and as such cannot be called outside the context of object destruction. This means that in most cases, you cannot call the Cleanup method directly. There is one exception to this rule: If you write your own subclass of this class, you can call the Cleanup method from within the Cleanup method of the subclass.</LI>
</UL>
</DIV>
<DIV>
<H2 CLASS="Heading-1R">
<A NAME="pgfId=1031433">
 </A>
Calling Sequence</H2>
<P CLASS="Body">
<A NAME="pgfId=1051202">
 </A>
OBJ_DESTROY, <EM CLASS="Emphasis">
Obj</EM>
</P>
<P CLASS="Body">
<A NAME="pgfId=1051203">
 </A>
<EM CLASS="Emphasis">
or</EM>
</P>
<P CLASS="Body">
<A NAME="pgfId=1031434">
 </A>
<EM CLASS="Emphasis">
Obj </EM>
<CODE CLASS="Code">
-&gt;</CODE>
<EM CLASS="Emphasis">
[IDLgrPolyline::]</EM>
Cleanup&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(<EM CLASS="Emphasis">
In a subclass' Cleanup method only</EM>
.)</P>
</DIV>
<DIV>
<H2 CLASS="Heading-1R">
<A NAME="pgfId=1031435">
 </A>
Arguments</H2>
<P CLASS="Body">
<A NAME="pgfId=1031436">
 </A>
There are no arguments for this method.</P>
</DIV>
<DIV>
<H2 CLASS="Heading-1R">
<A NAME="pgfId=1031437">
 </A>
Keywords</H2>
<P CLASS="Body">
<A NAME="pgfId=1031438">
 </A>
There are no keywords for this method.</P>
</DIV>
<DIV>
<H2 CLASS="Method-Name">
<HR><A HREF="#top"><IMG SRC="buttonup.gif" ALIGN="right" BORDER=0></A>
<A NAME="pgfId=1038829">
 </A>
<A NAME="36354">
 </A>
IDLgrPolyline::GetCTM</H2>
<P CLASS="Body">
<A NAME="pgfId=1038832">
 </A>
The IDLgrPolyline::<A NAME="marker=1052293">
 </A>
GetCTM function method returns the 4 x 4 graphics transform matrix from the current object upward through the graphics tree. <STRONG CLASS="Stone-Semibold">
<A HREF="idl302.htm#44823" CLASS="XRef">
IDLgrPolyline</A>
 </STRONG>
is described above.</P>


</DIV>
<DIV>
<H2 CLASS="Heading-1R">
<A NAME="pgfId=1038836">
 </A>
Calling Sequence</H2>
<P CLASS="Body">
<A NAME="pgfId=1038837">
 </A>
Result = <EM CLASS="Emphasis">
Obj</EM>
 <CODE CLASS="Code">
-&gt;</CODE>
<EM CLASS="Emphasis">
[IDLgrPolyline::]</EM>
GetCTM()</P>
</DIV>
<DIV>
<H2 CLASS="Heading-1R">
<A NAME="pgfId=1038838">
 </A>
Arguments</H2>
<P CLASS="Body">
<A NAME="pgfId=1038839">
 </A>
There are no arguments for this method.</P>
</DIV>
<DIV>
<H2 CLASS="Heading-1R">
<A NAME="pgfId=1038840">
 </A>
Keywords</H2>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=1038842">
 </A>
<A NAME="marker=1038841">
 </A>
DESTINATION</H3>
<P CLASS="Body">
<A NAME="pgfId=1058054">
 </A>
Set this keyword to the object reference of a destination object to specify that the projection matrix for the View object in the current tree be included in the returned transformation matrix. The resulting matrix will transform a point in the data space of the object on which the GetCTM method is called into a normalized coordinate system (-1 to +1 in X, Y, and Z), relative to the View object that contains the polyline object.</P>
</DIV>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=1047321">
 </A>
<A NAME="marker=1047320">
 </A>
TOP</H3>
<P CLASS="Body">
<A NAME="pgfId=1059528">
 </A>
Set this keyword equal to the object reference to an <A HREF="idl2fc.htm#83081" CLASS="XRef">
IDLgrModel</A>
 object to specify that the returned matrix accumulate from the object on which the GetCTM method is called up to and including the specified model object.</P>
</DIV>
</DIV>
<DIV>
<H2 CLASS="Method-Name">
<HR><A HREF="#top"><IMG SRC="buttonup.gif" ALIGN="right" BORDER=0></A>
<A NAME="pgfId=1006333">
 </A>
<A NAME="40449">
 </A>
IDLgrPolyline::GetProperty</H2>
<P CLASS="Body">
<A NAME="pgfId=1024727">
 </A>
The IDLgrPolyline::<A NAME="marker=1052296">
 </A>
GetProperty procedure method retrieves the value of a property or group of properties for the polylines. <STRONG CLASS="Stone-Semibold">
<A HREF="idl302.htm#44823" CLASS="XRef">
IDLgrPolyline</A>
 </STRONG>
is described above.</P>


</DIV>
<DIV>
<H2 CLASS="Heading-1R">
<A NAME="pgfId=1024731">
 </A>
Calling Sequence</H2>
<P CLASS="Body">
<A NAME="pgfId=1024732">
 </A>
<EM CLASS="Emphasis">
Obj</EM>
 <CODE CLASS="Code">
-&gt;</CODE>
<EM CLASS="Emphasis">
[IDLgrPolyline::]</EM>
GetProperty</P>
</DIV>
<DIV>
<H2 CLASS="Heading-1R">
<A NAME="pgfId=1006345">
 </A>
Arguments</H2>
<P CLASS="Body">
<A NAME="pgfId=1006346">
 </A>
There are no arguments for this method.</P>
</DIV>
<DIV>
<H2 CLASS="Heading-1R">
<A NAME="pgfId=1006361">
 </A>
Keywords</H2>
<P CLASS="Body">
<A NAME="pgfId=1016690">
 </A>
Any keyword to <A HREF="idl302.htm#69241" CLASS="XRef">
IDLgrPolyline::Init</A>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=1006363">
 </A>
<A NAME="marker=1022572">
 </A>
ALL</H3>
<P CLASS="Body">
<A NAME="pgfId=1093595">
 </A>
Set this keyword to a named variable that will contain an anonymous structure containing the values of all of the properties associated with the <I CLASS="Italic">
state</I>
 of this object. State information about the object includes things like color, range, tick direction, etc., but not image, vertex, or connectivity data, or user values.</P>
<UL>
<P CLASS="Note"><b><FONT SIZE=+1>NOTE: </FONT></b>
<A NAME="pgfId=1093596">
 </A>
The fields of this structure may change in subsequent releases of IDL.</LI>
</UL>
</DIV>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=1048938">
 </A>
<A NAME="marker=1048937">
 </A>
PARENT</H3>
<P CLASS="Body">
<A NAME="pgfId=1068352">
 </A>
Set this keyword equal to a named variable that will contain an object reference to the object that contains this object.</P>
</DIV>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=1039106">
 </A>
<A NAME="marker=1039104">
 </A>
XRANGE</H3>
<P CLASS="Body">
<A NAME="pgfId=1068383">
 </A>
Set this keyword equal to a named variable that will contain a two-element vector of the form [<EM CLASS="Emphasis">
xmin</EM>
, <EM CLASS="Emphasis">
xmax</EM>
] that specifies the range of <EM CLASS="Emphasis">
x</EM>
 data coordinates covered by the graphic object.</P>
</DIV>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=1039110">
 </A>
<A NAME="marker=1039108">
 </A>
YRANGE</H3>
<P CLASS="Body">
<A NAME="pgfId=1068413">
 </A>
Set this keyword equal to a named variable that will contain a two-element vector of the form [<EM CLASS="Emphasis">
ymin</EM>
, <EM CLASS="Emphasis">
ymax</EM>
] that specifies the range of <EM CLASS="Emphasis">
y </EM>
data coordinates covered by the graphic object.</P>
</DIV>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=1039114">
 </A>
<A NAME="marker=1039112">
 </A>
ZRANGE</H3>
<P CLASS="Body">
<A NAME="pgfId=1068439">
 </A>
Set this keyword equal to a named variable that will contain a two-element vector of the form [<EM CLASS="Emphasis">
zmin</EM>
, <EM CLASS="Emphasis">
zmax</EM>
] that specifies the range of <EM CLASS="Emphasis">
z </EM>
data coordinates covered by the graphic object.</P>
</DIV>
</DIV>
<DIV>
<H2 CLASS="Method-Name">
<HR><A HREF="#top"><IMG SRC="buttonup.gif" ALIGN="right" BORDER=0></A>
<A NAME="pgfId=1013280">
 </A>
<A NAME="69241">
 </A>
IDLgrPolyline::Init</H2>
<P CLASS="Body">
<A NAME="pgfId=1013281">
 </A>
The IDLgrPolyline::<A NAME="marker=1052300">
 </A>
Init function method initializes the polylines object. <STRONG CLASS="Stone-Semibold">
<A HREF="idl302.htm#44823" CLASS="XRef">
IDLgrPolyline</A>
 </STRONG>
is described above.</P>


<UL>
<P CLASS="Note"><b><FONT SIZE=+1>NOTE: </FONT></b>
<A NAME="pgfId=1041722">
 </A>
Init methods are special <EM CLASS="Emphasis">
lifecycle methods</EM>
, and as such cannot be called outside the context of object creation. This means that in most cases, you cannot call the Init method directly. There is one exception to this rule: If you write your own subclass of this class, you can call the Init method from within the Init method of the subclass.</LI>
</UL>
</DIV>
<DIV>
<H2 CLASS="Heading-1R">
<A NAME="pgfId=1013285">
 </A>
Calling Sequence</H2>
<P CLASS="Body">
<A NAME="pgfId=1019729">
 </A>
Obj = OBJ_NEW(<EM CLASS="Emphasis">
'IDLgrPolyline' [, X [</EM>
, <EM CLASS="Emphasis">
Y[</EM>
, <EM CLASS="Emphasis">
Z]]]</EM>
)</P>
<P CLASS="Body">
<A NAME="pgfId=1041978">
 </A>
<EM CLASS="Emphasis">
or</EM>
</P>
<P CLASS="Body">
<A NAME="pgfId=1041979">
 </A>
Result = <EM CLASS="Emphasis">
Obj</EM>
 <CODE CLASS="Code">
-&gt;</CODE>
 <EM CLASS="Emphasis">
[IDLgrPolyline::]</EM>
Init(<EM CLASS="Emphasis">
[X, [Y, [Z]]] </EM>
)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(<EM CLASS="Emphasis">
In a subclass' Init method only</EM>
.)</P>
</DIV>
<DIV>
<H2 CLASS="Heading-1R">
<A NAME="pgfId=1013287">
 </A>
Arguments</H2>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=1013288">
 </A>
X</H3>
<P CLASS="Body">
<A NAME="pgfId=1013289">
 </A>
A vector providing the <EM CLASS="Emphasis">
X</EM>
 components of the points to be connected. If the <EM CLASS="Emphasis">
Y</EM>
 and <EM CLASS="Emphasis">
Z</EM>
 arguments are not specified, <EM CLASS="Emphasis">
X</EM>
 must be an array of either two or three vectors (i.e., [2,*] or [3,*]), in which case <EM CLASS="Emphasis">
X</EM>
[0,*] represent the <EM CLASS="Emphasis">
X</EM>
 values, <EM CLASS="Emphasis">
X</EM>
[1,*] represent the <EM CLASS="Emphasis">
Y</EM>
 values, and <EM CLASS="Emphasis">
X</EM>
[2,*] represent the <EM CLASS="Emphasis">
Z</EM>
 values. </P>
</DIV>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=1013290">
 </A>
Y</H3>
<P CLASS="Body">
<A NAME="pgfId=1013291">
 </A>
A vector providing the <EM CLASS="Emphasis">
Y</EM>
 components of the points to be connected.</P>
</DIV>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=1013292">
 </A>
Z</H3>
<P CLASS="Body">
<A NAME="pgfId=1013293">
 </A>
A vector providing the <EM CLASS="Emphasis">
Z</EM>
 components of the points to be connected.</P>
</DIV>
</DIV>
<DIV>
<H2 CLASS="Heading-1R">
<A NAME="pgfId=1013294">
 </A>
Keywords</H2>
<P CLASS="Body">
<A NAME="pgfId=1020272">
 </A>
Properties retrievable via <A HREF="idl302.htm#40449" CLASS="XRef">
IDLgrPolyline::GetProperty</A>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=1030002">
 </A>
<A NAME="marker=1030001">
 </A>
COLOR (Get, Set)</H3>
<P CLASS="Body">
<A NAME="pgfId=1030003">
 </A>
Set this keyword to an RGB or Indexed color for drawing polylines. The default color is [255, 255, 255] (white). This keyword is ignored if the VERT_COLORS keyword is provided.</P>
</DIV>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=1029996">
 </A>
<A NAME="marker=1029995">
 </A>
DATA (Get, Set)</H3>
<P CLASS="Body">
<A NAME="pgfId=1029997">
 </A>
Set this keyword to a <EM CLASS="Emphasis">
2 x n</EM>
 or <EM CLASS="Emphasis">
3 x n</EM>
 array which defines, respectively, the 2D or 3D vertex data. DATA is equivalent to the optional arguments, <EM CLASS="Emphasis">
X</EM>
, <EM CLASS="Emphasis">
Y</EM>
, and <EM CLASS="Emphasis">
Z</EM>
. </P>
</DIV>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=1049191">
 </A>
<A NAME="marker=1049190">
 </A>
HIDE (Get, Set)</H3>
<P CLASS="Body">
<A NAME="pgfId=1049192">
 </A>
Set this keyword to a boolean value indicating whether this object should be drawn:</P>
<UL>
<LI CLASS="Body-Bullet-2">
<A NAME="pgfId=1068501">
 </A>
0 = Draw graphic (the default)</LI>
<LI CLASS="Body-Bullet-2">
<A NAME="pgfId=1068502">
 </A>
1 = Do not draw graphic</LI>
</UL>
</DIV>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=1029989">
 </A>
<A NAME="marker=1023158">
 </A>
LINESTYLE (Get, Set)</H3>
<P CLASS="Body">
<A NAME="pgfId=1060819">
 </A>
Set this keyword to indicate the line style that should be used to draw the polyline. The value can be either an integer value specifying a pre-defined line style, or a two-element vector specifying a stippling pattern.</P>
<P CLASS="Body">
<A NAME="pgfId=1060820">
 </A>
To use a pre-defined line style, set the LINESTYLE property equal to one of the following integer values:</P>
<UL>
<LI CLASS="Body-Bullet-2">
<A NAME="pgfId=1060821">
 </A>
0 = Solid line (the default)</LI>
<LI CLASS="Body-Bullet-2">
<A NAME="pgfId=1060822">
 </A>
1 = dotted</LI>
<LI CLASS="Body-Bullet-2">
<A NAME="pgfId=1060823">
 </A>
2 = dashed</LI>
<LI CLASS="Body-Bullet-2">
<A NAME="pgfId=1060824">
 </A>
3 = dash dot</LI>
<LI CLASS="Body-Bullet-2">
<A NAME="pgfId=1060825">
 </A>
4 = dash dot dot dot</LI>
<LI CLASS="Body-Bullet-2">
<A NAME="pgfId=1060826">
 </A>
5 = long dash</LI>
<LI CLASS="Body-Bullet-2">
<A NAME="pgfId=1060827">
 </A>
6 = no line drawn</LI>
</UL>
<P CLASS="Body">
<A NAME="pgfId=1060828">
 </A>
To define your own stippling pattern, specify a two-element vector [<EM CLASS="Emphasis">
repeat</EM>
, <EM CLASS="Emphasis">
bitmask</EM>
], where <EM CLASS="Emphasis">
repeat</EM>
 indicates the number of times consecutive runs of 1's or 0's in the <EM CLASS="Emphasis">
bitmask</EM>
 should be repeated. (That is, if three consecutive 0's appear in the <EM CLASS="Emphasis">
bitmask</EM>
 and the value of <EM CLASS="Emphasis">
repeat</EM>
 is 2, then the line that is drawn will have six consecutive bits turned off.) The value of <EM CLASS="Emphasis">
repeat</EM>
 must be in the range 1&nbsp;<EM CLASS="Symbol">
&#163;</EM>
&nbsp;<EM CLASS="Emphasis">
repeat</EM>
&nbsp;<EM CLASS="Symbol">
&#163;</EM>
&nbsp;255.</P>
<P CLASS="Body">
<A NAME="pgfId=1060829">
 </A>
The <EM CLASS="Emphasis">
bitmask</EM>
 indicates which pixels are drawn and which are not along the length of the line. <EM CLASS="Emphasis">
Bitmask</EM>
 is most conveniently specified as a 16-bit hexadecimal value.</P>
<P CLASS="Body">
<A NAME="pgfId=1060830">
 </A>
For example, <CODE CLASS="Code">
LINESTYLE = [2, 'F0F0'X]</CODE>
 describes a dashed line (8 bits on, 8 bits off, 8 bits on, 8 bits off).</P>
</DIV>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=1049048">
 </A>
<A NAME="marker=1049047">
 </A>
NAME (Get, Set)</H3>
<P CLASS="Body">
<A NAME="pgfId=1058314">
 </A>
Set this keyword equal to a string containing the name associated with this object. The default is the null string, ' '.</P>
</DIV>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=1028660">
 </A>
<A NAME="marker=1028659">
 </A>
POLYLINES (Get, Set)</H3>
<P CLASS="Body">
<A NAME="pgfId=1028661">
 </A>
Set this keyword to an array of polyline descriptions. A polyline description is an integer or longword array of the form: [<I CLASS="Italic">
n</I>
, i<SUB CLASS="Subscript">
0</SUB>
, i<SUB CLASS="Subscript">
1</SUB>
, ..., i<SUB CLASS="Subscript">
n-1</SUB>
<I CLASS="Italic">
</I>
], where <I CLASS="Italic">
n</I>
 is the number of vertices that define the polyline, and i<SUB CLASS="Subscript">
0</SUB>
..i<I CLASS="Italic">
n</I>
<SUB CLASS="Subscript">
-1</SUB>
<I CLASS="Italic">
</I>
 are indices into the <EM CLASS="Emphasis">
X</EM>
, <EM CLASS="Emphasis">
Y</EM>
, and <EM CLASS="Emphasis">
Z</EM>
 arguments that represent the vertices of the polyline(s). To ignore an entry in the POLYLINES array, set the vertex count, <I CLASS="Italic">
n</I>
, to 0. To end the drawing list, even if additional array space is available, set <I CLASS="Italic">
n</I>
 to -1. If this keyword is not specified, a single connected polyline will be generated from the <EM CLASS="Emphasis">
X</EM>
, <EM CLASS="Emphasis">
Y</EM>
, and <EM CLASS="Emphasis">
Z</EM>
 arguments.</P>
<UL>
<P CLASS="Note"><b><FONT SIZE=+1>NOTE: </FONT></b>
<A NAME="pgfId=1030120">
 </A>
The connectivity array described by POLYLINES allows an individual object to contain more than one polyline. Vertex, normal and color information can be shared by the multiple polylines. Consequently, the polyline object can represent an entire mesh and compute reasonable normal estimates in most cases.</LI>
</UL>
</DIV>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=1060465">
 </A>
<A NAME="marker=1060464">
 </A>
RESET_DATA (Set)</H3>
<P CLASS="Body">
<A NAME="pgfId=1060466">
 </A>
Set this keyword to treat the data provided via one of the DATA property as a new data set unique to this object, rather than overwriting data that is shared by other objects. There is no reason to use this keyword if the object on which the property is being set does not currently share data with another object (that is, if the SHARE_DATA property is not in use). This keyword has no effect if no new data is provided via the DATA property. </P>
</DIV>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=1030029">
 </A>
<A NAME="marker=1030028">
 </A>
SHADING (Get, Set)</H3>
<P CLASS="Body">
<A NAME="pgfId=1030030">
 </A>
Set this keyword to an integer representing the type of shading to use:</P>
<UL>
<LI CLASS="Body-Bullet-2">
<A NAME="pgfId=1030031">
 </A>
0 = Flat (default): The color of the first vertex in a line segment is used to define the color for the entire line segment. The color has a constant intensity based upon the normal vector.</LI>
<LI CLASS="Body-Bullet-2">
<A NAME="pgfId=1030032">
 </A>
1 = Gouraud: The colors along each line are interpolated between vertex colors.</LI>
</UL>
<P CLASS="Body">
<A NAME="pgfId=1030033">
 </A>
Gouraud shading may be slower than flat shading, but results in a smoother appearance.</P>
</DIV>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=1018260">
 </A>
<A NAME="marker=1023160">
 </A>
SHARE_DATA (Set)</H3>
<P CLASS="Body">
<A NAME="pgfId=1013304">
 </A>
Set this keyword to an object whose data is to be shared by this polyline. A polyline may only share data with a polygon object or another polyline. The SHARE_DATA property is intended for use when data values are not set via an argument to the object's Init method or by setting the object's DATA property.</P>
</DIV>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=1013305">
 </A>
<A NAME="marker=1023161">
 </A>
SYMBOL (Get, Set)</H3>
<P CLASS="Body">
<A NAME="pgfId=1013309">
 </A>
Set this keyword to a vector containing one or more instances of the <A HREF="idl306.htm#66762" CLASS="XRef">
IDLgrSymbol</A>
 object class to indicate the plotting symbols to be used at each vertex of the polyline. If there are more vertices than elements in SYMBOL, the elements of the SYMBOL vector are cyclically repeated. By default, no symbols are drawn. To remove symbols from a polyline, set SYMBOL to a scalar.</P>
</DIV>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=1013310">
 </A>
<A NAME="marker=1023162">
 </A>
THICK (Get, Set)</H3>
<P CLASS="Body">
<A NAME="pgfId=1013311">
 </A>
Set this keyword to an integer value between 1 and 10, specifying the line thickness to be used to draw the polyline, in pixels. The default is one pixel.</P>
</DIV>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=1050064">
 </A>
<A NAME="marker=1050063">
 </A>
UVALUE (Get, Set)</H3>
<P CLASS="Body">
<A NAME="pgfId=1058406">
 </A>
Set this keyword to a value of any type. You can use this &quot;user value&quot; to contain any information you wish. Remember that if you set the user value equal to a pointer or object reference, you should destroy the pointer or object reference explicitly when destroying the object it is a user value of.</P>
</DIV>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=1030043">
 </A>
<A NAME="marker=1030042">
 </A>
VERT_COLORS (Get, Set)</H3>
<P CLASS="Body">
<A NAME="pgfId=1030044">
 </A>
Set this keyword to a vector of colors to be used to draw at each vertex. Color is interpolated between vertices if SHADING is set to 1 (Gouraud). If there are more vertices than elements in VERT_COLORS, the elements of VERT_COLORS are cyclically repeated. By default, the polyline is drawn in the single color provided by the COLOR keyword. To remove vertex colors, set VERT_COLORS to a scalar.</P>
</DIV>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=1039714">
 </A>
<A NAME="marker=1039713">
 </A>
XCOORD_CONV (Get, Set)</H3>
<P CLASS="Body">
<A NAME="pgfId=1039715">
 </A>
Set this keyword to a vector, [<EM CLASS="Emphasis">
s</EM>
<SUB CLASS="Subscript">
0</SUB>
, <EM CLASS="Emphasis">
s</EM>
<SUB CLASS="Subscript">
1</SUB>
], of scaling factors used to convert <EM CLASS="Emphasis">
X</EM>
 coordinates from data units to normalized units. The formula for the conversion is as follows:</P>
<P CLASS="Body-Indent">
<A NAME="pgfId=1039716">
 </A>
Normalized<EM CLASS="Emphasis">
X</EM>
 = <EM CLASS="Emphasis">
s</EM>
<SUB CLASS="Subscript">
0</SUB>
 + <EM CLASS="Emphasis">
s</EM>
<SUB CLASS="Subscript">
1</SUB>
 * Data<EM CLASS="Emphasis">
X</EM>
</P>
<P CLASS="Body">
<A NAME="pgfId=1039717">
 </A>
Recommended values are:</P>
<P CLASS="Body-Indent">
<A NAME="pgfId=1039718">
 </A>
[(-<EM CLASS="Emphasis">
X</EM>
<SUB CLASS="Subscript">
min</SUB>
)/(<EM CLASS="Emphasis">
X</EM>
<SUB CLASS="Subscript">
max</SUB>
-<EM CLASS="Emphasis">
X</EM>
<SUB CLASS="Subscript">
min</SUB>
), 1/(<EM CLASS="Emphasis">
X</EM>
<SUB CLASS="Subscript">
max</SUB>
-<EM CLASS="Emphasis">
X</EM>
<SUB CLASS="Subscript">
min</SUB>
)]</P>
<P CLASS="Body">
<A NAME="pgfId=1039719">
 </A>
The default is [0.0, 1.0].</P>
</DIV>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=1039721">
 </A>
<A NAME="marker=1039720">
 </A>
YCOORD_CONV (Get, Set)</H3>
<P CLASS="Body">
<A NAME="pgfId=1039722">
 </A>
Set this keyword to a vector, [<EM CLASS="Emphasis">
s</EM>
<SUB CLASS="Subscript">
0</SUB>
, <EM CLASS="Emphasis">
s</EM>
<SUB CLASS="Subscript">
1</SUB>
], of scaling factors used to convert <EM CLASS="Emphasis">
Y</EM>
 coordinates from data units to normalized units. The formula for the conversion is as follows:</P>
<P CLASS="Body-Indent">
<A NAME="pgfId=1039723">
 </A>
Normalized<EM CLASS="Emphasis">
Y</EM>
 = <EM CLASS="Emphasis">
s</EM>
<SUB CLASS="Subscript">
0</SUB>
 + <EM CLASS="Emphasis">
s</EM>
<SUB CLASS="Subscript">
1</SUB>
 * Data<EM CLASS="Emphasis">
Y</EM>
</P>
<P CLASS="Body">
<A NAME="pgfId=1039724">
 </A>
Recommended values are:</P>
<P CLASS="Body-Indent">
<A NAME="pgfId=1039725">
 </A>
[(-<EM CLASS="Emphasis">
Y</EM>
<SUB CLASS="Subscript">
min</SUB>
)/(<EM CLASS="Emphasis">
Y</EM>
<SUB CLASS="Subscript">
max</SUB>
-<EM CLASS="Emphasis">
Y</EM>
<SUB CLASS="Subscript">
min</SUB>
), 1/(<EM CLASS="Emphasis">
Y</EM>
<SUB CLASS="Subscript">
max</SUB>
-<EM CLASS="Emphasis">
Y</EM>
<SUB CLASS="Subscript">
min</SUB>
)]</P>
<P CLASS="Body">
<A NAME="pgfId=1039726">
 </A>
The default is [0.0, 1.0].</P>
</DIV>
<DIV>
<H3 CLASS="Argument">
<A NAME="pgfId=1039728">
 </A>
<A NAME="marker=1039727">
 </A>
ZCOORD_CONV (Get, Set)</H3>
<P CLASS="Body">
<A NAME="pgfId=1039729">
 </A>
Set this keyword to a vector, [<EM CLASS="Emphasis">
s</EM>
<SUB CLASS="Subscript">
0</SUB>
, <EM CLASS="Emphasis">
s</EM>
<SUB CLASS="Subscript">
1</SUB>
], of scaling factors used to convert <EM CLASS="Emphasis">
Z</EM>
 coordinates from data units to normalized units. The formula for the conversion is as follows:</P>
<P CLASS="Body-Indent">
<A NAME="pgfId=1039730">
 </A>
Normalized<EM CLASS="Emphasis">
Z</EM>
 = <EM CLASS="Emphasis">
s</EM>
<SUB CLASS="Subscript">
0</SUB>
 + <EM CLASS="Emphasis">
s</EM>
<SUB CLASS="Subscript">
1</SUB>
 * Data<EM CLASS="Emphasis">
Z</EM>
</P>
<P CLASS="Body">
<A NAME="pgfId=1039731">
 </A>
Recommended values are:</P>
<P CLASS="Body-Indent">
<A NAME="pgfId=1039732">
 </A>
[(-<EM CLASS="Emphasis">
Z</EM>
<SUB CLASS="Subscript">
min</SUB>
)/(<EM CLASS="Emphasis">
Z</EM>
<SUB CLASS="Subscript">
max</SUB>
-<EM CLASS="Emphasis">
Z</EM>
<SUB CLASS="Subscript">
min</SUB>
), 1/(<EM CLASS="Emphasis">
Z</EM>
<SUB CLASS="Subscript">
max</SUB>
-<EM CLASS="Emphasis">
Z</EM>
<SUB CLASS="Subscript">
min</SUB>
)]</P>
<P CLASS="Body">
<A NAME="pgfId=1039733">
 </A>
The default is [0.0, 1.0].</P>
</DIV>
</DIV>
<DIV>
<H2 CLASS="Method-Name">
<HR><A HREF="#top"><IMG SRC="buttonup.gif" ALIGN="right" BORDER=0></A>
<A NAME="pgfId=997927">
 </A>
<A NAME="85052">
 </A>
IDLgrPolyline::SetProperty</H2>
<P CLASS="Body">
<A NAME="pgfId=1006389">
 </A>
The IDLgrPolylines::<A NAME="marker=1052303">
 </A>
SetProperty procedure method sets the value of a property or group of properties for the polylines. <STRONG CLASS="Stone-Semibold">
<A HREF="idl302.htm#44823" CLASS="XRef">
IDLgrPolyline</A>
 </STRONG>
is described above.</P>


</DIV>
<DIV>
<H2 CLASS="Heading-1R">
<A NAME="pgfId=1006393">
 </A>
Calling Sequence</H2>
<P CLASS="Body">
<A NAME="pgfId=1006380">
 </A>
<EM CLASS="Emphasis">
Obj</EM>
 <CODE CLASS="Code">
-&gt;</CODE>
<EM CLASS="Emphasis">
[IDLgrPolylines::]</EM>
SetProperty</P>
</DIV>
<DIV>
<H2 CLASS="Heading-1R">
<A NAME="pgfId=1006381">
 </A>
Arguments</H2>
<P CLASS="Body">
<A NAME="pgfId=1006382">
 </A>
There are no arguments for this method.</P>
</DIV>
<DIV>
<H2 CLASS="Heading-1R">
<A NAME="pgfId=1006383">
 </A>
Keywords</H2>
<P CLASS="Body">
<A NAME="pgfId=1016698">
 </A>
Any keyword to <A HREF="idl302.htm#69241" CLASS="XRef">
IDLgrPolyline::Init</A>
</DIV>
</BODY>
</HTML>
