<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML EXPERIMENTAL 970324//EN">
<HTML>
<STYLE><!--
H1         { font-family: Stone Sans, Helvetica, Arial, sans-serif }
H1.Chapter-Name    { font-size: 36pt }
H2         { font-family: Stone Sans, Helvetica, Arial, sans-serif }
H3         { font-family: Stone Sans, Helvetica, Arial, sans-serif }
H4         { font-family: Stone Sans, Helvetica, Arial, sans-serif }
H5         { font-family: Stone Sans, Helvetica, Arial, sans-serif ;
             margin-top: -5.0pt ; font-size: 12pt }
H6         { font-family: Stone Sans, Helvetica, Arial, sans-serif ;
             margin-top: -5.0pt ; font-size: 12pt }
P          { font-family: Minion, Times, serif }
P.api      { font-family: Courier ; font-weight: Bold }
P.Code     { font-family: Courier, serif ; font-size: 10pt}
P.Code-2   { font-family: Courier, serif ; font-size: 10pt}
P.Code-Result   { font-family: Courier, serif ; font-size: 10pt ;
                  font-weight: Bold}
P.ChapTOC  { font-family: Stone Sans, Helvetica, Arial, sans-serif }
P.Chapter-NameTOC   { font-family: Stone Sans, Helvetica, Arial, sans-serif ;
		      font-size: 20pt; font-weight: Bold }
P.Level2IX	{margin-left: 10pt }
LI.Code-Numbered     { font-family: Courier, serif ; font-size: 10pt}
LI.Code-Numbered-1   { font-family: Courier, serif ; font-size: 10pt}
--></STYLE>

<HEAD>
<META NAME="GENERATOR" CONTENT="Adobe FrameMaker 5.5/HTML Export Filter">

<TITLE> WIDGET_DROPLIST</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">
<DIV>
<DIV><table width="100%" border=0 cellspacing=0 cellpadding=0> <TR>  <TD></TD>   <TD  bgcolor="#ffffff">     <IMG SRC = "idlmap.gif" USEMAP = "#idlmap.gif" BORDER = 0>   </TD> </TR></TABLE><MAP NAME = "idlmap.gif"><AREA SHAPE=RECT HREF="idl205.htm" COORDS="290, 29, 344, 43"><AREA SHAPE=RECT HREF="idl.htm" COORDS="139, 29, 239, 46"><AREA SHAPE=RECT HREF="idl203.htm" COORDS="0, 29, 98, 46"><AREA SHAPE=RECT HREF="idl.htm" COORDS="68, 0, 275, 18"></MAP></DIV><HR></DIV>
<H2 CLASS="Routine-Name">
<A NAME="pgfId=58310">
 </A>
<A NAME="29873">
 </A>
WIDGET_DROPLIST</H2>
<P CLASS="Body">
<A NAME="pgfId=58313">
 </A>
The <A NAME="marker=58311">
 </A>
WIDGET_DROPLIST <A NAME="marker=58312">
 </A>
function creates &quot;droplist&quot; widgets. A droplist widget is a button with a label that, when selected, reveals a list of options from which to choose. When the user selects a new option from the list, the list disappears and the button title displays the currently-selected option. This action generates an event containing the index of the selected item, which ranges from 0 to the number of elements in the list minus one, and updates the label on the push-button.</P>
<P CLASS="Body">
<A NAME="pgfId=58314">
 </A>
The returned value of this function is the widget ID of the newly-created droplist widget.</P>
<DIV>
<H3 CLASS="Heading-1R">
<A NAME="pgfId=58315">
 </A>
Calling Sequence</H3>
<P CLASS="Body">
<A NAME="pgfId=58316">
 </A>
Result = WIDGET_DROPLIST(<I CLASS="Italic">
Parent</I>
)</P>
</DIV>
<DIV>
<H3 CLASS="Heading-1R">
<A NAME="pgfId=58317">
 </A>
Arguments</H3>
<DIV>
<H4 CLASS="Argument">
<A NAME="pgfId=58318">
 </A>
Parent</H4>
<P CLASS="Body">
<A NAME="pgfId=58319">
 </A>
The widget ID of the parent widget for the new droplist widget.</P>
</DIV>
</DIV>
<DIV>
<H3 CLASS="Heading-1R">
<A NAME="pgfId=58320">
 </A>
Keywords</H3>
<DIV>
<H4 CLASS="Argument">
<A NAME="pgfId=192790">
 </A>
<A NAME="marker=192789">
 </A>
DYNAMIC_RESIZE</H4>
<P CLASS="Body">
<A NAME="pgfId=192792">
 </A>
<A NAME="marker=192791">
 </A>
Set this keyword to create a widget that resizes itself to fit its new value whenever its value is changed. Note that this keyword does not take effect when used with the SCR_XSIZE, SCR_YSIZE, XSIZE, or YSIZE keywords. If one of these keywords is also set, the widget will be sized as specified by the sizing keyword and will never resize itself dynamically.</P>
</DIV>
<DIV>
<H4 CLASS="Argument">
<A NAME="pgfId=192787">
 </A>
<A NAME="marker=108971">
 </A>
EVENT_FUNC</H4>
<P CLASS="Body">
<A NAME="pgfId=58388">
 </A>
A string containing the name of a function to be called by the WIDGET_EVENT function when an event arrives from a widget in the widget hierarchy rooted at the newly-created widget.</P>
</DIV>
<DIV>
<H4 CLASS="Argument">
<A NAME="pgfId=58393">
 </A>
<A NAME="marker=108972">
 </A>
EVENT_PRO</H4>
<P CLASS="Body">
<A NAME="pgfId=58396">
 </A>
A string containing the name of a procedure to be called by the WIDGET_EVENT function when an event arrives from a widget in the widget hierarchy rooted at the newly-created widget.</P>
</DIV>
<DIV>
<H4 CLASS="Argument">
<A NAME="pgfId=58399">
 </A>
<A NAME="marker=58398">
 </A>
FRAME</H4>
<P CLASS="Body">
<A NAME="pgfId=58400">
 </A>
The value of this keyword specifies the width of a frame in units specified by the UNITS keyword (pixels are the default) to be drawn around the borders of the widget. Note that this keyword is only a hint to the toolkit, and may be ignored in some instances.</P>
</DIV>
<DIV>
<H4 CLASS="Argument">
<A NAME="pgfId=58404">
 </A>
<A NAME="marker=108973">
 </A>
FUNC_GET_VALUE</H4>
<P CLASS="Body">
<A NAME="pgfId=58407">
 </A>
A string containing the name of a function to be called when the GET_VALUE keyword to the WIDGET_CONTROL procedure is called for this widget. Using this technique allows you to change the value that should be returned for a widget. Compound widgets use this ability to define their values transparently to the user.</P>
</DIV>
<DIV>
<H4 CLASS="Argument">
<A NAME="pgfId=58412">
 </A>
<A NAME="marker=108974">
 </A>
GROUP_LEADER</H4>
<P CLASS="Body">
<A NAME="pgfId=58415">
 </A>
The widget ID of an existing widget that serves as &quot;group leader&quot; for the newly-created widget. When a group leader is killed, for any reason, all widgets in the group are also destroyed.</P>
<P CLASS="Body">
<A NAME="pgfId=58419">
 </A>
A given widget can be in more than one group. The WIDGET_CONTROL procedure can be used to add additional group associations to a widget. It is not possible to remove a widget from an existing group.</P>
</DIV>
<DIV>
<H4 CLASS="Argument">
<A NAME="pgfId=58424">
 </A>
<A NAME="marker=108975">
 </A>
KILL_NOTIFY</H4>
<P CLASS="Body">
<A NAME="pgfId=58427">
 </A>
Set this keyword to a string that contains the name of a procedure to be called automatically when the specified widget dies. Each widget is allowed a single such &quot;callback&quot; procedure. It can be removed by setting the routine to the null string (<CODE CLASS="Code">
''</CODE>
). Note that the procedure specified is used only if you are not using the XMANAGER procedure to manage your widgets.</P>
<P CLASS="Body">
<A NAME="pgfId=58431">
 </A>
The callback routine is called with the widget identifier as its only argument. At that point, the widget identifier can only be used with the WIDGET_CONTROL procedure to get or set the user value. All other requests that require a widget ID are disallowed for the target widget. The callback is not issued until the WIDGET_EVENT function is called.</P>
<P CLASS="Body">
<A NAME="pgfId=158829">
 </A>
If you use the XMANAGER procedure to manage your widgets, the value of this keyword is overwritten. Use the CLEANUP keyword to XMANAGER to specify a procedure to be called when a managed widget dies.</P>
</DIV>
<DIV>
<H4 CLASS="Argument">
<A NAME="pgfId=67153">
 </A>
<A NAME="marker=108976">
 </A>
NO_COPY</H4>
<P CLASS="Body">
<A NAME="pgfId=913978">
 </A>
Usually, when setting or getting widget user values, either at widget creation or using the SET_UVALUE and GET_UVALUE keywords to WIDGET_CONTROL, IDL makes a second copy of the data being transferred. Although this technique is fine for small data, it can have a significant memory cost when the data being copied is large.</P>
<P CLASS="Body">
<A NAME="pgfId=913979">
 </A>
If the NO_COPY keyword is set, IDL handles these operations differently. Rather than copy the source data, it takes the data away from the source and attaches it directly to the destination. This feature can be used by compound widgets to obtain state information from a UVALUE without all the memory copying that would otherwise occur. However, it has the side effect of causing the source variable to become undefined. On a &quot;set&quot; operation (using the UVALUE keyword to WIDGET_DROPLIST or the SET_UVALUE keyword to WIDGET_CONTROL), the variable passed as value becomes undefined. On a &quot;get&quot; operation (GET_UVALUE keyword to WIDGET_CONTROL), the user value of the widget in question becomes undefined.</P>
</DIV>
<DIV>
<H4 CLASS="Argument">
<A NAME="pgfId=67614">
 </A>
<A NAME="marker=108977">
 </A>
NOTIFY_REALIZE</H4>
<P CLASS="Body">
<A NAME="pgfId=67617">
 </A>
Set this keyword to a string that contains the name of a procedure to be called automatically when the specified widget is realized. This callback occurs just once (because widgets are realized only once). Each widget is allowed a single such &quot;callback&quot; procedure. It can be removed by setting the routine to the null string (<CODE CLASS="Code">
''</CODE>
). The callback routine is called with the widget ID as its only argument.</P>
</DIV>
<DIV>
<H4 CLASS="Argument">
<A NAME="pgfId=67133">
 </A>
<A NAME="marker=108978">
 </A>
PRO_SET_VALUE</H4>
<P CLASS="Body">
<A NAME="pgfId=67136">
 </A>
A string containing the name of a procedure to be called when the SET_VALUE keyword to the WIDGET_CONTROL procedure is called for this widget. Using this technique allows you to designate a routine that sets the value for a widget. Compound widgets use this ability to define their values transparently to the user.</P>
</DIV>
<DIV>
<H4 CLASS="Argument">
<A NAME="pgfId=67140">
 </A>
<A NAME="marker=67138">
 </A>
RESOURCE_NAME</H4>
<P CLASS="Body">
<A NAME="pgfId=67141">
 </A>
A string containing an X Window System resource name to be applied to the widget. See <A HREF="idl200.htm#71756" CLASS="XRef">
RESOURCE_NAME</A>
 for a complete discussion of this keyword.</P>
</DIV>
<DIV>
<H4 CLASS="Argument">
<A NAME="pgfId=67120">
 </A>
<A NAME="marker=67119">
 </A>
SCR_XSIZE</H4>
<P CLASS="Body">
<A NAME="pgfId=67121">
 </A>
Set this keyword to the desired &quot;screen&quot; width of the widget, in units specified by the UNITS keyword (pixels are the default). In many cases, setting this keyword is the same as setting the XSIZE keyword.</P>
</DIV>
<DIV>
<H4 CLASS="Argument">
<A NAME="pgfId=67123">
 </A>
<A NAME="marker=67122">
 </A>
SCR_YSIZE</H4>
<P CLASS="Body">
<A NAME="pgfId=67124">
 </A>
Set this keyword to the desired &quot;screen&quot; height of the widget, in units specified by the UNITS keyword (pixels are the default). In many cases, setting this keyword is the same as setting the YSIZE keyword.</P>
</DIV>
<DIV>
<H4 CLASS="Argument">
<A NAME="pgfId=888903">
 </A>
<A NAME="marker=888902">
 </A>
TITLE</H4>
<P CLASS="Body">
<A NAME="pgfId=888904">
 </A>
Set this keyword to a string to be used as the title for the droplist widget.</P>
</DIV>
<DIV>
<H4 CLASS="Argument">
<A NAME="pgfId=58334">
 </A>
<A NAME="marker=108979">
 </A>
TRACKING_EVENTS</H4>
<P CLASS="Body">
<A NAME="pgfId=58364">
 </A>
Set this keyword to cause widget tracking events to be issued for the widget whenever the mouse pointer enters or leaves the region covered by that widget. For the structure of tracking events, see <A HREF="idl200.htm#72083" CLASS="XRef">
TRACKING_EVENTS</A>
 in the documentation for WIDGET_BASE.</P>
</DIV>
<DIV>
<H4 CLASS="Argument">
<A NAME="pgfId=895561">
 </A>
<A NAME="marker=895560">
 </A>
UNITS</H4>
<P CLASS="Body">
<A NAME="pgfId=895563">
 </A>
Set UNITS equal to 0 (zero) to specify that all measurements are in pixels (this is the default), to 1 (one) to specify that all measurements are in inches, or to 2 (two) to specify that all measurements are in centimeters.</P>
</DIV>
<DIV>
<H4 CLASS="Argument">
<A NAME="pgfId=67166">
 </A>
<A NAME="marker=67165">
 </A>
UVALUE</H4>
<P CLASS="Body">
<A NAME="pgfId=67167">
 </A>
The &quot;user value&quot; to be assigned to the widget.</P>
<P CLASS="Body">
<A NAME="pgfId=67168">
 </A>
Each widget can contain a user-specified value of any data type and organization. This value is not used by the widget in any way, but exists entirely for the convenience of the IDL programmer. This keyword allows you to set this value when the widget is first created.</P>
<P CLASS="Body">
<A NAME="pgfId=67172">
 </A>
If UVALUE is not present, the widget's initial user value is undefined.</P>
</DIV>
<DIV>
<H4 CLASS="Argument">
<A NAME="pgfId=67174">
 </A>
<A NAME="marker=67173">
 </A>
VALUE</H4>
<P CLASS="Body">
<A NAME="pgfId=67175">
 </A>
The initial value setting of the widget. The value of a droplist widget is a scalar string or array of strings that contains the text of the list items--one list item per array element. List widgets are sized based on the length (in characters) of the longest item specified in the array of values for the VALUE keyword.</P>
</DIV>
<DIV>
<H4 CLASS="Argument">
<A NAME="pgfId=67194">
 </A>
<A NAME="marker=67193">
 </A>
XOFFSET</H4>
<P CLASS="Body">
<A NAME="pgfId=67195">
 </A>
The horizontal offset of the widget in units specified by the UNITS keyword (pixels are the default) relative to its parent.</P>
<P CLASS="Body">
<A NAME="pgfId=67196">
 </A>
Specifying an offset relative to a row or column major base widget does not work because those widgets enforce their own layout policies. This keyword is primarily of use relative to a plain base widget. Note that it is best to avoid using this style of widget programming.</P>
</DIV>
<DIV>
<H4 CLASS="Argument">
<A NAME="pgfId=67198">
 </A>
<A NAME="marker=67197">
 </A>
XSIZE</H4>
<P CLASS="Body">
<A NAME="pgfId=888776">
 </A>
The desired width of the droplist widget area, in units specified by the UNITS keyword (pixels are the default). Most widgets attempt to size themselves to fit the situation. However, if the desired effect is not produced, use this keyword to override it. This keyword does not control the size of the droplist button or of the dropped list. Instead, it controls the size &quot;around&quot; the droplist button and, as such, is not particularly useful.</P>
</DIV>
<DIV>
<H4 CLASS="Argument">
<A NAME="pgfId=67201">
 </A>
<A NAME="marker=67200">
 </A>
YOFFSET</H4>
<P CLASS="Body">
<A NAME="pgfId=67202">
 </A>
The vertical offset of the widget in units specified by the UNITS keyword (pixels are the default) relative to its parent. This offset is specified relative to the <I CLASS="Italic">
upper left</I>
 corner of the parent widget.</P>
<P CLASS="Body">
<A NAME="pgfId=67203">
 </A>
Specifying an offset relative to a row or column major base widget does not work because those widgets enforce their own layout policies. This keyword is primarily of use relative to a plain base widget. Note that it is best to avoid using this style of widget programming.</P>
</DIV>
<DIV>
<H4 CLASS="Argument">
<A NAME="pgfId=67205">
 </A>
<A NAME="marker=67204">
 </A>
YSIZE</H4>
<P CLASS="Body">
<A NAME="pgfId=67206">
 </A>
The desired height of the widget, in units specified by the UNITS keyword (pixels are the default). Most widgets attempt to size themselves to fit the situation. However, if the desired effect is not produced, use this keyword to override it. This keyword does not control the size of the droplist button or of the dropped list. Instead, it controls the size &quot;around&quot; the droplist button and, as such, is not particularly useful.</P>
</DIV>
</DIV>
<DIV>
<H3 CLASS="Heading-1R">
<A NAME="pgfId=888869">
 </A>
Keywords to WIDGET_CONTROL</H3>
<P CLASS="Body">
<A NAME="pgfId=888870">
 </A>
A number of keywords to the <A HREF="idl202.htm#17837" CLASS="XRef">
WIDGET_CONTROL</A>
 procedure affect the behavior of droplist widgets. In addition to those keywords that affect all widgets, the following are particularly useful: <A HREF="idl202.htm#69286" CLASS="XRef">
DYNAMIC_RESIZE</A>
, <A HREF="idl202.htm#29139" CLASS="XRef">
SET_DROPLIST_SELECT</A>
, <A HREF="idl202.htm#76956" CLASS="XRef">
SET_VALUE</A>
.</P>
</DIV>
<DIV>
<H3 CLASS="Heading-1R">
<A NAME="pgfId=889782">
 </A>
Keywords to WIDGET_INFO</H3>
<P CLASS="Body">
<A NAME="pgfId=889786">
 </A>
A number of keywords to the <A HREF="idl206.htm#45547" CLASS="XRef">
WIDGET_INFO</A>
 function return information that applies specifically to droplist widgets. In addition to those keywords that apply to all widgets, the following are particularly useful: <A HREF="idl206.htm#55802" CLASS="XRef">
DROPLIST_NUMBER</A>
, <A HREF="idl206.htm#70527" CLASS="XRef">
DROPLIST_SELECT</A>
, <A HREF="idl206.htm#62955" CLASS="XRef">
DYNAMIC_RESIZE</A>
.</P>
</DIV>
<DIV>
<H3 CLASS="Heading-1R">
<A NAME="pgfId=67226">
 </A>
Widget Events Returned by Droplist Widgets</H3>
<P CLASS="Body">
<A NAME="pgfId=67228">
 </A>
<A NAME="marker=67227">
 </A>
Pressing the mouse button while the mouse cursor is over an element of a droplist widget causes the widget to change the label on the droplist button and to generate an event. The appearance of any previously selected element is restored to normal at the same time. The event structure returned by the WIDGET_EVENT function is defined by the following statement:</P>
<P CLASS="Code">
<A NAME="pgfId=67229">
 </A>
{ WIDGET_DROPLIST, ID:0L, TOP:0L, HANDLER:0L, INDEX:0L }</P>
<P CLASS="Body">
<A NAME="pgfId=67230">
 </A>
The first three fields are the standard fields found in every widget event. INDEX returns the index of the selected item. This can be used to index the array of names originally used to set the widget's value.</P>
<UL>
<P CLASS="Note"><b><FONT SIZE=+1>NOTE: </FONT></b>
<A NAME="pgfId=889616">
 </A>
Platform-specific UI toolkits behave differently if a droplist widget has only a single element. On some platforms, selecting that element again does not generate an event. Events are always generated if the list contains multiple items.</LI>
</UL>
</DIV>
<DIV>
<H3 CLASS="Heading-1R">
<A NAME="pgfId=67380">
 </A>
See Also</H3>
<P CLASS="Body">
<A NAME="pgfId=67381">
 </A>
<A HREF="idl61.htm#62114" CLASS="XRef">
CW_PDMENU</A>
, <A HREF="idl201.htm#63640" CLASS="XRef">
WIDGET_BUTTON</A>
, <A HREF="idl208.htm#52324" CLASS="XRef">
WIDGET_LIST</A>
</P>
</DIV>
</BODY>
</HTML>
