<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML EXPERIMENTAL 970324//EN">
<HTML>
<STYLE><!--
H1         { font-family: Stone Sans, Helvetica, Arial, sans-serif }
H1.Chapter-Name    { font-size: 36pt }
H2         { font-family: Stone Sans, Helvetica, Arial, sans-serif }
H3         { font-family: Stone Sans, Helvetica, Arial, sans-serif }
H4         { font-family: Stone Sans, Helvetica, Arial, sans-serif }
H5         { font-family: Stone Sans, Helvetica, Arial, sans-serif ;
             margin-top: -5.0pt ; font-size: 12pt }
H6         { font-family: Stone Sans, Helvetica, Arial, sans-serif ;
             margin-top: -5.0pt ; font-size: 12pt }
P          { font-family: Minion, Times, serif }
P.api      { font-family: Courier ; font-weight: Bold }
P.Code     { font-family: Courier, serif ; font-size: 10pt}
P.Code-2   { font-family: Courier, serif ; font-size: 10pt}
P.Code-Result   { font-family: Courier, serif ; font-size: 10pt ;
                  font-weight: Bold}
P.ChapTOC  { font-family: Stone Sans, Helvetica, Arial, sans-serif }
P.Chapter-NameTOC   { font-family: Stone Sans, Helvetica, Arial, sans-serif ;
		      font-size: 20pt; font-weight: Bold }
P.Level2IX	{margin-left: 10pt }
LI.Code-Numbered     { font-family: Courier, serif ; font-size: 10pt}
LI.Code-Numbered-1   { font-family: Courier, serif ; font-size: 10pt}
--></STYLE>

<HEAD>
<META NAME="GENERATOR" CONTENT="Adobe FrameMaker 5.5/HTML Export Filter">

<TITLE> WIDGET_TEXT</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">
<DIV>
<DIV><table width="100%" border=0 cellspacing=0 cellpadding=0> <TR>  <TD></TD>   <TD  bgcolor="#ffffff">     <IMG SRC = "idlmap.gif" USEMAP = "#idlmap.gif" BORDER = 0>   </TD> </TR></TABLE><MAP NAME = "idlmap.gif"><AREA SHAPE=RECT HREF="idl20c.htm" COORDS="290, 29, 344, 43"><AREA SHAPE=RECT HREF="idl.htm" COORDS="139, 29, 239, 46"><AREA SHAPE=RECT HREF="idl20a.htm" COORDS="0, 29, 98, 46"><AREA SHAPE=RECT HREF="idl.htm" COORDS="68, 0, 275, 18"></MAP></DIV><HR></DIV>
<H2 CLASS="Routine-Name">
<A NAME="pgfId=680547">
 </A>
<A NAME="54171">
 </A>
WIDGET_TEXT</H2>
<P CLASS="Body">
<A NAME="pgfId=680548">
 </A>
The <A NAME="marker=674938">
 </A>
WIDGET_TEXT function creates text widgets. Text widgets display text and optionally get textual input from the user. They can have 1 or more lines, and can optionally contain <A NAME="marker=674939">
 </A>
scroll bars to allow viewing more text than can otherwise be displayed on the screen.</P>
<P CLASS="Body">
<A NAME="pgfId=680549">
 </A>
The returned value of this function is the widget ID of the newly-created text widget.</P>
<DIV>
<H3 CLASS="Heading-1R">
<A NAME="pgfId=680550">
 </A>
Calling Sequence</H3>
<P CLASS="Body">
<A NAME="pgfId=680551">
 </A>
Result = WIDGET_TEXT(<I CLASS="Italic">
Parent</I>
)</P>
</DIV>
<DIV>
<H3 CLASS="Heading-1R">
<A NAME="pgfId=680552">
 </A>
Arguments</H3>
<DIV>
<H4 CLASS="Argument">
<A NAME="pgfId=680553">
 </A>
Parent</H4>
<P CLASS="Body">
<A NAME="pgfId=680554">
 </A>
The widget ID of the parent widget for the new text widget.</P>
</DIV>
</DIV>
<DIV>
<H3 CLASS="Heading-1R">
<A NAME="pgfId=680555">
 </A>
Keywords</H3>
<DIV>
<H4 CLASS="Argument">
<A NAME="pgfId=680556">
 </A>
<A NAME="marker=674940">
 </A>
ALL_EVENTS</H4>
<P CLASS="Body">
<A NAME="pgfId=886878">
 </A>
<A NAME="marker=886877">
 </A>
Along with the EDITABLE keyword, ALL_EVENTS controls the type of events generated by the text widget. Set the ALL_EVENTS keyword to cause the full set of events to be generated. If ALL_EVENTS is not set, setting EDITABLE causes only end-of-line events to be generated. If EDITABLE is not set, all events are suppressed. See <A HREF="idl20b.htm#37349" CLASS="XRef">
Effects of using the ALL_EVENTS and EDITABLE keywords.</A>
 for additional details.</P>
<CENTER><TABLE BORDER="1">
<CAPTION>
<UL>
<LI CLASS="Table">
<A NAME="pgfId=808611">
 </A>
<A NAME="37349">
 </A>
Effects of using the ALL_EVENTS and EDITABLE keywords.</LI>
</UL>
<TR>
<TH ROWSPAN="1" COLSPAN="2">
<P CLASS="CellHeading">
<A NAME="pgfId=808562">
 </A>
Keywords</P>
</TH>
<TH ROWSPAN="1" COLSPAN="2">
<P CLASS="CellHeading">
<A NAME="pgfId=808566">
 </A>
Effects</P>
</TH>
</TR>
<TR>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="CellHeading">
<A NAME="pgfId=808570">
 </A>
ALL_EVENTS</P>
</TH>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="CellHeading">
<A NAME="pgfId=808572">
 </A>
EDITABLE</P>
</TH>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="CellHeading">
<A NAME="pgfId=808574">
 </A>
Input changes widget contents?</P>
</TH>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="CellHeading">
<A NAME="pgfId=808576">
 </A>
Type of events generated.</P>
</TH>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="CellBody">
<A NAME="pgfId=808578">
 </A>
Not set</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="CellBody">
<A NAME="pgfId=808580">
 </A>
Not set</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="CellBody">
<A NAME="pgfId=808582">
 </A>
No</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="CellBody">
<A NAME="pgfId=808584">
 </A>
None</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="CellBody">
<A NAME="pgfId=808586">
 </A>
Not set</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="CellBody">
<A NAME="pgfId=808588">
 </A>
Set</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="CellBody">
<A NAME="pgfId=808590">
 </A>
Yes</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="CellBody">
<A NAME="pgfId=808592">
 </A>
End-of-line insertion</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="CellBody">
<A NAME="pgfId=808594">
 </A>
Set</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="CellBody">
<A NAME="pgfId=808596">
 </A>
Not set</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="CellBody">
<A NAME="pgfId=808598">
 </A>
No</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="CellBody">
<A NAME="pgfId=808600">
 </A>
All events</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="CellBody">
<A NAME="pgfId=808602">
 </A>
Set</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="CellBody">
<A NAME="pgfId=808604">
 </A>
Set</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="CellBody">
<A NAME="pgfId=808606">
 </A>
Yes</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="CellBody">
<A NAME="pgfId=808608">
 </A>
All events</P>
</TD>
</TR>
</CAPTION>
</TABLE></CENTER>
</DIV>
<DIV>
<H4 CLASS="Argument">
<A NAME="pgfId=886884">
 </A>
<A NAME="marker=886883">
 </A>
EDITABLE</H4>
<P CLASS="Body">
<A NAME="pgfId=685628">
 </A>
Set this keyword to allow direct user editing of the text widget contents. Normally, the text in text widgets is read-only. See <A HREF="idl202.htm#99458" CLASS="XRef">
Effects of using the ALL_TEXT_EVENTS and EDITABLE keywords.</A>
 for a description of how EDITABLE interacts with the ALL_EVENTS keyword.</P>
</DIV>
<DIV>
<H4 CLASS="Argument">
<A NAME="pgfId=680561">
 </A>
<A NAME="marker=109023">
 </A>
EVENT_FUNC</H4>
<P CLASS="Body">
<A NAME="pgfId=680562">
 </A>
A string containing the name of a function to be called by the WIDGET_EVENT function when an event arrives from a widget in the widget hierarchy rooted at the newly-created widget.</P>
</DIV>
<DIV>
<H4 CLASS="Argument">
<A NAME="pgfId=680563">
 </A>
<A NAME="marker=109024">
 </A>
EVENT_PRO</H4>
<P CLASS="Body">
<A NAME="pgfId=680564">
 </A>
A string containing the name of a procedure to be called by the WIDGET_EVENT function when an event arrives from a widget in the widget hierarchy rooted at the newly-created widget.</P>
</DIV>
<DIV>
<H4 CLASS="Argument">
<A NAME="pgfId=680565">
 </A>
<A NAME="marker=109025">
 </A>
FONT</H4>
<P CLASS="Body">
<A NAME="pgfId=934178">
 </A>
The name of the font to be used by the widget. The font specified is a &quot;device font&quot; (an X Windows font on Motif systems; a TrueType or PostScript font on Windows or Macintosh systems). See <A HREF="fonts.html#11429" CLASS="XRef">
</A>
 for details on specifying names for device fonts. If this keyword is omitted, the default font is used.</P>
<UL>
<P CLASS="Note"><b><FONT SIZE=+1>NOTE: </FONT></b>
<A NAME="pgfId=923716">
 </A>
On Microsoft Windows platforms, if FONT is not specified, IDL uses the system default font. Different versions of Windows use different system default fonts; in general, the system default font is the font appropriate for the version of Windows in question.</LI>
</UL>
</DIV>
<DIV>
<H4 CLASS="Argument">
<A NAME="pgfId=680567">
 </A>
<A NAME="marker=674965">
 </A>
FRAME</H4>
<P CLASS="Body">
<A NAME="pgfId=680568">
 </A>
The value of this keyword specifies the width of a frame in units specified by the UNITS keyword (pixels are the default) to be drawn around the borders of the widget. </P>
<UL>
<P CLASS="Note"><b><FONT SIZE=+1>NOTE: </FONT></b>
<A NAME="pgfId=933185">
 </A>
This keyword is only a &quot;hint&quot; to the toolkit, and may be ignored in some instances. Under Microsoft Windows, text widgets <EM CLASS="Emphasis">
always</EM>
 have frames.</LI>
</UL>
</DIV>
<DIV>
<H4 CLASS="Argument">
<A NAME="pgfId=680569">
 </A>
<A NAME="marker=109026">
 </A>
FUNC_GET_VALUE</H4>
<P CLASS="Body">
<A NAME="pgfId=680570">
 </A>
A string containing the name of a function to be called when the GET_VALUE keyword to the WIDGET_CONTROL procedure is called for this widget. Using this technique allows you to change the value that should be returned for a widget. Compound widgets use this ability to define their values transparently to the user.</P>
</DIV>
<DIV>
<H4 CLASS="Argument">
<A NAME="pgfId=680571">
 </A>
<A NAME="marker=109027">
 </A>
GROUP_LEADER</H4>
<P CLASS="Body">
<A NAME="pgfId=680572">
 </A>
The widget ID of an existing widget that serves as &quot;group leader&quot; for the newly-created widget. When a group leader is killed, for any reason, all widgets in the group are also destroyed.</P>
<P CLASS="Body">
<A NAME="pgfId=680573">
 </A>
A given widget can be in more than one group. The WIDGET_CONTROL procedure can be used to add additional group associations to a widget. It is not possible to remove a widget from an existing group.</P>
</DIV>
<DIV>
<H4 CLASS="Argument">
<A NAME="pgfId=911545">
 </A>
<A NAME="marker=911544">
 </A>
KBRD_FOCUS_EVENTS</H4>
<P CLASS="Body">
<A NAME="pgfId=911547">
 </A>
<A NAME="marker=911546">
 </A>
Set this keyword to make the base return keyboard focus events whenever the keyboard focus of the base changes. See the <A HREF="idl20b.htm#42563" CLASS="XRef">
Text Widget Events</A>
 section below for more information.</P>
</DIV>
<DIV>
<H4 CLASS="Argument">
<A NAME="pgfId=680574">
 </A>
<A NAME="marker=109028">
 </A>
KILL_NOTIFY</H4>
<P CLASS="Body">
<A NAME="pgfId=680575">
 </A>
Set this keyword to a string that contains the name of a procedure to be called automatically when the specified widget dies. Each widget is allowed a single such &quot;callback&quot; procedure. It can be removed by setting the routine to the null string (<CODE CLASS="Code">
''</CODE>
). Note that the procedure specified is used only if you are not using the XMANAGER procedure to manage your widgets.</P>
<P CLASS="Body">
<A NAME="pgfId=680576">
 </A>
The callback routine is called with the widget identifier as its only argument. At that point, the widget identifier can only be used with the WIDGET_CONTROL procedure to get or set the user value. All other requests that require a widget ID are disallowed for the target widget. The callback is not issued until the WIDGET_EVENT function is called.</P>
<P CLASS="Body">
<A NAME="pgfId=158861">
 </A>
If you use the XMANAGER procedure to manage your widgets, the value of this keyword is overwritten. Use the CLEANUP keyword to XMANAGER to specify a procedure to be called when a managed widget dies.</P>
</DIV>
<DIV>
<H4 CLASS="Argument">
<A NAME="pgfId=680577">
 </A>
<A NAME="marker=109029">
 </A>
NO_COPY</H4>
<P CLASS="Body">
<A NAME="pgfId=914022">
 </A>
Usually, when setting or getting widget user values, either at widget creation or using the SET_UVALUE and GET_UVALUE keywords to WIDGET_CONTROL, IDL makes a second copy of the data being transferred. Although this technique is fine for small data, it can have a significant memory cost when the data being copied is large.</P>
<P CLASS="Body">
<A NAME="pgfId=914023">
 </A>
If the NO_COPY keyword is set, IDL handles these operations differently. Rather than copy the source data, it takes the data away from the source and attaches it directly to the destination. This feature can be used by compound widgets to obtain state information from a UVALUE without all the memory copying that would otherwise occur. However, it has the side effect of causing the source variable to become undefined. On a &quot;set&quot; operation (using the UVALUE keyword to WIDGET_TEXT or the SET_UVALUE keyword to WIDGET_CONTROL), the variable passed as value becomes undefined. On a &quot;get&quot; operation (GET_UVALUE keyword to WIDGET_CONTROL), the user value of the widget in question becomes undefined.</P>
</DIV>
<DIV>
<H4 CLASS="Argument">
<A NAME="pgfId=680579">
 </A>
<A NAME="marker=674996">
 </A>
NO_NEWLINE</H4>
<P CLASS="Body">
<A NAME="pgfId=680580">
 </A>
Normally, when setting the value of a multi-line text widget, newline characters are automatically appended to the end of each line of text. Set this keyword to suppress this action.</P>
</DIV>
<DIV>
<H4 CLASS="Argument">
<A NAME="pgfId=67670">
 </A>
<A NAME="marker=109030">
 </A>
NOTIFY_REALIZE</H4>
<P CLASS="Body">
<A NAME="pgfId=67673">
 </A>
Set this keyword to a string that contains the name of a procedure to be called automatically when the specified widget is realized. This callback occurs just once (because widgets are realized only once). Each widget is allowed a single such &quot;callback&quot; procedure. It can be removed by setting the routine to the null string (<CODE CLASS="Code">
''</CODE>
). The callback routine is called with the widget ID as its only argument.</P>
</DIV>
<DIV>
<H4 CLASS="Argument">
<A NAME="pgfId=680581">
 </A>
<A NAME="marker=109031">
 </A>
PRO_SET_VALUE</H4>
<P CLASS="Body">
<A NAME="pgfId=680582">
 </A>
A string containing the name of a procedure to be called when the SET_VALUE keyword to the WIDGET_CONTROL procedure is called for this widget. Using this technique allows you to designate a routine that sets the value for a widget. Compound widgets use this ability to define their values transparently to the user.</P>
</DIV>
<DIV>
<H4 CLASS="Argument">
<A NAME="pgfId=724077">
 </A>
<A NAME="marker=724075">
 </A>
RESOURCE_NAME</H4>
<P CLASS="Body">
<A NAME="pgfId=734151">
 </A>
A string containing an X Window System resource name to be applied to the widget. See <A HREF="idl200.htm#71756" CLASS="XRef">
RESOURCE_NAME</A>
 for a complete discussion of this keyword.</P>
</DIV>
<DIV>
<H4 CLASS="Argument">
<A NAME="pgfId=67343">
 </A>
<A NAME="marker=67342">
 </A>
SCR_XSIZE</H4>
<P CLASS="Body">
<A NAME="pgfId=67344">
 </A>
Set this keyword to the desired &quot;screen&quot; width of the widget, in units specified by the UNITS keyword (pixels are the default). In many cases, setting this keyword is the same as setting the XSIZE keyword.</P>
</DIV>
<DIV>
<H4 CLASS="Argument">
<A NAME="pgfId=67346">
 </A>
<A NAME="marker=67345">
 </A>
SCR_YSIZE</H4>
<P CLASS="Body">
<A NAME="pgfId=67347">
 </A>
Set this keyword to the desired &quot;screen&quot; height of the widget, in units specified by the UNITS keyword (pixels are the default). In many cases, setting this keyword is the same as setting the YSIZE keyword.</P>
</DIV>
<DIV>
<H4 CLASS="Argument">
<A NAME="pgfId=680583">
 </A>
<A NAME="marker=675003">
 </A>
SCROLL</H4>
<P CLASS="Body">
<A NAME="pgfId=680584">
 </A>
Set this keyword to give the widget <A NAME="marker=675004">
 </A>
scroll bars that allow viewing portions of the widget contents that are not currently on the screen.</P>
</DIV>
<DIV>
<H4 CLASS="Argument">
<A NAME="pgfId=67432">
 </A>
<A NAME="marker=109032">
 </A>
TRACKING_EVENTS</H4>
<P CLASS="Body">
<A NAME="pgfId=67433">
 </A>
Set this keyword to cause widget tracking events to be issued for the widget whenever the mouse pointer enters or leaves the region covered by that widget. For the structure of tracking events, see <A HREF="idl200.htm#72083" CLASS="XRef">
TRACKING_EVENTS</A>
 in the documentation for WIDGET_BASE.</P>
</DIV>
<DIV>
<H4 CLASS="Argument">
<A NAME="pgfId=895656">
 </A>
<A NAME="marker=895655">
 </A>
UNITS</H4>
<P CLASS="Body">
<A NAME="pgfId=895658">
 </A>
Set UNITS equal to 0 (zero) to specify that all measurements are in pixels (this is the default), to 1 (one) to specify that all measurements are in inches, or to 2 (two) to specify that all measurements are in centimeters.</P>
<UL>
<P CLASS="Note"><b><FONT SIZE=+1>NOTE: </FONT></b>
<A NAME="pgfId=895659">
 </A>
This keyword does not affect all sizing operations. Specifically, the value of UNITS is ignored when setting the XSIZE or YSIZE keywords to <A HREF="idl20b.htm#54171" CLASS="XRef">
WIDGET_TEXT</A>
. </LI>
</UL>
</DIV>
<DIV>
<H4 CLASS="Argument">
<A NAME="pgfId=680586">
 </A>
<A NAME="marker=675005">
 </A>
UVALUE</H4>
<P CLASS="Body">
<A NAME="pgfId=680587">
 </A>
The &quot;user value&quot; to be assigned to the widget.</P>
<P CLASS="Body">
<A NAME="pgfId=680588">
 </A>
Each widget can contain a user-specified value of any data type and organization. This value is not used by the widget in any way, but exists entirely for the convenience of the IDL programmer. This keyword allows you to set this value when the widget is first created.</P>
<P CLASS="Body">
<A NAME="pgfId=680589">
 </A>
If UVALUE is not present, the widget's initial user value is undefined.</P>
</DIV>
<DIV>
<H4 CLASS="Argument">
<A NAME="pgfId=680590">
 </A>
<A NAME="marker=675009">
 </A>
VALUE</H4>
<P CLASS="Body">
<A NAME="pgfId=680591">
 </A>
The initial value setting of the widget. The value of a text widget is the current text displayed by the widget.</P>
<P CLASS="Body">
<A NAME="pgfId=889560">
 </A>
VALUE can be either a string or an array of strings. Note that variables returned by the GET_VALUE keyword to WIDGET_CONTROL are always string arrays, even if a scalar string is specified in the call to WIDGET_TEXT.</P>
</DIV>
<DIV>
<H4 CLASS="Argument">
<A NAME="pgfId=58056">
 </A>
<A NAME="marker=58058">
 </A>
WRAP</H4>
<P CLASS="Body">
<A NAME="pgfId=58057">
 </A>
Set this keyword to indicate that scrolling or multi-line text widgets should automatically break lines between words to keep the text from extending past the right edge of the text display area. Note that carriage returns are <EM CLASS="Emphasis">
not</EM>
 automatically entered when lines wrap; the value of the text widget will remain a single-element array unless you explicitly enter a carriage return.</P>
</DIV>
<DIV>
<H4 CLASS="Argument">
<A NAME="pgfId=680592">
 </A>
<A NAME="marker=675010">
 </A>
XOFFSET</H4>
<P CLASS="Body">
<A NAME="pgfId=680593">
 </A>
The horizontal offset of the widget in units specified by the UNITS keyword (pixels are the default) relative to its parent.</P>
<P CLASS="Body">
<A NAME="pgfId=680594">
 </A>
Specifying an offset relative to a row or column major base widget does not work because those widgets enforce their own layout policies. This keyword is primarily of use relative to a plain base widget. Note that it is best to avoid using this style of widget programming.</P>
</DIV>
<DIV>
<H4 CLASS="Argument">
<A NAME="pgfId=680595">
 </A>
<A NAME="marker=675011">
 </A>
XSIZE</H4>
<P CLASS="Body">
<A NAME="pgfId=933909">
 </A>
The width of the widget in characters. Note that the physical width of the text widget depends on both the value of XSIZE and on the size of the font used. The default value of XSIZE varies according to your windowing system. On Windows and Mac, the default size is roughly 20 characters. On Motif, the default size depends on the width of the text widget.</P>
</DIV>
<DIV>
<H4 CLASS="Argument">
<A NAME="pgfId=680598">
 </A>
<A NAME="marker=675012">
 </A>
YOFFSET</H4>
<P CLASS="Body">
<A NAME="pgfId=680599">
 </A>
The vertical offset of the widget in units specified by the UNITS keyword (pixels are the default) relative to its parent. This offset is specified relative to the <I CLASS="Italic">
upper left</I>
 corner of the parent widget.</P>
<P CLASS="Body">
<A NAME="pgfId=680600">
 </A>
Specifying an offset relative to a row or column major base widget does not work because those widgets enforce their own layout policies. This keyword is primarily of use relative to a plain base widget. Note that it is best to avoid using this style of widget programming.</P>
</DIV>
<DIV>
<H4 CLASS="Argument">
<A NAME="pgfId=680601">
 </A>
<A NAME="marker=675013">
 </A>
YSIZE</H4>
<P CLASS="Body">
<A NAME="pgfId=917467">
 </A>
The height of the widget in text lines. Note that the physical height of the text widget depends on both the value of YSIZE and on the size of the font used. The default value of YSIZE is one line.</P>
</DIV>
</DIV>
<DIV>
<H3 CLASS="Heading-1R">
<A NAME="pgfId=888957">
 </A>
Keywords to WIDGET_CONTROL</H3>
<P CLASS="Body">
<A NAME="pgfId=888958">
 </A>
A number of keywords to the <A HREF="idl202.htm#17837" CLASS="XRef">
WIDGET_CONTROL</A>
 procedure affect the behavior of text widgets. In addition to those keywords that affect all widgets, the following are particularly useful: <A HREF="idl202.htm#88574" CLASS="XRef">
ALL_TEXT_EVENTS</A>
, <A HREF="idl202.htm#92389" CLASS="XRef">
APPEND</A>
, <A HREF="idl202.htm#43861" CLASS="XRef">
EDITABLE</A>
, <A HREF="idl202.htm#27608" CLASS="XRef">
GET_VALUE</A>
, <A HREF="idl202.htm#22212" CLASS="XRef">
KBRD_FOCUS_EVENTS</A>
, <A HREF="idl202.htm#93591" CLASS="XRef">
INPUT_FOCUS</A>
, <A HREF="idl202.htm#26927" CLASS="XRef">
NO_NEWLINE</A>
, <A HREF="idl202.htm#56231" CLASS="XRef">
SET_TEXT_SELECT</A>
, <A HREF="idl202.htm#48385" CLASS="XRef">
SET_TEXT_TOP_LINE</A>
, <A HREF="idl202.htm#76956" CLASS="XRef">
SET_VALUE</A>
, <A HREF="idl202.htm#17668" CLASS="XRef">
USE_TEXT_SELECT</A>
.</P>
</DIV>
<DIV>
<H3 CLASS="Heading-1R">
<A NAME="pgfId=889886">
 </A>
Keywords to WIDGET_INFO</H3>
<P CLASS="Body">
<A NAME="pgfId=911656">
 </A>
A number of keywords to the <A HREF="idl206.htm#45547" CLASS="XRef">
WIDGET_INFO</A>
 function return information that applies specifically to text widgets. In addition to those keywords that apply to all widgets, the following are particularly useful: <A HREF="idl206.htm#21768" CLASS="XRef">
KBRD_FOCUS_EVENTS</A>
, <A HREF="idl206.htm#65193" CLASS="XRef">
TEXT_ALL_EVENTS</A>
, <A HREF="idl206.htm#11134" CLASS="XRef">
TEXT_EDITABLE</A>
, <A HREF="idl206.htm#99800" CLASS="XRef">
TEXT_NUMBER</A>
, <A HREF="idl206.htm#48029" CLASS="XRef">
TEXT_OFFSET_TO_XY</A>
, <A HREF="idl206.htm#78096" CLASS="XRef">
TEXT_SELECT</A>
, <A HREF="idl206.htm#90924" CLASS="XRef">
TEXT_TOP_LINE</A>
, <A HREF="idl206.htm#15922" CLASS="XRef">
TEXT_XY_TO_OFFSET</A>
.</P>
</DIV>
<DIV>
<H3 CLASS="Heading-1R">
<A NAME="pgfId=680604">
 </A>
<A NAME="42563">
 </A>
Text Widget Events</H3>
<P CLASS="Body">
<A NAME="pgfId=680605">
 </A>
<A NAME="marker=675014">
 </A>
 There are several variations of t1he text widget event structure depending on the specific event being reported. All of these structures contain the standard three fields (ID, TOP, and HANDLER) as well as an integer TYPE field that indicates which type of structure has been returned. Programs should always check the type field before referencing fields that are not present in all text event structures. The different text widget event structures are described below.</P>
<DIV>
<H4 CLASS="Argument">
<A NAME="pgfId=680901">
 </A>
Insert Single Character (TYPE = 0)</H4>
<P CLASS="Body">
<A NAME="pgfId=680902">
 </A>
This is the type of structure returned when a single character is typed or pasted into a text widget by a user.</P>
<P CLASS="Code">
<A NAME="pgfId=680558">
 </A>
{ WIDGET_TEXT_CH, ID:0L, TOP:0L, HANDLER:0L, TYPE:0, OFFSET:0L, CH:0B }</P>
<P CLASS="Body">
<A NAME="pgfId=680904">
 </A>
OFFSET is the (zero-based) insertion position that will result after the character is inserted. CH is the ASCII value of the character.</P>
</DIV>
<DIV>
<H4 CLASS="Argument">
<A NAME="pgfId=680905">
 </A>
Insert Multiple Characters (TYPE = 1)</H4>
<P CLASS="Body">
<A NAME="pgfId=680606">
 </A>
This is the type of structure returned when multiple characters are pasted into a text widget by the window system.</P>
<P CLASS="Code">
<A NAME="pgfId=680908">
 </A>
{ WIDGET_TEXT_STR, ID:0L, TOP:0L, HANDLER:0L, TYPE:1, OFFSET:0L, STR:'' }</P>
<P CLASS="Body">
<A NAME="pgfId=680910">
 </A>
OFFSET is the (zero-based) insertion position that will result after the text is inserted. STR is the string to be inserted.</P>
</DIV>
<DIV>
<H4 CLASS="Argument">
<A NAME="pgfId=680912">
 </A>
Delete Text (TYPE = 2)</H4>
<P CLASS="Body">
<A NAME="pgfId=680607">
 </A>
This is the type of structure returned when any amount of text is deleted from a text widget.</P>
<P CLASS="Code-2">
<A NAME="pgfId=680914">
 </A>
{ WIDGET_TEXT_DEL, ID:0L, TOP:0L, HANDLER:0L, TYPE:2, OFFSET:0L,</P>
<P CLASS="Code-2">
<A NAME="pgfId=888773">
 </A>
&nbsp;&nbsp;&nbsp;&nbsp;LENGTH:0L }</P>
<P CLASS="Body">
<A NAME="pgfId=680916">
 </A>
OFFSET is the (zero-based) character position of the first character to be deleted. It is also the insertion position that will result when the characters have been deleted. LENGTH gives the number of characters involved. A LENGTH of zero indicates that no characters were deleted.</P>
</DIV>
<DIV>
<H4 CLASS="Argument">
<A NAME="pgfId=680917">
 </A>
Selection (TYPE = 3)</H4>
<P CLASS="Body">
<A NAME="pgfId=680885">
 </A>
This is the type of structure returned when an area of text is selected (highlighted) by the user.</P>
<P CLASS="Code-2">
<A NAME="pgfId=680918">
 </A>
{ WIDGET_TEXT_SEL, ID:0L, TOP:0L, HANDLER:0L, TYPE:3, OFFSET:0L,</P>
<P CLASS="Code">
<A NAME="pgfId=888774">
 </A>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LENGTH:0L }</P>
<P CLASS="Body">
<A NAME="pgfId=680919">
 </A>
The event announces a change in the insertion point. OFFSET is the (zero-based) character position of the first character to be selected. LENGTH gives the number of characters involved. A LENGTH of zero indicates that no characters are selected, and the new insertion position is given by OFFSET.</P>
<P CLASS="Body">
<A NAME="pgfId=680920">
 </A>
Note that text insertion, text deletion, or any change in the current insertion point causes any current selection to be lost. In such cases, the loss of selection is implied by the text event reporting the insert/delete/movement and a separate zero length selection event is <I CLASS="Italic">
not</I>
 sent.</P>
<DIV>
<H6 CLASS="Heading-3R">
<A NAME="pgfId=911558">
 </A>
Keyboard Focus Events</H6>
<P CLASS="Body">
<A NAME="pgfId=911559">
 </A>
Text widgets return the following event structure when the keyboard focus changes and the base was created with the KBRD_FOCUS_EVENTS keyword set:</P>
<P CLASS="Code">
<A NAME="pgfId=911560">
 </A>
{ WIDGET_KBRD_FOCUS, ID:0L, TOP:0L, HANDLER:0L, ENTER:0 }</P>
<P CLASS="Body">
<A NAME="pgfId=911561">
 </A>
ID is the widget ID of the text widget generating the event. TOP is the widget ID of the top level widget containing ID. HANDLER contains the widget ID of the widget associated with the handler routine. The ENTER field returns 1 (one) if the text widget is gaining the keyboard focus, or 0 (zero) if the text widget is losing the keyboard focus.</P>
</DIV>
</DIV>
</DIV>
<DIV>
<H3 CLASS="Heading-1R">
<A NAME="pgfId=820498">
 </A>
See Also</H3>
<P CLASS="Body">
<A NAME="pgfId=820499">
 </A>
<A HREF="idl5d.htm#99759" CLASS="XRef">
CW_FIELD</A>
, <A HREF="idl21d.htm#58439" CLASS="XRef">
XDISPLAYFILE</A>
</P>
</DIV>
</BODY>
</HTML>
