<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML EXPERIMENTAL 970324//EN">
<HTML>
<STYLE><!--
H1         { font-family: Stone Sans, Helvetica, Arial, sans-serif }
H1.Chapter-Name    { font-size: 36pt }
H2         { font-family: Stone Sans, Helvetica, Arial, sans-serif }
H3         { font-family: Stone Sans, Helvetica, Arial, sans-serif }
H4         { font-family: Stone Sans, Helvetica, Arial, sans-serif }
H5         { font-family: Stone Sans, Helvetica, Arial, sans-serif ;
             margin-top: -5.0pt ; font-size: 12pt }
H6         { font-family: Stone Sans, Helvetica, Arial, sans-serif ;
             margin-top: -5.0pt ; font-size: 12pt }
P          { font-family: Minion, Times, serif }
P.api      { font-family: Courier ; font-weight: Bold }
P.Code     { font-family: Courier, serif ; font-size: 10pt}
P.Code-2   { font-family: Courier, serif ; font-size: 10pt}
P.Code-Result   { font-family: Courier, serif ; font-size: 10pt ;
                  font-weight: Bold}
P.ChapTOC  { font-family: Stone Sans, Helvetica, Arial, sans-serif }
P.Chapter-NameTOC   { font-family: Stone Sans, Helvetica, Arial, sans-serif ;
		      font-size: 20pt; font-weight: Bold }
P.Level2IX	{margin-left: 10pt }
LI.Code-Numbered     { font-family: Courier, serif ; font-size: 10pt}
LI.Code-Numbered-1   { font-family: Courier, serif ; font-size: 10pt}
--></STYLE>

<HEAD>
<META NAME="GENERATOR" CONTENT="Adobe FrameMaker 5.5/HTML Export Filter">

<TITLE> WIDGET_LABEL</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">
<DIV>
<DIV><table width="100%" border=0 cellspacing=0 cellpadding=0> <TR>  <TD></TD>   <TD  bgcolor="#ffffff">     <IMG SRC = "idlmap.gif" USEMAP = "#idlmap.gif" BORDER = 0>   </TD> </TR></TABLE><MAP NAME = "idlmap.gif"><AREA SHAPE=RECT HREF="idl208.htm" COORDS="290, 29, 344, 43"><AREA SHAPE=RECT HREF="idl.htm" COORDS="139, 29, 239, 46"><AREA SHAPE=RECT HREF="idl206.htm" COORDS="0, 29, 98, 46"><AREA SHAPE=RECT HREF="idl.htm" COORDS="68, 0, 275, 18"></MAP></DIV><HR></DIV>
<H2 CLASS="Routine-Name">
<A NAME="pgfId=680377">
 </A>
<A NAME="90331">
 </A>
WIDGET_LABEL</H2>
<P CLASS="Body">
<A NAME="pgfId=680378">
 </A>
The <A NAME="marker=674725">
 </A>
WIDGET_LABEL funct<A NAME="marker=674726">
 </A>
ion is used to create label widgets.</P>
<P CLASS="Body">
<A NAME="pgfId=680379">
 </A>
The returned value of this function is the widget ID of the newly-created label widget.</P>
<DIV>
<H3 CLASS="Heading-1R">
<A NAME="pgfId=680380">
 </A>
Calling Sequence</H3>
<P CLASS="Body">
<A NAME="pgfId=680381">
 </A>
Result = WIDGET_LABEL(<I CLASS="Italic">
Parent</I>
)</P>
</DIV>
<DIV>
<H3 CLASS="Heading-1R">
<A NAME="pgfId=680382">
 </A>
Arguments</H3>
<DIV>
<H4 CLASS="Argument">
<A NAME="pgfId=680383">
 </A>
Parent </H4>
<P CLASS="Body">
<A NAME="pgfId=680384">
 </A>
The widget ID of the parent widget for the new label widget.</P>
</DIV>
</DIV>
<DIV>
<H3 CLASS="Heading-1R">
<A NAME="pgfId=680385">
 </A>
Keywords</H3>
<DIV>
<H4 CLASS="Argument">
<A NAME="pgfId=57967">
 </A>
<A NAME="marker=57966">
 </A>
ALIGN_CENTER</H4>
<P CLASS="Body">
<A NAME="pgfId=57968">
 </A>
Set this keyword to center justify the label text.</P>
</DIV>
<DIV>
<H4 CLASS="Argument">
<A NAME="pgfId=57970">
 </A>
<A NAME="marker=57969">
 </A>
ALIGN_LEFT</H4>
<P CLASS="Body">
<A NAME="pgfId=57971">
 </A>
Set this keyword to left justify the label text.</P>
</DIV>
<DIV>
<H4 CLASS="Argument">
<A NAME="pgfId=57973">
 </A>
<A NAME="marker=57972">
 </A>
ALIGN_RIGHT</H4>
<P CLASS="Body">
<A NAME="pgfId=57974">
 </A>
Set this keyword to right justify the label text.</P>
</DIV>
<DIV>
<H4 CLASS="Argument">
<A NAME="pgfId=192801">
 </A>
<A NAME="marker=192800">
 </A>
DYNAMIC_RESIZE</H4>
<P CLASS="Body">
<A NAME="pgfId=192803">
 </A>
<A NAME="marker=192802">
 </A>
Set this keyword to create a widget that resizes itself to fit its new value whenever its value is changed. Note that this keyword cannot be used with the SCR_XSIZE, SCR_YSIZE, XSIZE, or YSIZE keywords. If one of these keywords is also set, the widget will be sized as specified by the sizing keyword and will never resize itself dynamically.</P>
</DIV>
<DIV>
<H4 CLASS="Argument">
<A NAME="pgfId=680390">
 </A>
<A NAME="marker=108988">
 </A>
FONT</H4>
<P CLASS="Body">
<A NAME="pgfId=934132">
 </A>
The name of the font to be used by the widget. The font specified is a &quot;device font&quot; (an X Windows font on Motif systems; a TrueType or PostScript font on Windows systems). See <A HREF="fonts.html#11429" CLASS="XRef">
</A>
 for details on specifying names for device fonts. If this keyword is omitted, the default font is used.</P>
<UL>
<P CLASS="Note"><b><FONT SIZE=+1>NOTE: </FONT></b>
<A NAME="pgfId=923704">
 </A>
On Microsoft Windows platforms, if FONT is not specified, IDL uses the system default font. Different versions of Windows use different system default fonts; in general, the system default font is the font appropriate for the version of Windows in question. This keyword is not supported on the Macintosh.</LI>
</UL>
</DIV>
<DIV>
<H4 CLASS="Argument">
<A NAME="pgfId=680392">
 </A>
<A NAME="marker=674745">
 </A>
FRAME</H4>
<P CLASS="Body">
<A NAME="pgfId=680393">
 </A>
The value of this keyword specifies the width of a frame in units specified by the UNITS keyword (pixels are the default) to be drawn around the borders of the widget. Note that this keyword is only a &quot;hint&quot; to the toolkit, and may be ignored in some instances.</P>
</DIV>
<DIV>
<H4 CLASS="Argument">
<A NAME="pgfId=680394">
 </A>
<A NAME="marker=108989">
 </A>
FUNC_GET_VALUE</H4>
<P CLASS="Body">
<A NAME="pgfId=680395">
 </A>
A string containing the name of a function to be called when the GET_VALUE keyword to the WIDGET_CONTROL procedure is called for this widget. Using this technique allows you to change the value that should be returned for a widget. Compound widgets use this ability to define their values transparently to the user.</P>
</DIV>
<DIV>
<H4 CLASS="Argument">
<A NAME="pgfId=680396">
 </A>
<A NAME="marker=108990">
 </A>
GROUP_LEADER</H4>
<P CLASS="Body">
<A NAME="pgfId=680397">
 </A>
The widget ID of an existing widget that serves as &quot;group leader&quot; for the newly-created widget. When a group leader is killed, for any reason, all widgets in the group are also destroyed.</P>
<P CLASS="Body">
<A NAME="pgfId=680398">
 </A>
A given widget can be in more than one group. The WIDGET_CONTROL procedure can be used to add additional group associations to a widget. It is not possible to remove a widget from an existing group.</P>
</DIV>
<DIV>
<H4 CLASS="Argument">
<A NAME="pgfId=680399">
 </A>
<A NAME="marker=108991">
 </A>
KILL_NOTIFY</H4>
<P CLASS="Body">
<A NAME="pgfId=680400">
 </A>
Set this keyword to a string that contains the name of a procedure to be called automatically when the specified widget dies. Each widget is allowed a single such &quot;callback&quot; procedure. It can be removed by setting the routine to the null string (<CODE CLASS="Code">
''</CODE>
). Note that the procedure specified is used only if you are not using the XMANAGER procedure to manage your widgets.</P>
<P CLASS="Body">
<A NAME="pgfId=680401">
 </A>
The callback routine is called with the widget identifier as its only argument. At that point, the widget identifier can only be used with the WIDGET_CONTROL procedure to get or set the user value. All other requests that require a widget ID are disallowed for the target widget. The callback is not issued until the WIDGET_EVENT function is called.</P>
<P CLASS="Body">
<A NAME="pgfId=158837">
 </A>
If you use the XMANAGER procedure to manage your widgets, the value of this keyword is overwritten. Use the CLEANUP keyword to XMANAGER to specify a procedure to be called when a managed widget dies.</P>
</DIV>
<DIV>
<H4 CLASS="Argument">
<A NAME="pgfId=680402">
 </A>
<A NAME="marker=108992">
 </A>
NO_COPY</H4>
<P CLASS="Body">
<A NAME="pgfId=913986">
 </A>
Usually, when setting or getting widget user values, either at widget creation or using the SET_UVALUE and GET_UVALUE keywords to WIDGET_CONTROL, IDL makes a second copy of the data being transferred. Although this technique is fine for small data, it can have a significant memory cost when the data being copied is large.</P>
<P CLASS="Body">
<A NAME="pgfId=913987">
 </A>
If the NO_COPY keyword is set, IDL handles these operations differently. Rather than copy the source data, it takes the data away from the source and attaches it directly to the destination. This feature can be used by compound widgets to obtain state information from a UVALUE without all the memory copying that would otherwise occur. However, it has the side effect of causing the source variable to become undefined. On a &quot;set&quot; operation (using the UVALUE keyword to WIDGET_LABEL or the SET_UVALUE keyword to WIDGET_CONTROL), the variable passed as value becomes undefined. On a &quot;get&quot; operation (GET_UVALUE keyword to WIDGET_CONTROL), the user value of the widget in question becomes undefined.</P>
</DIV>
<DIV>
<H4 CLASS="Argument">
<A NAME="pgfId=67628">
 </A>
<A NAME="marker=108993">
 </A>
NOTIFY_REALIZE</H4>
<P CLASS="Body">
<A NAME="pgfId=67631">
 </A>
Set this keyword to a string that contains the name of a procedure to be called automatically when the specified widget is realized. This callback occurs just once (because widgets are realized only once). Each widget is allowed a single such &quot;callback&quot; procedure. It can be removed by setting the routine to the null string (<CODE CLASS="Code">
''</CODE>
). The callback routine is called with the widget ID as its only argument.</P>
</DIV>
<DIV>
<H4 CLASS="Argument">
<A NAME="pgfId=680404">
 </A>
<A NAME="marker=108994">
 </A>
PRO_SET_VALUE</H4>
<P CLASS="Body">
<A NAME="pgfId=680405">
 </A>
A string containing the name of a procedure to be called when the SET_VALUE keyword to the WIDGET_CONTROL procedure is called for this widget. Using this technique allows you to designate a routine that sets the value for a widget. Compound widgets use this ability to define their values transparently to the user.</P>
</DIV>
<DIV>
<H4 CLASS="Argument">
<A NAME="pgfId=724047">
 </A>
<A NAME="marker=724045">
 </A>
RESOURCE_NAME</H4>
<P CLASS="Body">
<A NAME="pgfId=734109">
 </A>
A string containing an X Window System resource name to be applied to the widget. See <A HREF="idl200.htm#71756" CLASS="XRef">
RESOURCE_NAME</A>
 for a complete discussion of this keyword.</P>
</DIV>
<DIV>
<H4 CLASS="Argument">
<A NAME="pgfId=67301">
 </A>
<A NAME="marker=67300">
 </A>
SCR_XSIZE</H4>
<P CLASS="Body">
<A NAME="pgfId=67302">
 </A>
Set this keyword to the desired &quot;screen&quot; width of the widget, in units specified by the UNITS keyword (pixels are the default). In many cases, setting this keyword is the same as setting the XSIZE keyword.</P>
</DIV>
<DIV>
<H4 CLASS="Argument">
<A NAME="pgfId=67304">
 </A>
<A NAME="marker=67303">
 </A>
SCR_YSIZE</H4>
<P CLASS="Body">
<A NAME="pgfId=67305">
 </A>
Set this keyword to the desired &quot;screen&quot; height of the widget, in units specified by the UNITS keyword (pixels are the default). In many cases, setting this keyword is the same as setting the YSIZE keyword.</P>
</DIV>
<DIV>
<H4 CLASS="Argument">
<A NAME="pgfId=67390">
 </A>
<A NAME="marker=108995">
 </A>
TRACKING_EVENTS</H4>
<P CLASS="Body">
<A NAME="pgfId=67391">
 </A>
Set this keyword to cause widget tracking events to be issued for the widget whenever the mouse pointer enters or leaves the region covered by that widget. For the structure of tracking events, see <A HREF="idl200.htm#72083" CLASS="XRef">
TRACKING_EVENTS</A>
 in the documentation for WIDGET_BASE.</P>
</DIV>
<DIV>
<H4 CLASS="Argument">
<A NAME="pgfId=895601">
 </A>
<A NAME="marker=895600">
 </A>
UNITS</H4>
<P CLASS="Body">
<A NAME="pgfId=895603">
 </A>
Set UNITS equal to 0 (zero) to specify that all measurements are in pixels (this is the default), to 1 (one) to specify that all measurements are in inches, or to 2 (two) to specify that all measurements are in centimeters.</P>
</DIV>
<DIV>
<H4 CLASS="Argument">
<A NAME="pgfId=680406">
 </A>
<A NAME="marker=674782">
 </A>
UVALUE</H4>
<P CLASS="Body">
<A NAME="pgfId=680407">
 </A>
The &quot;user value&quot; to be assigned to the widget.</P>
<P CLASS="Body">
<A NAME="pgfId=680408">
 </A>
Each widget can contain a user-specified value of any data type and organization. This value is not used by the widget in any way, but exists entirely for the convenience of the IDL programmer. This keyword allows you to set this value when the widget is first created.</P>
<P CLASS="Body">
<A NAME="pgfId=680409">
 </A>
If UVALUE is not present, the widget's initial user value is undefined.</P>
</DIV>
<DIV>
<H4 CLASS="Argument">
<A NAME="pgfId=680410">
 </A>
<A NAME="marker=674786">
 </A>
VALUE</H4>
<P CLASS="Body">
<A NAME="pgfId=680411">
 </A>
The initial value setting of the widget. The value of a widget label is a string containing the text for the label.</P>
</DIV>
<DIV>
<H4 CLASS="Argument">
<A NAME="pgfId=680412">
 </A>
<A NAME="marker=674787">
 </A>
XOFFSET</H4>
<P CLASS="Body">
<A NAME="pgfId=680413">
 </A>
The horizontal offset of the widget in units specified by the UNITS keyword (pixels are the default) relative to its parent.</P>
<P CLASS="Body">
<A NAME="pgfId=680414">
 </A>
Specifying an offset relative to a row or column major base widget does not work because those widgets enforce their own layout policies. This keyword is primarily of use relative to a plain base widget. Note that it is best to avoid using this style of widget programming.</P>
</DIV>
<DIV>
<H4 CLASS="Argument">
<A NAME="pgfId=680415">
 </A>
<A NAME="marker=674788">
 </A>
XSIZE</H4>
<P CLASS="Body">
<A NAME="pgfId=680416">
 </A>
The width of the widget in units specified by the UNITS keyword (pixels are the default). Most widgets attempt to size themselves to fit the situation. However, if the desired effect is not produced, use this keyword to override it. This keyword is only a &quot;hint&quot; to the toolkit and may be ignored in some situations.</P>
</DIV>
<DIV>
<H4 CLASS="Argument">
<A NAME="pgfId=680418">
 </A>
<A NAME="marker=674789">
 </A>
YOFFSET</H4>
<P CLASS="Body">
<A NAME="pgfId=680419">
 </A>
The vertical offset of the widget in units specified by the UNITS keyword (pixels are the default) relative to its parent. This offset is specified relative to the <I CLASS="Italic">
upper left</I>
 corner of the parent widget.</P>
<P CLASS="Body">
<A NAME="pgfId=680420">
 </A>
Specifying an offset relative to a row or column major base widget does not work because those widgets enforce their own layout policies. This keyword is primarily of use relative to a plain base widget. Note that it is best to avoid using this style of widget programming.</P>
</DIV>
<DIV>
<H4 CLASS="Argument">
<A NAME="pgfId=680421">
 </A>
<A NAME="marker=674790">
 </A>
YSIZE</H4>
<P CLASS="Body">
<A NAME="pgfId=680422">
 </A>
The height of the widget in units specified by the UNITS keyword (pixels are the default). Most widgets attempt to size themselves to fit the situation. However, if the desired effect is not produced, use this keyword to override it. This keyword is only a &quot;hint&quot; to the toolkit and may be ignored in some situations.</P>
</DIV>
</DIV>
<DIV>
<H3 CLASS="Heading-1R">
<A NAME="pgfId=888906">
 </A>
Keywords to WIDGET_CONTROL</H3>
<P CLASS="Body">
<A NAME="pgfId=888907">
 </A>
A number of keywords to the <A HREF="idl202.htm#17837" CLASS="XRef">
WIDGET_CONTROL</A>
 procedure affect the behavior of label widgets. In addition to those keywords that affect all widgets, the following are particularly useful: <A HREF="idl202.htm#69286" CLASS="XRef">
DYNAMIC_RESIZE</A>
, <A HREF="idl202.htm#27608" CLASS="XRef">
GET_VALUE</A>
, <A HREF="idl202.htm#76956" CLASS="XRef">
SET_VALUE</A>
.</P>
</DIV>
<DIV>
<H3 CLASS="Heading-1R">
<A NAME="pgfId=889805">
 </A>
Keywords to WIDGET_INFO</H3>
<P CLASS="Body">
<A NAME="pgfId=889809">
 </A>
Some keywords to the <A HREF="idl206.htm#45547" CLASS="XRef">
WIDGET_INFO</A>
 function return information that applies specifically to label widgets. In addition to those keywords that apply to all widgets, the following are particularly useful: <A HREF="idl206.htm#62955" CLASS="XRef">
DYNAMIC_RESIZE</A>
.</P>
</DIV>
<DIV>
<H3 CLASS="Heading-1R">
<A NAME="pgfId=716756">
 </A>
Widget Events Returned by Label Widgets</H3>
<P CLASS="Body">
<A NAME="pgfId=716754">
 </A>
Label widgets do not return an event structure.</P>
</DIV>
<DIV>
<H3 CLASS="Heading-1R">
<A NAME="pgfId=820508">
 </A>
See Also</H3>
<P CLASS="Body">
<A NAME="pgfId=891098">
 </A>
<A HREF="idl5d.htm#99759" CLASS="XRef">
CW_FIELD</A>
, <A HREF="idl20b.htm#54171" CLASS="XRef">
WIDGET_TEXT</A>
</P>
</DIV>
</BODY>
</HTML>
